{"version":3,"sources":["Tfjs.js","ProgressBar.js","BlockCode.js","PythonCodeBase.js","BluetoothConnect.js","App.js","index.js","uuid.js"],"names":["TfMain","camera","machineId","ipAddress","setProbability","console","log","this","infoTexts","data","label","training","videoPlaying","trained","inputFirst","isTraining","numClasses","completeModel","exampleCount","Array","fill","lastChildAddClass","result","resultConfidence","piboxPy","body","document","undefined","current","bindPage","video","createElement","appendChild","i","div","style","marginBottom","button","innerText","addEventListener","infoText","push","src","width","height","crossOrigin","tf","mobilenet","layer","getLayer","inputs","outputs","output","loadMobileNet","trainable","predict","start","timer","stop","tagName","play","requestAnimationFrame","animate","bind","pause","cancelAnimationFrame","length","trainButton","getElementById","labels","model","denseLayer1","dense","inputShape","shape","slice","units","activation","use_bias","kernel_initializer","denseLayer2","add","compile","optimizer","adam","loss","metrics","forEach","e","parseInt","oldLabels","concat","dispose","fit","epochs","batchSize","callbacks","onBatchEnd","batch","logs","acc","then","info","history","save","http","requestInit","method","headers","machine_id","image","IMAGE_SIZE","canvasEl","toString","canvas","className","insertBefore","firstChild","childNodes","removeChild","lastChild","ctx","getContext","imageData","ImageData","dataSync","j","putImageData","nowClass","ms","Promise","resolve","setTimeout","fromPixels","resizeBilinear","infer","expandDims","toFloat","sub","newX","oldData","draw","logits","predictedClass","as1D","argMax","res","confidence","fontWeight","Math","round","sleep","ProgressBar","props","bgcolor","completed","fillerStyles","backgroundColor","borderRadius","textAlign","margin","padding","color","BlockCode","useState","setLabels","ch1OutputType","setCh1OutputType","ch2OutputType","setCh2OutputType","ch1OutputAmount","setCh1OutputAmount","ch2OutputAmount","setCh2OutputAmount","tfFunc","setTfFunc","moveMotorThreshold","checkMove","setCheckMove","piboxUploadBtnName","setPiboxUploadBtnName","checkTime","setCheckTime","probability","useRef","useEffect","getSetOutput","setOutputContext","getIfContext","chk","context","index","func","noOutputCh1","noOutputCh2","isNaN","parseFloat","r","g","b","getBackContext","back","downloadPy","a","download","front2","middleIf","file","Blob","type","piForm","FormData","append","fetch","mode","cache","credentials","redirect","referrer","sendCommand","uploadUUID","error","sendMoving","alert","Date","now","url","ch1Command","ch2Command","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","onClick","setIsBlockCoding","display","marginLeft","position","ref","train","cursor","marginRight","state","alt","map","key","floor","top","onMouseDown","addTrainingData","onMouseUp","onMouseLeave","size","noshade","marginTop","onChange","value","target","newState","fontSize","defaultValue","rgb","onChangeComplete","selectOutputMount","addClass","BluetoothConnect","connectDevice","navigator","bluetooth","requestDevice","filters","services","UUID","SERVICE_ID","device","gatt","connect","server","setState","serverId","getPrimaryService","service","isIphone","webBleConnect","getCharacteristics","characteristics","characteristicsList","isConnected","infoList","preset","uuid","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","subscribeCharacteristic","readInfoCharacteristic","NOTIFY_MESSAGE","CUSTOM_COMMAND_NOTIFY","filter","indexOf","CUSTOM_INFO_LABEL","item","replace","CUSTOM_INFO","uuid_label","tempCharList","CUSTOM_COMMAND_LABEL","commandList","readCommandLabel","catch","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","event","msg","notify","show","commandOutputShouldRefresh","commandOutput","endsWith","startNotifications","getCharacteristic","PREFIX","CUSTOM_INFO_COUNT","characteristic","customInfoCount","CUSTOM_COMMAND_COUNT","customCommandCount","customInfoList","ending","repeat","customCommandList","all","SERVICE_NAME","INPUT_SEP","CUSTOM_COMMAND_INPUT","buf","String","fromCharCode","apply","Uint8Array","inputWifi","trim","ssid","password","errMsg","wifiLock","wifiReset","sendArray","str2abs","sendSeparately","array","writeValue","wait","sec","waitCamera","resp","ok","str","val","charCodeAt","valArray","split","bufferArray","splice","join","match","h","setIsBlockCodingToFalse","isBlockCoding","c","supportBluetooth","Boolean","window","loading","charLength","isAndroid","userAgent","wifiConnected","toLowerCase","href","placeholder","disabled","React","Component","App","ReactDOM","render","module","exports","INPUT"],"mappings":"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","file":"static/js/main.01aa5f8b.chunk.js","sourcesContent":["// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as tf from \"@tensorflow/tfjs\";\n\n// Number of classes to classify\nconst NUM_CLASSES = 2;\n// Webcam Image size. Must be 224.\nconst IMAGE_SIZE = 96;\n\nexport class TfMain {\n  constructor(camera, machineId, ipAddress, setProbability) {\n    console.log(machineId);\n    // Initiate variables\n    this.infoTexts = [];\n    this.data = null;\n    this.label = [];\n    this.training = -1; // -1 when no class is being trained\n    this.videoPlaying = false;\n    this.trained = false;\n    this.inputFirst = true;\n    this.isTraining = false;\n    this.ipAddress = ipAddress;\n    this.numClasses = NUM_CLASSES;\n    this.completeModel = null;\n    this.exampleCount = new Array(NUM_CLASSES).fill(0);\n    this.lastChildAddClass = null;\n    this.machineId = machineId;\n    this.result = -1;\n    this.resultConfidence = 0;\n    this.piboxPy = \"\";\n    this.setProbability = setProbability;\n\n    this.body = document.body;\n    if (camera.current !== undefined) {\n      this.body = camera.current;\n    }\n\n    this.bindPage();\n\n    // // Create video element that will contain the webcam image\n    // this.video = document.createElement(\"video\");\n    // this.video.setAttribute(\"autoplay\", \"\");\n    // this.video.setAttribute(\"playsinline\", \"\");\n\n    // Create image element for picamera streaming\n    this.video = document.createElement(\"img\");\n\n    // Add video element to DOM\n    this.body.appendChild(this.video);\n\n    // Create training buttons and info texts\n    for (let i = 0; i < this.numClasses; i++) {\n      const div = document.createElement(\"div\");\n      this.lastChildAddClass = div;\n      this.body.appendChild(div);\n\n      div.style.marginBottom = \"10px\";\n\n      // Create training button\n      const button = document.createElement(\"button\");\n      button.innerText = \"데이터 추가 - 클래스 \" + (i + 1);\n      //div.appendChild(button);\n\n      // Listen for mouse events when clicking the button\n      button.addEventListener(\"mousedown\", () => (this.training = i));\n      button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n      // Create info text\n      const infoText = document.createElement(\"span\");\n      infoText.innerText = \" 추가된 데이터가 없습니다.\";\n      //div.appendChild(infoText);\n      this.infoTexts.push(infoText);\n    }\n\n    // let div = document.createElement(\"div\");\n    // this.lastChildAddClass = div;\n    // this.body.appendChild(div);\n    // div.style.marginBottom = \"10px\";\n\n    // Create training button\n    // let button = document.createElement(\"button\");\n    // button.innerText = \"PLAi 학습하기\";\n    // button.id = \"trainButton\";\n    // div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    // button.addEventListener(\"mouseup\", () => this.train());\n\n    // div = document.createElement(\"div\");\n    // this.body.appendChild(div);\n    // div.style.marginBottom = \"10px\";\n\n    // Create training button\n    // button = document.createElement(\"button\");\n    // button.innerText = \"학습한 모델 저장\";\n    // button.id = \"modelSave\";\n    // div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    // button.addEventListener(\"mouseup\", () => {\n    //   this.download();\n    // });\n\n    //using webcam\n    if (0) {\n      // Setup webcam\n      navigator.mediaDevices\n        .getUserMedia({\n          video: { width: IMAGE_SIZE, height: IMAGE_SIZE },\n          audio: false,\n        })\n        .then((stream) => {\n          this.video.srcObject = stream;\n          this.video.width = IMAGE_SIZE;\n          this.video.height = IMAGE_SIZE;\n\n          this.video.addEventListener(\"playing\", () => (this.videoPlaying = true));\n          this.video.addEventListener(\"paused\", () => (this.videoPlaying = false));\n        });\n    }\n    //using picamera\n    if (1) {\n      this.video.src = \"http://\" + this.ipAddress + \":8000/stream.mjpg\";\n      this.video.width = 224;\n      this.video.height = 224;\n      this.video.crossOrigin = \"anonymous\";\n    }\n  }\n\n  addTrainingData(label) {\n    this.training = label;\n  }\n\n  async loadMobileNet() {\n    const mobilenet = await tf.loadLayersModel(`./assets/${IMAGE_SIZE}_0.35/model.json`);\n    const layer = mobilenet.getLayer(IMAGE_SIZE === 160 ? \"global_average_pooling2d\" : \"global_average_pooling2d_1\");\n    return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n  }\n\n  async bindPage() {\n    this.mobilenet = await this.loadMobileNet();\n    this.mobilenet.trainable = false;\n    this.mobilenet.predict(tf.zeros([1, IMAGE_SIZE, IMAGE_SIZE, 3]));\n\n    //tf.setBackend(\"webgl\");\n    //console.log(this.model.summary());\n\n    this.start();\n  }\n\n  start() {\n    if (this.timer) {\n      this.stop();\n    }\n    if (this.video.tagName === \"video\") this.video.play();\n    else this.videoPlaying = true;\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  stop() {\n    if (this.video.tagName === \"video\") this.video.pause();\n    this.videoPlaying = false;\n    cancelAnimationFrame(this.timer);\n  }\n\n  train() {\n    if (!this.isTraining && this.label.length !== 0) {\n      this.isTraining = true;\n      const trainButton = document.getElementById(\"trainButton\");\n      //trainButton.innerText = \"잠시 기다려주세요...\";\n      //trainButton.disabled = true;\n      trainButton.src = \"img/plai_training.svg\";\n      console.log(\"train start\");\n\n      let labels = null;\n      this.model = tf.sequential();\n      this.denseLayer1 = tf.layers.dense({\n        inputShape: this.mobilenet.outputs[0].shape.slice(1),\n        units: 100,\n        activation: \"relu\",\n        use_bias: true,\n        kernel_initializer: \"varianceScaling\",\n      });\n      this.denseLayer2 = tf.layers.dense({\n        units: this.numClasses,\n        activation: \"softmax\",\n        use_bias: false,\n        kernel_initializer: \"varianceScaling\",\n      });\n\n      this.model.add(this.denseLayer1);\n      this.model.add(this.denseLayer2);\n      this.model.compile({\n        optimizer: tf.train.adam(0.0001),\n        loss: \"categoricalCrossentropy\",\n        metrics: [\"accuracy\"],\n      });\n\n      this.label.forEach((e) => {\n        const label = tf.oneHot(tf.tensor1d([parseInt(e)], \"int32\"), this.numClasses);\n        if (labels === null) labels = label;\n        else {\n          const oldLabels = labels;\n          labels = oldLabels.concat(label, 0);\n          oldLabels.dispose();\n        }\n      });\n      //this.data.print();\n      //labels.print();\n      function onBatchEnd(batch, logs) {\n        console.log(\"Accuracy\", logs.acc);\n      }\n      this.model\n        .fit(this.data, labels, {\n          epochs: 20,\n          batchSize: parseInt(this.label.length * 0.4),\n          callbacks: { onBatchEnd },\n        })\n        .then((info) => {\n          console.log(\"Final accuracy\", info.history.acc);\n          this.trained = true;\n          this.isTraining = false;\n          trainButton.src = \"img/plai_train.svg\";\n          //trainButton.innerText = \"PLAi 학습하기\";\n          //trainButton.disabled = false;\n        });\n    }\n  }\n\n  async download() {\n    // const saveButton = document.getElementById(\"modelSave\");\n    // saveButton.innerText = \"잠시 기다려주세요...\";\n    // saveButton.disabled = true;\n    this.completeModel = tf.sequential();\n    this.completeModel.add(this.mobilenet);\n    try {\n      this.completeModel.add(this.model);\n    } catch (error) {\n      return false;\n    }\n\n    try {\n      //await this.completeModel.save(\"downloads://model\");\n      await this.completeModel.save(\n        tf.io.http(\"https://tfjson-to-tflite.unicityclean.com/upload\", {\n          //tf.io.http(\"http://tfjson-to-tflite-2053599458.ap-northeast-2.elb.amazonaws.com/upload\", {\n          requestInit: {\n            method: \"POST\",\n            headers: { machine_id: this.machineId },\n          },\n        })\n      );\n      // saveButton.innerText = \"(성공)학습한 모델 저장\";\n      // saveButton.disabled = false;\n      return true;\n    } catch (error) {\n      // saveButton.innerText = \"(실패)학습한 모델 저장\";\n      // saveButton.disabled = false;\n      return false;\n    }\n  }\n\n  async draw(image, label) {\n    const [width, height] = [IMAGE_SIZE / 2, IMAGE_SIZE / 2];\n    const canvasEl = document.getElementById(\"canvas-\" + label.toString());\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = width;\n    canvas.height = height;\n    canvas.className = \"cameraData\";\n    canvasEl.insertBefore(canvas, canvasEl.firstChild);\n    if (canvasEl.childNodes.length > 25) canvasEl.removeChild(canvasEl.lastChild);\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = new ImageData(width, height);\n    const data = image.dataSync();\n    for (let i = 0; i < height * width; ++i) {\n      const j = i * 4;\n      imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\n      imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\n      imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\n      imageData.data[j + 3] = 255;\n    }\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  addClass() {\n    this.exampleCount.push(0);\n    this.numClasses += 1;\n    const div = document.createElement(\"div\");\n\n    this.body.insertBefore(div, this.lastChildAddClass);\n\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    const button = document.createElement(\"button\");\n    button.innerText = \"데이터 추가 - 클래스 \" + this.numClasses;\n    //div.appendChild(button);\n    const nowClass = this.numClasses;\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mousedown\", () => (this.training = nowClass - 1));\n    button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n    // Create info text\n    const infoText = document.createElement(\"span\");\n    infoText.innerText = \" 추가된 데이터가 없습니다.\";\n    //div.appendChild(infoText);\n    this.infoTexts.push(infoText);\n  }\n\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  async animate() {\n    if (this.videoPlaying) {\n      // Get image data from video element\n      const image = tf.browser.fromPixels(this.video).resizeBilinear([96, 96]);\n\n      let logits;\n      // 'conv_preds' is the logits activation of MobileNet.\n      const infer = () =>\n        tf.tidy(() => this.model.predict(this.mobilenet.predict(image.expandDims(0).toFloat().div(127).sub(1))));\n\n      // Train class if one of the buttons is held down\n      if (this.training !== -1) {\n        const newX = image.expandDims(0).toFloat().div(127).sub(1);\n        // Add current image to classifier\n        if (!this.inputFirst) {\n          const oldData = this.data;\n          this.data = oldData.concat(this.mobilenet.predict(newX), 0);\n          this.label.push(this.training);\n          oldData.dispose();\n        } else {\n          this.data = this.mobilenet.predict(newX);\n          this.label.push(this.training);\n          this.inputFirst = false;\n        }\n        await this.draw(newX.resizeBilinear([48, 48]), this.training);\n        this.exampleCount[this.training] += 1;\n        newX.dispose();\n      }\n\n      //if (hasClass(this.data.map(e => e.length)) > 0) {\n      if (this.trained) {\n        // If classes have been added run predict\n        logits = infer();\n        const predictedClass = logits.as1D().argMax();\n\n        const res = (await predictedClass.data())[0];\n        const confidence = await logits.data();\n        this.setProbability(confidence);\n        for (let i = 0; i < this.numClasses; i++) {\n          // Make the predicted class bold\n          if (res === i) {\n            this.infoTexts[i].style.fontWeight = \"bold\";\n            this.result = i;\n            this.resultConfidence = confidence[i] * 100;\n          } else {\n            this.infoTexts[i].style.fontWeight = \"normal\";\n          }\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples - ${Math.round(confidence[i] * 100)}%`;\n          }\n        }\n        predictedClass.dispose();\n      } else {\n        for (let i = 0; i < this.numClasses; i++) {\n          // The number of examples for each class\n\n          // Update info text\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples`;\n          }\n        }\n      }\n\n      // Dispose image when done\n      image.dispose();\n      if (logits != null) {\n        logits.dispose();\n      }\n    }\n    this.sleep(20);\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\n//window.addEventListener(\"load\", () => new Main());\n","import React from \"react\";\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 50,\n    margin: 8,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n    //transition: \"width 0.5s ease-in-out\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { SliderPicker } from \"react-color\";\nimport { TfMain } from \"./Tfjs\";\nimport { front, middle } from \"./PythonCodeBase\";\nimport ProgressBar from \"./ProgressBar\";\n\nexport default function BlockCode(props) {\n  let fileReader;\n  const [labels, setLabels] = useState([\"Class 01\", \"Class 02\"]);\n  const [ch1OutputType, setCh1OutputType] = useState(0);\n  const [ch2OutputType, setCh2OutputType] = useState(0);\n  const [ch1OutputAmount, setCh1OutputAmount] = useState([]);\n  const [ch2OutputAmount, setCh2OutputAmount] = useState([]);\n  const [tfFunc, setTfFunc] = useState(null);\n  const [moveMotorThreshold, setMoveMotorThreshold] = useState(80);\n  const [checkMove, setCheckMove] = useState(false);\n  const [piboxUploadBtnName, setPiboxUploadBtnName] = useState(\"블록코드 업로드\");\n  const [checkTime, setCheckTime] = useState(0);\n  const [probability, setProbability] = useState([0, 0]);\n  const camera = useRef(\"\");\n  const piboxUploadBtn = useRef(\"\");\n\n  useEffect(() => {\n    if (camera.current !== undefined && props.machineId !== \"\") {\n      setTfFunc(new TfMain(camera, props.machineId, props.ipAddress, setProbability));\n      setCh1OutputAmount(new Array(2).fill(\"\"));\n      setCh2OutputAmount(new Array(2).fill(\"\"));\n    } // eslint-disable-next-line\n  }, [camera, props.machineId]);\n\n  const uploadFile = (file) => {\n    // 파일이 입력되면 먼저 여기로 들어오게된다.\n    // 파일입력이 없음에도 들어오면 바로 컷\n    if (file === undefined) {\n      return;\n    }\n\n    fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      const content = fileReader.result;\n      const result = [];\n      content.split(\"\\n\").forEach((label) => {\n        result.push(label.substr(2));\n        console.log(label);\n      });\n      if (result[result.length - 1] === \"\") {\n        result.pop();\n      }\n      setLabels(result);\n      setCh1OutputType(0);\n      setCh2OutputType(0);\n      setCh1OutputAmount(new Array(result.length).fill(\"\"));\n      setCh2OutputAmount(new Array(result.length).fill(\"\"));\n    };\n    fileReader.readAsText(file);\n  };\n\n  function addClass() {\n    tfFunc.addClass();\n    setLabels((state) => [...state, `Class ${labels.length + 1}`]);\n    setCh1OutputAmount((state) => [...state, \"\"]);\n    setCh2OutputAmount((state) => [...state, \"\"]);\n    setProbability((state) => [...state, 0]);\n  }\n\n  function getSetOutput() {\n    let setOutputContext = `GPIO.setmode(GPIO.BCM)\npwm = pigpio.pi() \n    `;\n    // 서보모터\n    if (ch1OutputType === 1)\n      setOutputContext += `\npwm.set_mode(18, pigpio.OUTPUT)\n`;\n    else if (ch1OutputType === 2)\n      setOutputContext += `\nGPIO.setup(18,GPIO.OUT) # Channel 1 Speed\nGPIO.setup(23,GPIO.OUT) # Direction of Channel 1\nGPIO.output(23,0) \nm1=GPIO.PWM(18,50)\nm1.start(0)\n`;\n    else if (ch1OutputType === 3 && ch2OutputType !== 3)\n      setOutputContext += `\npix1 = neopixel.NeoPixel(board.D18,12)\n`;\n    // 서보모터\n    if (ch2OutputType === 1)\n      setOutputContext += `\npwm.set_mode(12, pigpio.OUTPUT)\n`;\n    else if (ch2OutputType === 2)\n      setOutputContext += `\nGPIO.setup(12,GPIO.OUT) # Channel 2 Speed\nGPIO.setup(25,GPIO.OUT)\nGPIO.output(25,0) # Direction of Channel 2\nm2=GPIO.PWM(12,50)\nm2.start(0)\n`;\n    else if (ch2OutputType === 3 && ch1OutputType !== 3)\n      setOutputContext += `\npix2 = neopixel.NeoPixel(board.D12,12)\n`;\n    return setOutputContext;\n  }\n  function getIfContext() {\n    let chk = 0;\n    let context = `    # From here. the block code\n    resultIndex = np.argmax(result)\n`;\n    labels.forEach((label, index) => {\n      let func = \"\";\n      let noOutputCh1 = false;\n      let noOutputCh2 = false;\n      if (ch1OutputType === 0) noOutputCh1 = true;\n      else if (ch1OutputType === 1) {\n        if (isNaN(parseFloat(ch1OutputAmount[index]))) noOutputCh1 = true;\n        else\n          func += `pwm.set_servo_pulsewidth(18,${\n            (parseFloat(ch1OutputAmount[index]) / 180) * 2000 + 500\n          }) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      }\n      // 서보모터\n      else if (ch1OutputType === 2)\n        func += `m1.ChangeDutyCycle(${ch1OutputAmount[index][1]})\n        GPIO.output(23,${ch1OutputAmount[index][0]}) # Control direction\n        ${\n          ch2OutputType === 2\n            ? \"\"\n            : `time.sleep(${ch1OutputAmount[index][2]})\n        m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)\n        `\n        }\n        `;\n      // 모터\n      else if (ch1OutputType === 3)\n        func += `pix1.fill((${ch1OutputAmount[index].r},${ch1OutputAmount[index].g},${ch1OutputAmount[index].b}))\n        pix1.show()\n        `;\n      // LED\n      else noOutputCh1 = true;\n      if (ch2OutputType === 0) noOutputCh2 = true;\n      else if (ch2OutputType === 1) {\n        if (isNaN(parseFloat(ch2OutputAmount[index]))) noOutputCh2 = true;\n        else\n          func += `pwm.set_servo_pulsewidth(12,${\n            (parseFloat(ch2OutputAmount[index]) / 180) * 2000 + 500\n          }) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      }\n      // 서보모터\n      else if (ch2OutputType === 2)\n        func += `m2.ChangeDutyCycle(${ch2OutputAmount[index][1]})\n        GPIO.output(25,${ch2OutputAmount[index][0]}) # Control direction\n        time.sleep(${ch2OutputAmount[index][2]})\n        ${\n          ch1OutputType === 2\n            ? `m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)`\n            : \"\"\n        }\n        m2.ChangeDutyCycle(0)\n        GPIO.output(25,0)\n        `;\n      // 모터\n      else if (ch2OutputType === 3)\n        func += `pix2.fill((${ch2OutputAmount[index].r},${ch2OutputAmount[index].g},${ch2OutputAmount[index].b}))\n        pix2.show()\n        `;\n      // LED\n      else noOutputCh2 = true;\n      if (noOutputCh1 === true && noOutputCh2 === true) return;\n      if (ch1OutputType === 1 && ch1OutputAmount[index] !== \"\")\n        if (chk === 0) {\n          context += `\n    if `;\n          chk = 1;\n        } else\n          context += `\n    elif `;\n      context += `resultIndex == ${index}:\n        ${func}\n        `;\n    });\n    return context;\n  }\n  function getBackContext() {\n    let back = `\n# Clean up\ncv2.destroyAllWindows()\nvideostream.stop()\n`;\n\n    if (ch1OutputType === 1 || ch2OutputType === 1) {\n      back += `pwm.stop()\n`;\n    }\n    if (ch1OutputType === 2) {\n      back += `m1.stop()\n`;\n    }\n    if (ch2OutputType === 2) {\n      back += `m2.stop()\n`;\n    }\n    back += `GPIO.cleanup()\n`;\n    return back;\n  }\n  const downloadPy = async () => {\n    setPiboxUploadBtnName(\"잠시만 기다려주세요...\");\n    //piboxUploadBtn.current.disabled = true;\n    const isModel = await tfFunc.download();\n    if (!isModel) {\n      return;\n    }\n    //const element = document.createElement(\"a\");\n    const front2 = getSetOutput();\n    const middleIf = getIfContext();\n    const back = getBackContext();\n    const file = new Blob([front, front2, middle, middleIf, back], {\n      type: \"text/plain\",\n    });\n    // element.href = URL.createObjectURL(file);\n    // element.download = \"pibox.py\";\n    // document.body.appendChild(element); // Required for this to work in FireFox\n    //element.click();\n    const piForm = new FormData();\n    piForm.append(\"pibox\", file, \"pibox.py\");\n    try {\n      fetch(\"https://tfjson-to-tflite.unicityclean.com/pibox\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          machine_id: props.machineId,\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: piForm,\n      })\n        .then(() => {\n          props.sendCommand(props.uploadUUID);\n        })\n        .then(() => {\n          setPiboxUploadBtnName(\"블록코드 업로드\");\n          //piboxUploadBtn.current.disabled = false;\n        });\n    } catch (error) {\n      console.log(error);\n      setPiboxUploadBtnName(\"업로드 실패, 나중에 다시 시도해주세요.\");\n      //piboxUploadBtn.current.disabled = false;\n    }\n\n    return file;\n  };\n\n  //   function downloadBat(os) {\n  //     const element = document.createElement(\"a\");\n  //     const batText = `sshpass -praspberry scp -o StrictHostKeyChecking=no ./model.tflite pi@${props.ipAddress}:/home/pi/tflite/model.tflite\n  // sshpass -praspberry scp -o StrictHostKeyChecking=no ./labels.txt pi@${props.ipAddress}:/home/pi/tflite/labels.txt\n  // sshpass -praspberry scp -o StrictHostKeyChecking=no ./pibox.py pi@${props.ipAddress}:/home/pi/tflite/pibox.py\n  // `;\n  //     const file = new Blob([batText], {\n  //       type: \"text/plain\",\n  //     });\n  //     element.href = URL.createObjectURL(file);\n  //     element.download = os === \"WIN\" ? \"upload.bat\" : \"upload.sh\";\n  //     document.body.appendChild(element); // Required for this to work in FireFox\n  //     element.click();\n  //   }\n\n  const sendMoving = (index) => {\n    if (ch1OutputType === 2 || ch2OutputType === 2) {\n      alert(\"지금은 서보모터와 LED만 동작해 볼 수 있습니다!\");\n    } else {\n      if (checkTime + 1300 < Date.now()) {\n        const url = \"http://\" + props.ipAddress + \":8000/move.html?\";\n        let ch1Command = \"None\";\n        if (\n          (!isNaN(parseFloat(ch1OutputAmount[index])) && ch1OutputType == 1) ||\n          (!isNaN(parseFloat(ch1OutputAmount[index].r)) && ch1OutputType == 3)\n        ) {\n          switch (ch1OutputType) {\n            case 1:\n              ch1Command = \"servo_\" + ch1OutputAmount[index];\n              break;\n            case 3:\n              ch1Command =\n                \"led_\" + ch1OutputAmount[index].r + \"_\" + ch1OutputAmount[index].g + \"_\" + ch1OutputAmount[index].b;\n              break;\n            default:\n              break;\n          }\n        }\n        let ch2Command = \"None\";\n        if (\n          (!isNaN(parseFloat(ch2OutputAmount[index])) && ch2OutputType == 1) ||\n          (!isNaN(parseFloat(ch2OutputAmount[index].r)) && ch2OutputType == 3)\n        ) {\n          switch (ch2OutputType) {\n            case 1:\n              ch2Command = \"servo_\" + ch2OutputAmount[index];\n              break;\n            case 3:\n              ch2Command =\n                \"led_\" + ch2OutputAmount[index].r + \"_\" + ch2OutputAmount[index].g + \"_\" + ch2OutputAmount[index].b;\n              break;\n            default:\n              break;\n          }\n        }\n        console.log(ch2OutputType, ch2OutputAmount);\n        console.log(url + \"ch1=\" + ch1Command + \"&ch2=\" + ch2Command);\n        fetch(url + \"ch1=\" + ch1Command + \"&ch2=\" + ch2Command);\n        setCheckTime(Date.now());\n      }\n    }\n  };\n\n  useInterval(() => {\n    if (checkMove) {\n      if (ch1OutputType === 2 || ch2OutputType === 2) {\n        alert(\"지금은 서보모터와 LED만 동작할 수 있습니다!\");\n        setCheckMove(false);\n      } else {\n        if (moveMotorThreshold <= tfFunc.resultConfidence && tfFunc.result !== -1) {\n          sendMoving(tfFunc.result);\n        }\n      }\n    }\n  }, 100);\n\n  const selectOutputMount = (index) => (\n    <div className=\"showOutputType\" key={index}>\n      <span>\n        <div className=\"class-object-label\" style={{ marginTop: \"9px\", marginBottom: \"10px\" }}>\n          Output 1\n        </div>\n        {ch1OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>모터의 날개가 움직이는 각도를 설정해주세요.<br /> ( 0 ~ 180 )</p>\n            <input\n              style={{ height: 30 }}\n              onChange={(e) => {\n                let value = e.target.value;\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value > 180 ? 180 : value < 0 ? 0 : value;\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index] || \"\"}\n            />\n          </div>\n        ) : ch1OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{\n                backgroundColor: \"#ffffff\",\n                fontSize: 15,\n                borderRadius: 2,\n              }}\n              onChange={(e) => {\n                const value = e.target.value;\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch1OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh1OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], value, newState[index][2]];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 {\"=>\"} 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh1OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], newState[index][1], value];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch1OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <SliderPicker\n              color={ch1OutputAmount[index]}\n              onChange={(value) => {\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ padding: \"10px\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <div className=\"class-object-label\" style={{ marginTop: \"9px\", marginBottom: \"10px\" }}>\n          Output 2\n        </div>\n        {ch2OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>모터의 날개가 움직이는 각도를 설정해주세요.<br />( 0 ~ 180 )</p>\n            <input\n              style={{ height: 30 }}\n              onChange={(e) => {\n                let value = e.target.value;\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n\n                  newState[index] = value > 180 ? 180 : value < 0 ? 0 : value;\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index] || \"\"}\n            />\n          </div>\n        ) : ch2OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{\n                backgroundColor: \"#ffffff\",\n                fontSize: 15,\n                borderRadius: 2,\n              }}\n              onChange={(e) => {\n                const value = e.target.value;\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch2OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh2OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], value, newState[index][2]];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 {\"=>\"} 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh2OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], newState[index][1], value];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch2OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <SliderPicker\n              color={ch2OutputAmount[index]}\n              onChangeComplete={(value) => {\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ padding: \"10px\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <button className=\"test-move\" onClick={() => sendMoving(index)}>\n          테스트하기\n        </button>\n      </span>\n    </div>\n  );\n\n  const selectOutputType = () => (\n    <div className=\"blocks\" style={{ display: \"inline\", width: \"49%\", marginLeft: \"1%\" }}>\n      <div className=\"block\" id=\"output-type-block\">\n        <div className=\"output-type\">\n          <div className=\"Out-put-01\">Output 01</div>\n          <div className=\"output-circles\">\n            <div\n              style={{ marginLeft: \"12%\" }}\n              onClick={() => {\n                if (ch1OutputType === 1) {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh1OutputType(1);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }\n              }}\n            >\n              <img\n                src={ch1OutputType === 1 ? \"img/servomotor_picked.svg\" : \"img/servomotor.svg\"}\n                alt=\"servomotor\"\n                style={{ cursor: \"pointer\" }}\n              />\n            </div>\n\n            <div\n              style={{ marginLeft: \"40px\", marginRight: \"40px\" }}\n              onClick={() => {\n                if (ch1OutputType === 2) {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh1OutputType(2);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }\n              }}\n            >\n              <img\n                style={{ cursor: \"pointer\" }}\n                src={ch1OutputType === 2 ? \"img/dcmotor_picked.svg\" : \"img/dcmotor.svg\"}\n                alt=\"dcmotor\"\n              />\n            </div>\n\n            <div\n              style={{ marginRight: \"12%\" }}\n              onClick={() => {\n                if (ch1OutputType === 3) {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  if (ch2OutputType !== 3) {\n                    setCh1OutputType(3);\n                    setCh1OutputAmount((state) => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1,\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }\n              }}\n            >\n              <img\n                style={{ cursor: \"pointer\" }}\n                src={ch1OutputType === 3 ? \"img/led_picked.svg\" : \"img/led.svg\"}\n                alt=\"led\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"output-type\" style={{ marginLeft: \"80px\" }}>\n          <div className=\"Out-put-01\">Output 02</div>\n          <div className=\"output-circles\">\n            <div\n              style={{ marginLeft: \"12%\" }}\n              onClick={() => {\n                if (ch2OutputType === 1) {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh2OutputType(1);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }\n              }}\n            >\n              <img\n                style={{ cursor: \"pointer\" }}\n                src={ch2OutputType === 1 ? \"img/servomotor_picked.svg\" : \"img/servomotor.svg\"}\n                alt=\"servomotor\"\n              />\n            </div>\n\n            <div\n              style={{ marginLeft: \"40px\", marginRight: \"40px\" }}\n              onClick={() => {\n                if (ch2OutputType === 2) {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh2OutputType(2);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }\n              }}\n            >\n              <img\n                style={{ cursor: \"pointer\" }}\n                src={ch2OutputType === 2 ? \"img/dcmotor_picked.svg\" : \"img/dcmotor.svg\"}\n                alt=\"dcmotor\"\n              />\n            </div>\n\n            <div\n              style={{ marginRight: \"12%\" }}\n              onClick={() => {\n                if (ch2OutputType === 3) {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  if (ch1OutputType !== 3) {\n                    setCh2OutputType(3);\n                    setCh2OutputAmount((state) => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1,\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }\n              }}\n            >\n              <img\n                style={{ cursor: \"pointer\" }}\n                src={ch2OutputType === 3 ? \"img/led_picked.svg\" : \"img/led.svg\"}\n                alt=\"dcmotor\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const cameraPreviewWithButtons = () => (\n    //아웃풋 종류 보여줌\n    <div style={{ position: \"fixed\" }}>\n      <div className=\"block-2\">\n        <div className=\"block\" ref={camera}></div>\n        <div style={{ marginLeft: \"20px\" }}>\n          <img src=\"img/plai_train.svg\" id=\"trainButton\" onClick={() => tfFunc.train()} className=\"plai-train\" />\n        </div>\n        <div style={{ marginLeft: \"20px\" }}>\n          <img\n            style={{ cursor: \"pointer\" }}\n            src={checkMove ? \"img/plai_move_on.svg\" : \"img/plai_move_off.svg\"}\n            onClick={() => setCheckMove(!checkMove)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"connect-panel panel\">\n      <img\n        onClick={() => props.setIsBlockCoding()}\n        src=\"img/icon_arrow_back.svg\"\n        className=\"Icon-arrow_back-blockcode\"\n      ></img>\n      {false ? (\n        <div>\n          <p>\n            라벨 : <input type=\"file\" accept=\".txt\" onChange={(e) => uploadFile(e.target.files[0])} />\n          </p>\n        </div>\n      ) : null}\n      <div className=\"training-label\">학습하기</div>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"32.3%\", marginLeft: \"8%\" }}>{cameraPreviewWithButtons()}</div>\n        <div style={{ width: \"67.7%\", marginRight: \"8%\" }}>\n          <div>{selectOutputType()}</div>\n          <div className=\"label-output\">\n            <div className=\"blocks-container\">\n              <div>\n                {labels.map((label, index) => (\n                  <div key={label}>\n                    <div className=\"class-object\">\n                      <div className=\"class-object-left\">\n                        <div className=\"block\">\n                          <span className=\"class-object-label\">{label}</span>\n                          <ProgressBar bgcolor={\"#00695c\"} completed={Math.floor(probability[index] * 100)} />\n                        </div>\n                        <div style={{ display: \"flex\" }}>\n                          <div\n                            style={{\n                              marginLeft: \"10px\",\n                              marginRight: \"10px\",\n                              position: \"relative\",\n                              top: \"123px\",\n                            }}\n                          >\n                            <img\n                              src=\"img/icon_video.svg\"\n                              className=\"Icon-awesome-video\"\n                              onMouseDown={() => {\n                                tfFunc.addTrainingData(index);\n                              }}\n                              onMouseUp={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                              onMouseLeave={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                            ></img>\n                          </div>\n                          <div className=\"training-images\" id={\"canvas-\" + index.toString()}></div>\n                        </div>\n                      </div>\n                      <hr size=\"2\" width=\"60px\" noshade=\"true\" className=\"class-object-connecting\"></hr>\n                      <div className=\"class-object-right\">\n                        <span className=\"class-output-settings\">{selectOutputMount(index)}</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\" style={{ textAlign: \"center\" }}>\n        <img\n          style={{ margin: \"0px auto\", marginTop: \"30px\", cursor: \"pointer\" }}\n          onClick={() => addClass()}\n          src=\"img/add_class.svg\"\n        ></img>\n      </div>\n      <div className=\"block\">\n        <img\n          style={{ margin: \"0px auto\", marginTop: \"30px\", cursor: \"pointer\" }}\n          onClick={() => (piboxUploadBtnName !== \"잠시만 기다려주세요...\" ? downloadPy() : null)}\n          src={\n            piboxUploadBtnName === \"잠시만 기다려주세요...\"\n              ? \"img/blockcode_uploading_button.svg\"\n              : \"img/blockcode_upload_button.svg\"\n          }\n        ></img>\n      </div>\n      {/* <div>\n        <h4>\n          블록이 완성되었다면{\" \"}\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadPy()}>\n            코드 다운로드\n          </span>{\" \"}\n        </h4>\n      </div> */}\n      {/* <div>\n        <h4>\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadBat(\"WIN\")}>\n            코드 업로드 프로그램(윈도우)\n          </span>\n          <br />\n          코드와 업로드 프로그램 파일은 모델파일을 압축푼 폴더와 같은 폴더에 넣어주세요.\n        </h4>\n        <p>\n          초기 비밀번호 : raspberry\n          <br />\n        </p>\n      </div> */}\n    </div>\n  );\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","export const front = `\n## pibox TFLITE\nimport os\nimport argparse\nimport cv2\nimport numpy as np\nimport sys\nimport time\nfrom threading import Thread\nimport importlib.util\n\n## 출력을 위한 import\nimport RPi.GPIO as GPIO\nimport pigpio\nimport time\nimport board\nimport neopixel\n\n`;\n\nexport const middle = `\n# 카메라 오브젝트\nclass VideoStream:\n    def __init__(self,resolution=(320,240),framerate=3): # 원래는 640,480 그리고 30 framerate\n        # 파이 카메라를 시작합니다.\n        self.stream = cv2.VideoCapture(0)\n        ret = self.stream.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))\n        ret = self.stream.set(3,resolution[0])\n        ret = self.stream.set(4,resolution[1])\n            \n        # 첫번째 사진을 불러옵니다.\n        (self.grabbed, self.frame) = self.stream.read()\n\n\t    # 멈출 수 있도록 stopped를 설정해줍니다.\n        self.stopped = False\n\n    def start(self):\n\t    # 비디오 스트림에서 프레임을 읽어오는 쓰레드를 시작합니다.\n        Thread(target=self.update,args=()).start()\n        return self\n\n    def update(self):\n        # 쓰레드가 멈출 때 까지 계속 스트림을 실행합니다.\n        while True:\n            # 카메라가 멈추면 스트림을 멈춥니다.\n            if self.stopped:\n                # 카메라 리소스를 닫습니다.\n                self.stream.release()\n                return\n\n            # 멈춘것이 아니라면 프레임을 가져옵니다.\n            (self.grabbed, self.frame) = self.stream.read()\n\n    def read(self):\n\t    # 가장 최근 프레임을 가져옵니다.\n        return self.frame\n\n    def stop(self):\n\t    # 카메라 쓰레드를 정지합니다.\n        self.stopped = True\n\n# 입력 파라미터를 정의합니다.\nparser = argparse.ArgumentParser()\nparser.add_argument('--modeldir', help='Folder the .tflite file is located in',\n                    required=True)\nparser.add_argument('--graph', help='Name of the .tflite file, if different than model.tflite',\n                    default='model.tflite')\nparser.add_argument('--labels', help='Name of the labelmap file, if different than labels.txt',\n                    default='labels.txt')\nparser.add_argument('--threshold', help='Minimum confidence threshold for displaying detected objects',\n                    default=0.5)\nparser.add_argument('--resolution', help='Desired webcam resolution in WxH. If the webcam does not support the resolution entered, errors may occur.',\n                    default='320x240') # 원래는 1280x720 속도를 위해 낮춤\nparser.add_argument('--edgetpu', help='Use Coral Edge TPU Accelerator to speed up detection',\n                    action='store_true',default=False)\n\nargs = parser.parse_args()\n\nMODEL_NAME = args.modeldir\nGRAPH_NAME = args.graph\nLABELMAP_NAME = args.labels\nmin_conf_threshold = float(args.threshold)\nresW, resH = args.resolution.split('x')\nimW, imH = int(resW), int(resH) # 라즈베리파이 제로 + 파이카메라에서는 224,224 가 아주 쬐에에에끔 빠릅니다.\nuse_TPU = args.edgetpu\n\n# 텐서플로우 라이브러리를 가져옵니다.\n# 텐서플로우 라이브러리가 없다면, tflite_runtime 을 가져옵니다.\n# 코랄 TPU를 사용한다면, TPU 용 라이브러리를 가져옵니다. (import the load_delegate library)\npkg = importlib.util.find_spec('tensorflow')\nif pkg is None:\n    from tflite_runtime.interpreter import Interpreter\n    if use_TPU:\n        from tflite_runtime.interpreter import load_delegate\nelse:\n    from tensorflow.lite.python.interpreter import Interpreter\n    if use_TPU:\n        from tensorflow.lite.python.interpreter import load_delegate\n\n# TPU를 사용한다면 TPU 모델을 가져옵니다.\nif use_TPU:\n    # 'edgetpu.tflite'가 TPU를 사용할 때의 기본 경로입니다.\n    if (GRAPH_NAME == 'model.tflite'):\n        GRAPH_NAME = 'edgetpu.tflite'       \n\n# 작업 경로와 현재 경로를 일치시킵니다.\nCWD_PATH = os.getcwd()\n\n# 모델 경로를 설정합니다.\nPATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,GRAPH_NAME)\n\n# 라벨 경로를 설정합니다.\nPATH_TO_LABELS = os.path.join(CWD_PATH,MODEL_NAME,LABELMAP_NAME)\n\n# 라벨을 가져옵니다.\nwith open(PATH_TO_LABELS, 'r') as f:\n    labels = [line.strip() for line in f.readlines()]\n\n# 첫번째 라벨이 ??? 인 경우가 있어 그럴 경우 제거합니다.\nif labels[0] == '???':\n    del(labels[0])\n\n# 텐서플로우 모델을 가져옵니다. TPU를 쓸 경우 TPU 모델로 가져옵니다.\nif use_TPU:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT,\n                              experimental_delegates=[load_delegate('libedgetpu.so.1.0')])\n    print(PATH_TO_CKPT)\nelse:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT)\n\ninterpreter.allocate_tensors()\n\n# 로드된 모델의 정보를 가져옵니다.\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nheight = input_details[0]['shape'][1]\nwidth = input_details[0]['shape'][2]\n#print(\"가로\")\n#print(width)\n#print(\"세로\")\n#print(height)\n# 입력이 소수인지 아닌지 판단합니다.\nfloating_model = (input_details[0]['dtype'] == np.float32)\n\ninput_mean = 127.5\ninput_std = 127.5\n\n# 연산 프레임을 체크하기 위한 변수를 할당합니다.\nframe_rate_calc = 1\nfreq = cv2.getTickFrequency()\n\n# 상단에서 정의한 비디오 스트림을 시작합니다.\nvideostream = VideoStream(resolution=(imW,imH),framerate=30).start() \ntime.sleep(1)\n\n# 프레임으로 연산을 시작합니다.\nwhile True:\n\n    # 연산 프레임을 위한 시간 체크 변수를 할당합니다.\n    t1 = cv2.getTickCount()\n\n    # 비디오스트림에서 프레임을 읽어옵니다.\n    frame1 = videostream.read()\n\n    # 입력에 넣을 수 있도록 해상도를 변경합니다.\n    frame = frame1.copy()\n    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n    # 위에서 input을 224,224로 설정했다면 아래 줄은 넘어가도 됩니다..\n    frame_resized = cv2.resize(frame_rgb, (width, height)) \n    input_data = np.expand_dims(frame_resized, axis=0)\n\n    # 입력이 소수라면 소수로 바꿔줍니다.\n    if floating_model:\n        input_data = (np.float32(input_data) - input_mean) / input_std\n\n    # 로드된 모델에 입력을 넣어 결과를 가져옵니다.\n    interpreter.set_tensor(input_details[0]['index'],input_data)\n    interpreter.invoke()\n    result=interpreter.get_tensor(output_details[0]['index'])[0]\n    print(labels[np.argmax(result)])\n    #print(result)\n    # 초당 연산 프레임을 계산합니다.\n    t2 = cv2.getTickCount()\n    time1 = (t2-t1)/freq\n    frame_rate_calc= 1/time1\n    #print(frame_rate_calc)\n`;\n","import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport WifiSSH from \"./WifiSSH\";\nimport BlockCode from \"./BlockCode\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pibox\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      isBlockCoding: false,\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: null,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      wifiReset: false,\n      isAndroid: navigator.userAgent.indexOf(\"Android\") > -1 || navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone: navigator.userAgent.indexOf(\"iPhone\") > -1 || navigator.userAgent.indexOf(\"iphone\") > -1,\n      wifiConnected: false,\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID],\n          },\n        ],\n      })\n      .then((device) => {\n        //GO loading screen\n        return device.gatt.connect();\n      })\n      .then((server) => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then((service) => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async (characteristics) => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId,\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \",\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\",\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"...\",\n          },\n        ];\n\n        await this.subscribeCharacteristic(UUID.WIFI_NAME, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.IP_ADDRESS, infoList, characteristicsList);\n        await this.readInfoCharacteristic(UUID.DEVICE_MODEL, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.NOTIFY_MESSAGE, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY, infoList, characteristicsList);\n\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map((item) =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\",\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(infoList[i].uuid_label, infoList, characteristicsList);\n          await this.subscribeCharacteristic(infoList[i].uuid, infoList, characteristicsList);\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map((item) =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\",\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(commandList[i].uuid, commandList, characteristicsList);\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList,\n        });\n        //console.log(commandList);\n        // 0: {uuid: \"00000000-0000-0000-0000-fd2bcccc0001\", label: \"shutdown\"}\n        // 1: {uuid: \"00000000-0000-0000-0000-fd2bcccc0002\", label: \"reboot\"}\n        // 2: {uuid: \"00000000-0000-0000-0000-fd2bcccc0003\", label: \"start\"}\n        // 3: {uuid: \"00000000-0000-0000-0000-fd2bcccc0004\", label: \"stop\"}\n        // 4: {uuid: \"00000000-0000-0000-0000-fd2bcccc0005\", label: \"upload\"}\n        // 5: {uuid: \"00000000-0000-0000-0000-fd2bcccc0006\", label: \"camStart\"}\n\n        // loading close\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((label) => {\n          let tempCMDList = commandList;\n          tempCMDList.find((i) => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((value) => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList) this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async (resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\"characteristicvaluechanged\", (event) => {\n        if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n          let msg = this.ab2str(event.target.value.buffer);\n          notify.show(msg, \"custom\", 3000, \"teal\");\n        } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n          let msg = this.ab2str(event.target.value.buffer);\n          if (this.state.commandOutputShouldRefresh) {\n            this.setState({ commandOutputShouldRefresh: false, commandOutput: \"\" }, () => {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            });\n          } else {\n            let output = this.state.commandOutput + msg;\n            if (output.endsWith(\"&#&\")) {\n              output = output.replace(\"&#&\", \"\");\n              this.setState({ commandOutputShouldRefresh: true });\n            }\n            this.setState({ commandOutput: output });\n          }\n        } else {\n          let value = this.ab2str(event.target.value.buffer);\n          let tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          this.setState({ infoList: tempInfoList });\n        }\n      });\n      await this.getCharacteristicInit(uuid, characteristicsList).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = (service) => {\n    return new Promise(async (resolve) => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending);\n            }\n            let customCommandList = [];\n            for (let index = 0; index < this.state.customCommandCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending);\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map((i) => service.getCharacteristic(i)),\n                ...customCommandList.map((i) => service.getCharacteristic(i)),\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = (buf) => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = (uuid) => {\n    return this.state.characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    this.setState(\n      {\n        key: this.state.key.trim().replace(/\\|/g, \"*\"),\n        ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n        password: this.state.password.trim().replace(/\\|/g, \"*\"),\n      },\n      () => {\n        let errMsg;\n        if (this.state.ssid === \"\") {\n          errMsg = \"SSID cannot be empty.\";\n        }\n        if (this.state.password === \"\") {\n          errMsg = \"Password cannot be empty.\";\n        }\n        if (errMsg) {\n          notify.show(errMsg, \"custom\", 3000, \"teal\");\n          return;\n        }\n        this.setState({ wifiLock: true }, () =>\n          setTimeout(() => {\n            this.setState({ wifiLock: false, wifiReset: false });\n          }, 4000)\n        );\n\n        let sendArray = this.str2abs(`${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`);\n        this.sendSeparately(sendArray, UUID.INPUT_SEP);\n      }\n    );\n  };\n  sendCommand = (uuid) => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async (sec) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n  waitCamera = async () => {\n    let chk = true;\n    if (\n      this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined &&\n      this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\"\n    ) {\n      while (chk) {\n        await fetch(\"http://\" + this.state.infoList.find((i) => i.label === \"IP Address\").value + \":8000/index.html\")\n          // eslint-disable-next-line\n          .then(async (resp) => {\n            if (!resp.ok) {\n              await this.wait(0.5);\n            } else {\n              chk = false;\n            }\n          })\n          .catch(async () => {\n            await this.wait(0.5);\n          });\n      }\n      return true;\n    } else {\n      alert(\"와이파이가 연결되어있지 않습니다.\");\n      return false;\n    }\n  };\n  str2abs = (str) => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function (h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  setIsBlockCodingToFalse = () => {\n    this.setState({ isBlockCoding: false });\n    this.sendCommand(this.state.commandList.find((c) => c.label === \"stop\").uuid);\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          <img src=\"img/logo.svg\" className=\"logo\"></img>\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">Cannot find web bluetooth.</div>\n                <p>\n                  Please make sure your device and browser support web bluetooth. Please visit{\" \"}\n                  <a\n                    href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\"\n                    target=\"_brank\"\n                  >\n                    Here\n                  </a>{\" \"}\n                  to check web-bluetooth compatibility.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <img src=\"img/icon_arrow_back.svg\" className=\"Icon-arrow_back\"></img>\n                <div className=\"character-button\">\n                  <img src=\"img/character.svg\" className=\"character\"></img>\n                  <div className=\"Look-it-up\">Look it up!</div>\n                  <div className=\"PLAi-Bluetooth-\">PLAi를 움직일 Bluetooth를 찾아볼까요?</div>\n                  <div onClick={this.connectDevice}>\n                    <img src=\"img/bluetooth_button.svg\" className=\"bluetooth_button\"></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected && false ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map((item) => {\n                  if (\n                    item.label === \"Wifi\" ||\n                    item.label === \"IP Address\" ||\n                    item.label === \"CPU Temp\" ||\n                    item.label === \"CPU Load\"\n                  ) {\n                    return (\n                      <div key={item.uuid} className=\"info-group\">\n                        <div className=\"label\">{item.label}</div>\n                        <div className=\"value\">{item.value}</div>\n                      </div>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n              </div>\n            ) : null}\n            {(this.state.isConnected &&\n              (this.state.infoList.find((i) => i.label === \"IP Address\") === undefined ||\n                this.state.infoList.find((i) => i.label === \"IP Address\").value === \"\")) ||\n            this.state.wifiReset ? (\n              <div className=\"wifi-panel panel\">\n                <img src=\"img/icon_arrow_back.svg\" className=\"Icon-arrow_back\"></img>\n                <div className=\"WiFi-password-container\">\n                  <div className=\"wifi-setting-title\">\n                    <span className=\"WiFi-\">WiFi 설정</span>\n                    <img src=\"img/character2.svg\" className=\"character2\"></img>\n                  </div>\n                  <div className=\"wifi-name-container\">\n                    <div>\n                      <span className=\"Wifi-Name\">WiFi Name</span>\n                      <input\n                        className=\"wifi-name-input\"\n                        placeholder=\"  와이파이 이름(SSID)\"\n                        value={this.state.ssid}\n                        onChange={(value) => this.setState({ ssid: value.target.value })}\n                      />\n                    </div>\n                    <div>\n                      <span className=\"Wifi-Password\">WiFi Password</span>\n                      <input\n                        className=\"wifi-password-input\"\n                        placeholder=\"  와이파이 비밀번호\"\n                        value={this.state.password}\n                        onChange={(value) =>\n                          this.setState({\n                            password: value.target.value.replace(/[ㄱ-ㅎㅏ-ㅣ가-힣]/g, \"\"),\n                          })\n                        }\n                        type=\"password\"\n                      />\n                    </div>\n                  </div>\n                  {/* <div>\n                    <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                  </div> */}\n                  <div>\n                    <img\n                      className=\"wifi-button\"\n                      onClick={this.inputWifi}\n                      disabled={this.state.wifiLock}\n                      src={this.state.wifiLock ? \"img/wifing_button.svg\" : \"img/wifi_button.svg\"}\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected &&\n            this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined &&\n            this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\" &&\n            !this.state.wifiConnected &&\n            !this.state.wifiReset ? (\n              <div className=\"connect-panel panel\">\n                <img\n                  src=\"img/icon_arrow_back.svg\"\n                  onClick={() => this.setState({ wifiReset: true })}\n                  className=\"Icon-arrow_back\"\n                ></img>\n                <div className=\"character-button\">\n                  <img src=\"img/character2.svg\" className=\"character\"></img>\n                  <div className=\"Look-it-up\">WiFi 설정이 완료 되었습니다.</div>\n                  <div className=\"PLAi-Bluetooth-\">PLAi와 함께 놀아볼까요?</div>\n                  <div onClick={() => this.setState({ wifiConnected: true })}>\n                    <img src=\"img/wifi_next.svg\" className=\"bluetooth_button\"></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {/* <div className=\"command-panel panel\">\n              <div className=\"panel-title\">커스텀 명령어</div>\n              {this.state.commandList.length > 0 ? (\n                <div>\n                  <div>\n                    {this.state.commandList.map((item) => (\n                      <div key={item.uuid} className=\"button-wrap\">\n                        <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                          {item.label}\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                  <div>\n                    <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                  </div>\n                  <div>\n                    <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                  </div>\n                </div>\n              ) : (\n                <p>커스텀 명령어가 없습니다.</p>\n              )}\n            </div> */}\n          </div>\n          {this.state.isConnected && false ? (\n            <div className=\"panel-container\">\n              <WifiSSH\n                ipAddress={\n                  this.state.infoList.find((i) => i.label === \"IP Address\") === undefined\n                    ? \"\"\n                    : this.state.infoList.find((i) => i.label === \"IP Address\").value\n                }\n              />\n            </div>\n          ) : null}\n          {this.state.isConnected &&\n          this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined &&\n          this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\" &&\n          this.state.infoList.find((i) => i.label === \"Machine ID\") !== undefined &&\n          this.state.infoList.find((i) => i.label === \"Machine ID\").value !== \"\" &&\n          !this.state.isBlockCoding &&\n          this.state.wifiConnected ? (\n            <div className=\"panel\">\n              <div\n                className=\"panel-container\"\n                onClick={async () => {\n                  this.sendCommand(this.state.commandList.find((c) => c.label === \"camStart\").uuid);\n                  await this.wait(2.0);\n                  await this.waitCamera();\n                  this.setState({ isBlockCoding: true });\n                }}\n              >\n                <div className=\"panel-title\">블록코드 시작</div>\n              </div>\n            </div>\n          ) : null}\n          {this.state.isConnected && this.state.isBlockCoding ? (\n            <div className=\"panel-container\">\n              <BlockCode\n                ipAddress={\n                  this.state.infoList.find((i) => i.label === \"IP Address\") === undefined\n                    ? \"\"\n                    : this.state.infoList.find((i) => i.label === \"IP Address\").value\n                }\n                machineId={\n                  this.state.infoList.find((i) => i.label === \"Machine ID\") === undefined\n                    ? \"\"\n                    : this.state.infoList.find((i) => i.label === \"Machine ID\").value\n                }\n                sendCommand={this.sendCommand}\n                uploadUUID={this.state.commandList.find((c) => c.label === \"upload\").uuid}\n                setIsBlockCoding={this.setIsBlockCodingToFalse}\n              />\n            </div>\n          ) : null}\n          {this.state.isConnected && !this.state.isBlockCoding && this.state.wifiConnected ? (\n            <div className=\"panel\">\n              <div\n                className=\"panel-container\"\n                onClick={async () => {\n                  this.sendCommand(this.state.commandList.find((c) => c.label === \"start\").uuid);\n                  await this.wait(0.5);\n                }}\n              >\n                <div className=\"panel-title\">PLAi 실행!</div>\n              </div>\n            </div>\n          ) : null}\n          {this.state.isConnected && !this.state.isBlockCoding && this.state.wifiConnected ? (\n            <div className=\"panel\">\n              <div\n                className=\"panel-container\"\n                onClick={async () => {\n                  this.sendCommand(this.state.commandList.find((c) => c.label === \"reboot\").uuid);\n                  await this.wait(0.5);\n                }}\n              >\n                <div className=\"panel-title\">PLAi 재부팅!</div>\n              </div>\n            </div>\n          ) : null}\n          {this.state.isConnected && !this.state.isBlockCoding && this.state.wifiConnected ? (\n            <div className=\"panel\">\n              <div\n                className=\"panel-container\"\n                onClick={async () => {\n                  this.sendCommand(this.state.commandList.find((c) => c.label === \"stop\").uuid);\n                  this.setState({ isBlockCoding: false });\n                  await this.wait(0.5);\n                }}\n              >\n                <div className=\"panel-title\">PLAi 정지!</div>\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"copyright\">PiBox . Open source under GPL-3.0 license.</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n","module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n"],"sourceRoot":""}