{"version":3,"sources":["Tfjs.js","BlockCode.js","PythonCodeBase.js","BluetoothConnect.js","App.js","index.js","uuid.js","assets/images/servomotor.png","assets/images/motor.png","assets/images/led.png","assets/images/none.png"],"names":["TfMain","camera","machineId","downloadPy","console","log","this","infoTexts","data","label","training","videoPlaying","trained","inputFirst","isTraining","numClasses","completeModel","exampleCount","Array","fill","lastChildAddClass","piboxPy","body","document","undefined","current","bindPage","video","createElement","setAttribute","appendChild","i","div","style","marginBottom","button","innerText","addEventListener","infoText","push","train","download","navigator","mediaDevices","getUserMedia","width","height","audio","then","stream","srcObject","tf","mobilenet","layer","getLayer","inputs","outputs","output","loadMobileNet","trainable","predict","start","timer","stop","play","requestAnimationFrame","animate","bind","pause","cancelAnimationFrame","labels","model","denseLayer1","dense","inputShape","shape","slice","units","activation","use_bias","kernel_initializer","denseLayer2","add","compile","optimizer","adam","loss","metrics","forEach","e","parseInt","oldLabels","concat","dispose","fit","epochs","batchSize","length","callbacks","onBatchEnd","batch","logs","acc","info","history","piForm","FormData","append","save","http","requestInit","method","headers","machine_id","fetch","mode","cache","credentials","redirect","referrer","image","canvasEl","getElementById","toString","canvas","className","insertBefore","firstChild","childNodes","removeChild","lastChild","ctx","getContext","imageData","ImageData","dataSync","j","putImageData","nowClass","fromPixels","infer","expandDims","toFloat","sub","newX","oldData","draw","logits","predictedClass","as1D","argMax","res","confidence","fontWeight","Math","round","BlockCode","props","useState","setLabels","ch1OutputType","setCh1OutputType","ch2OutputType","setCh2OutputType","ch1OutputAmount","setCh1OutputAmount","ch2OutputAmount","setCh2OutputAmount","tfFunc","setTfFunc","useRef","useEffect","front2","setOutputContext","getSetOutput","middleIf","chk","context","index","func","noOutputCh1","noOutputCh2","parseFloat","r","g","b","getIfContext","back","getBackContext","Blob","type","display","marginRight","ref","onClick","addClass","state","marginLeft","src","nope","alt","servomotor","motor","a","alert","led","map","key","textAlign","id","verticalAlign","onChange","value","target","newState","backgroundColor","fontSize","borderRadius","defaultValue","color","rgb","onChangeComplete","selectOutputMount","cursor","os","element","batText","ipAddress","file","href","URL","createObjectURL","click","downloadBat","BluetoothConnect","connectDevice","bluetooth","requestDevice","filters","services","UUID","SERVICE_ID","device","gatt","connect","server","setState","serverId","getPrimaryService","service","isIphone","webBleConnect","getCharacteristics","characteristics","characteristicsList","isConnected","infoList","preset","uuid","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","subscribeCharacteristic","readInfoCharacteristic","NOTIFY_MESSAGE","CUSTOM_COMMAND_NOTIFY","filter","indexOf","CUSTOM_INFO_LABEL","item","replace","CUSTOM_INFO","uuid_label","tempCharList","CUSTOM_COMMAND_LABEL","commandList","readCommandLabel","catch","Promise","resolve","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","event","msg","notify","show","commandOutputShouldRefresh","commandOutput","endsWith","startNotifications","getCharacteristic","PREFIX","CUSTOM_INFO_COUNT","characteristic","customInfoCount","CUSTOM_COMMAND_COUNT","customCommandCount","customInfoList","ending","repeat","customCommandList","all","SERVICE_NAME","INPUT_SEP","CUSTOM_COMMAND_INPUT","buf","String","fromCharCode","apply","Uint8Array","inputWifi","trim","ssid","password","errMsg","wifiLock","setTimeout","sendArray","str2abs","sendSeparately","sendCommand","array","writeValue","wait","sec","str","val","charCodeAt","valArray","split","bufferArray","splice","join","match","h","supportBluetooth","Boolean","window","loading","charLength","isAndroid","userAgent","toLowerCase","placeholder","disabled","size","readOnly","rows","React","Component","App","ReactDOM","render","module","exports","INPUT"],"mappings":"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","file":"static/js/main.e17a5324.chunk.js","sourcesContent":["// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as tf from \"@tensorflow/tfjs\";\n\n// Number of classes to classify\nconst NUM_CLASSES = 2;\n// Webcam Image size. Must be 224.\nconst IMAGE_SIZE = 96;\n\nexport class TfMain {\n  constructor(camera, machineId, downloadPy) {\n    console.log(machineId);\n    // Initiate variables\n    this.infoTexts = [];\n    this.data = null;\n    this.label = [];\n    this.training = -1; // -1 when no class is being trained\n    this.videoPlaying = false;\n    this.trained = false;\n    this.inputFirst = true;\n    this.isTraining = false;\n    this.numClasses = NUM_CLASSES;\n    this.completeModel = null;\n    this.exampleCount = new Array(NUM_CLASSES).fill(0);\n    this.lastChildAddClass = null;\n    this.machineId = machineId;\n    this.piboxPy = \"\";\n    this.downloadPy = downloadPy;\n\n    this.body = document.body;\n    if (camera.current !== undefined) {\n      this.body = camera.current;\n    }\n\n    this.bindPage();\n\n    // Create video element that will contain the webcam image\n    this.video = document.createElement(\"video\");\n    this.video.setAttribute(\"autoplay\", \"\");\n    this.video.setAttribute(\"playsinline\", \"\");\n\n    // Add video element to DOM\n    this.body.appendChild(this.video);\n\n    // Create training buttons and info texts\n    for (let i = 0; i < this.numClasses; i++) {\n      const div = document.createElement(\"div\");\n      this.lastChildAddClass = div;\n      this.body.appendChild(div);\n\n      div.style.marginBottom = \"10px\";\n\n      // Create training button\n      const button = document.createElement(\"button\");\n      button.innerText = \"데이터 추가 - 클래스 \" + (i + 1);\n      div.appendChild(button);\n\n      // Listen for mouse events when clicking the button\n      button.addEventListener(\"mousedown\", () => (this.training = i));\n      button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n      // Create info text\n      const infoText = document.createElement(\"span\");\n      infoText.innerText = \" 추가된 데이터가 없습니다.\";\n      div.appendChild(infoText);\n      this.infoTexts.push(infoText);\n    }\n\n    let div = document.createElement(\"div\");\n    this.lastChildAddClass = div;\n    this.body.appendChild(div);\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    let button = document.createElement(\"button\");\n    button.innerText = \"학습하기\";\n    div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mouseup\", () => this.train());\n\n    div = document.createElement(\"div\");\n    this.body.appendChild(div);\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    button = document.createElement(\"button\");\n    button.innerText = \"학습한 모델 저장\";\n    div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mouseup\", () => {\n      this.piboxPy = this.downloadPy();\n      this.download();\n    });\n\n    // Setup webcam\n    navigator.mediaDevices.getUserMedia({ video: { width: IMAGE_SIZE, height: IMAGE_SIZE }, audio: false }).then(stream => {\n      this.video.srcObject = stream;\n      this.video.width = IMAGE_SIZE;\n      this.video.height = IMAGE_SIZE;\n\n      this.video.addEventListener(\"playing\", () => (this.videoPlaying = true));\n      this.video.addEventListener(\"paused\", () => (this.videoPlaying = false));\n    });\n  }\n\n  addTrainingData(label) {\n    this.training = label;\n  }\n\n  async loadMobileNet() {\n    const mobilenet = await tf.loadLayersModel(`./assets/${IMAGE_SIZE}_0.35/model.json`);\n    const layer = mobilenet.getLayer(IMAGE_SIZE === 160 ? \"global_average_pooling2d\" : \"global_average_pooling2d_1\");\n    return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n  }\n\n  async bindPage() {\n    this.mobilenet = await this.loadMobileNet();\n    this.mobilenet.trainable = false;\n    this.mobilenet.predict(tf.zeros([1, IMAGE_SIZE, IMAGE_SIZE, 3]));\n\n    //tf.setBackend(\"webgl\");\n    //console.log(this.model.summary());\n\n    this.start();\n  }\n\n  start() {\n    if (this.timer) {\n      this.stop();\n    }\n    this.video.play();\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  stop() {\n    this.video.pause();\n    cancelAnimationFrame(this.timer);\n  }\n\n  train() {\n    if (!this.isTraining) {\n      console.log(\"train start\");\n      this.isTraining = true;\n      let labels = null;\n      this.model = tf.sequential();\n      this.denseLayer1 = tf.layers.dense({\n        inputShape: this.mobilenet.outputs[0].shape.slice(1),\n        units: 100,\n        activation: \"relu\",\n        use_bias: true,\n        kernel_initializer: \"varianceScaling\"\n      });\n      this.denseLayer2 = tf.layers.dense({ units: this.numClasses, activation: \"softmax\", use_bias: false, kernel_initializer: \"varianceScaling\" });\n\n      this.model.add(this.denseLayer1);\n      this.model.add(this.denseLayer2);\n      this.model.compile({\n        optimizer: tf.train.adam(0.0001),\n        loss: \"categoricalCrossentropy\",\n        metrics: [\"accuracy\"]\n      });\n\n      this.label.forEach(e => {\n        const label = tf.oneHot(tf.tensor1d([parseInt(e)], \"int32\"), this.numClasses);\n        if (labels === null) labels = label;\n        else {\n          const oldLabels = labels;\n          labels = oldLabels.concat(label, 0);\n          oldLabels.dispose();\n        }\n      });\n      //this.data.print();\n      //labels.print();\n      function onBatchEnd(batch, logs) {\n        console.log(\"Accuracy\", logs.acc);\n      }\n      this.model\n        .fit(this.data, labels, {\n          epochs: 20,\n          batchSize: parseInt(this.label.length * 0.4),\n          callbacks: { onBatchEnd }\n        })\n        .then(info => {\n          console.log(\"Final accuracy\", info.history.acc);\n          this.trained = true;\n          this.isTraining = false;\n        });\n    }\n  }\n\n  async download() {\n    this.completeModel = tf.sequential();\n    this.completeModel.add(this.mobilenet);\n    this.completeModel.add(this.model);\n    const piForm = new FormData();\n    piForm.append(\"pibox\", this.piboxPy, \"pibox.py\");\n    //await this.completeModel.save(\"downloads://model\");\n    await this.completeModel.save(tf.io.http(\"http://54.180.114.251:5000/upload\", { requestInit: { method: \"POST\", headers: { machine_id: this.machineId } } }));\n    await fetch(\"http://54.180.114.251:5000/pibox\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        machine_id: this.machineId\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: piForm\n    });\n  }\n\n  async draw(image, label) {\n    const [width, height] = [IMAGE_SIZE, IMAGE_SIZE];\n    const canvasEl = document.getElementById(\"canvas-\" + label.toString());\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = width;\n    canvas.height = height;\n    canvas.className = \"cameraData\";\n    canvasEl.insertBefore(canvas, canvasEl.firstChild);\n    if (canvasEl.childNodes.length > 9) canvasEl.removeChild(canvasEl.lastChild);\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = new ImageData(width, height);\n    const data = image.dataSync();\n    for (let i = 0; i < height * width; ++i) {\n      const j = i * 4;\n      imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\n      imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\n      imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\n      imageData.data[j + 3] = 255;\n    }\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  addClass() {\n    this.exampleCount.push(0);\n    this.numClasses += 1;\n    const div = document.createElement(\"div\");\n\n    this.body.insertBefore(div, this.lastChildAddClass);\n\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    const button = document.createElement(\"button\");\n    button.innerText = \"데이터 추가 - 클래스 \" + this.numClasses;\n    div.appendChild(button);\n    const nowClass = this.numClasses;\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mousedown\", () => (this.training = nowClass - 1));\n    button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n    // Create info text\n    const infoText = document.createElement(\"span\");\n    infoText.innerText = \" 추가된 데이터가 없습니다.\";\n    div.appendChild(infoText);\n    this.infoTexts.push(infoText);\n  }\n\n  async animate() {\n    if (this.videoPlaying) {\n      // Get image data from video element\n      const image = tf.browser.fromPixels(this.video);\n\n      let logits;\n      // 'conv_preds' is the logits activation of MobileNet.\n      const infer = () =>\n        this.model.predict(\n          this.mobilenet.predict(\n            image\n              .expandDims(0)\n              .toFloat()\n              .div(127)\n              .sub(1)\n          )\n        );\n\n      // Train class if one of the buttons is held down\n      if (this.training !== -1) {\n        const newX = image\n          .expandDims(0)\n          .toFloat()\n          .div(127)\n          .sub(1);\n        // Add current image to classifier\n        if (!this.inputFirst) {\n          const oldData = this.data;\n          this.data = oldData.concat(this.mobilenet.predict(newX), 0);\n          this.label.push(this.training);\n          oldData.dispose();\n        } else {\n          this.data = this.mobilenet.predict(newX);\n          this.label.push(this.training);\n          this.inputFirst = false;\n        }\n        await this.draw(newX, this.training);\n        this.exampleCount[this.training] += 1;\n        newX.dispose();\n      }\n\n      //if (hasClass(this.data.map(e => e.length)) > 0) {\n      if (this.trained) {\n        // If classes have been added run predict\n        logits = infer();\n        const predictedClass = logits.as1D().argMax();\n\n        const res = (await predictedClass.data())[0];\n        const confidence = await logits.data();\n        for (let i = 0; i < this.numClasses; i++) {\n          // Make the predicted class bold\n          if (res === i) {\n            this.infoTexts[i].style.fontWeight = \"bold\";\n          } else {\n            this.infoTexts[i].style.fontWeight = \"normal\";\n          }\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples - ${Math.round(confidence[i] * 100)}%`;\n          }\n        }\n      } else {\n        for (let i = 0; i < this.numClasses; i++) {\n          // The number of examples for each class\n\n          // Update info text\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples`;\n          }\n        }\n      }\n\n      // Dispose image when done\n      image.dispose();\n      if (logits != null) {\n        logits.dispose();\n      }\n    }\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\n//window.addEventListener(\"load\", () => new Main());\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { SliderPicker } from \"react-color\";\nimport { TfMain } from \"./Tfjs\";\nimport servomotor from \"./assets/images/servomotor.png\";\nimport motor from \"./assets/images/motor.png\";\nimport led from \"./assets/images/led.png\";\nimport nope from \"./assets/images/none.png\";\nimport { front, middle } from \"./PythonCodeBase\";\n\nexport default function BlockCode(props) {\n  let fileReader;\n  const [labels, setLabels] = useState([\"클래스 1\", \"클래스 2\"]);\n  const [ch1OutputType, setCh1OutputType] = useState(0);\n  const [ch2OutputType, setCh2OutputType] = useState(0);\n  const [ch1OutputAmount, setCh1OutputAmount] = useState([]);\n  const [ch2OutputAmount, setCh2OutputAmount] = useState([]);\n  const [tfFunc, setTfFunc] = useState(null);\n  const camera = useRef(\"\");\n\n  useEffect(() => {\n    if (camera.current !== undefined && props.machineId !== \"\") {\n      setTfFunc(new TfMain(camera, props.machineId, downloadPy));\n      setCh1OutputAmount(new Array(2).fill(\"\"));\n      setCh2OutputAmount(new Array(2).fill(\"\"));\n    } // eslint-disable-next-line\n  }, [camera, props.machineId]);\n\n  const uploadFile = file => {\n    // 파일이 입력되면 먼저 여기로 들어오게된다.\n    // 파일입력이 없음에도 들어오면 바로 컷\n    if (file === undefined) {\n      return;\n    }\n\n    fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      const content = fileReader.result;\n      const result = [];\n      content.split(\"\\n\").forEach(label => {\n        result.push(label.substr(2));\n        console.log(label);\n      });\n      if (result[result.length - 1] === \"\") {\n        result.pop();\n      }\n      setLabels(result);\n      setCh1OutputType(0);\n      setCh2OutputType(0);\n      setCh1OutputAmount(new Array(result.length).fill(\"\"));\n      setCh2OutputAmount(new Array(result.length).fill(\"\"));\n    };\n    fileReader.readAsText(file);\n  };\n\n  function addClass() {\n    tfFunc.addClass();\n    setLabels(state => [...state, `클래스 ${labels.length + 1}`]);\n    setCh1OutputAmount(state => [...state, \"\"]);\n    setCh2OutputAmount(state => [...state, \"\"]);\n  }\n\n  function getSetOutput() {\n    let setOutputContext = `GPIO.setmode(GPIO.BCM)\npwm = pigpio.pi() \n    `;\n    if (ch1OutputType === 1)\n      setOutputContext += `\npwm.set_mode(18, pigpio.OUTPUT)\n`;\n    // 서보모터\n    else if (ch1OutputType === 2)\n      setOutputContext += `\nGPIO.setup(18,GPIO.OUT) # Channel 1 Speed\nGPIO.setup(23,GPIO.OUT) # Direction of Channel 1\nGPIO.output(23,0) \nm1=GPIO.PWM(18,50)\nm1.start(0)\n`;\n    else if (ch1OutputType === 3 && ch2OutputType !== 3)\n      setOutputContext += `\npix1 = neopixel.NeoPixel(board.D18,12)\n`;\n    if (ch2OutputType === 1)\n      setOutputContext += `\npwm.set_mode(12, pigpio.OUTPUT)\n`;\n    // 서보모터\n    else if (ch2OutputType === 2)\n      setOutputContext += `\nGPIO.setup(12,GPIO.OUT) # Channel 2 Speed\nGPIO.setup(25,GPIO.OUT)\nGPIO.output(25,0) # Direction of Channel 2\nm2=GPIO.PWM(12,50)\nm2.start(0)\n`;\n    else if (ch2OutputType === 3 && ch1OutputType !== 3)\n      setOutputContext += `\npix2 = neopixel.NeoPixel(board.D12,12)\n`;\n    return setOutputContext;\n  }\n  function getIfContext() {\n    let chk = 0;\n    let context = `    # From here. the block code\n    resultIndex = np.argmax(result)\n`;\n    labels.forEach((label, index) => {\n      let func = \"\";\n      let noOutputCh1 = false;\n      let noOutputCh2 = false;\n      if (ch1OutputType === 0) noOutputCh1 = true;\n      else if (ch1OutputType === 1)\n        func += `pwm.set_servo_pulsewidth(18,${(parseFloat(ch1OutputAmount[index]) / 180) * 2000 + 500}) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      // 서보모터\n      else if (ch1OutputType === 2)\n        func += `m1.ChangeDutyCycle(${ch1OutputAmount[index][1]})\n        GPIO.output(23,${ch1OutputAmount[index][0]}) # Control direction\n        ${\n          ch2OutputType === 2\n            ? \"\"\n            : `time.sleep(${ch1OutputAmount[index][2]})\n        m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)\n        `\n        }\n        `;\n      // 모터\n      else if (ch1OutputType === 3)\n        func += `pix1.fill((${ch1OutputAmount[index].r},${ch1OutputAmount[index].g},${ch1OutputAmount[index].b}))\n        pix1.show()\n        `;\n      // LED\n      else noOutputCh1 = true;\n      if (ch2OutputType === 0) noOutputCh2 = true;\n      else if (ch2OutputType === 1)\n        func += `pwm.set_servo_pulsewidth(12,${(parseFloat(ch2OutputAmount[index]) / 180) * 2000 + 500}) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      // 서보모터\n      else if (ch2OutputType === 2)\n        func += `m2.ChangeDutyCycle(${ch2OutputAmount[index][1]})\n        GPIO.output(25,${ch2OutputAmount[index][0]}) # Control direction\n        time.sleep(${ch2OutputAmount[index][2]})\n        ${\n          ch1OutputType === 2\n            ? `m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)`\n            : \"\"\n        }\n        m2.ChangeDutyCycle(0)\n        GPIO.output(25,0)\n        `;\n      // 모터\n      else if (ch2OutputType === 3)\n        func += `pix2.fill((${ch2OutputAmount[index].r},${ch2OutputAmount[index].g},${ch2OutputAmount[index].b}))\n        pix2.show()\n        `;\n      // LED\n      else noOutputCh2 = true;\n      if (noOutputCh1 === true && noOutputCh2 === true) return;\n      if (chk === 0) {\n        context += `\n    if `;\n        chk = 1;\n      } else\n        context += `\n    elif `;\n      context += `resultIndex == ${index}:\n        ${func}\n        `;\n    });\n    return context;\n  }\n  function getBackContext() {\n    let back = `\n# Clean up\ncv2.destroyAllWindows()\nvideostream.stop()\n`;\n\n    if (ch1OutputType === 1) {\n      back += `p1.stop()\n`;\n    }\n    if (ch1OutputType === 2) {\n      back += `m1.stop()\n`;\n    }\n    if (ch2OutputType === 1) {\n      back += `p2.stop()\n`;\n    }\n    if (ch2OutputType === 2) {\n      back += `m2.stop()\n`;\n    }\n    back += `GPIO.cleanup()\n`;\n    return back;\n  }\n  const downloadPy = () => {\n    //const element = document.createElement(\"a\");\n    const front2 = getSetOutput();\n    const middleIf = getIfContext();\n    const back = getBackContext();\n    const file = new Blob([front, front2, middle, middleIf, back], {\n      type: \"text/plain\"\n    });\n    //element.href = URL.createObjectURL(file);\n    //element.download = \"pibox.py\";\n    //document.body.appendChild(element); // Required for this to work in FireFox\n    //element.click();\n    return file;\n  };\n\n  function downloadBat(os) {\n    const element = document.createElement(\"a\");\n    const batText = `sshpass -praspberry scp -o StrictHostKeyChecking=no ./model.tflite pi@${props.ipAddress}:/home/pi/tflite/model.tflite\nsshpass -praspberry scp -o StrictHostKeyChecking=no ./labels.txt pi@${props.ipAddress}:/home/pi/tflite/labels.txt\nsshpass -praspberry scp -o StrictHostKeyChecking=no ./pibox.py pi@${props.ipAddress}:/home/pi/tflite/pibox.py\n`;\n    const file = new Blob([batText], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = os === \"WIN\" ? \"upload.bat\" : \"upload.sh\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  const selectOutputMount = index => (\n    <div className=\"showOutputType\" key={index}>\n      <span>\n        <h4>채널 1</h4>\n        {ch1OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>몇 도 움직일까요? ( 0 ~ 180 )</p>\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = parseInt(value);\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index]}\n            />\n          </div>\n        ) : ch1OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{ backgroundColor: \"#ffffff\", fontSize: 15, borderRadius: 2 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch1OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={e => {\n                    const value = e.target.value;\n                    setCh1OutputAmount(state => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], value, newState[index][2]];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 => 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={e => {\n                    const value = e.target.value;\n                    setCh1OutputAmount(state => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], newState[index][1], value];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch1OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <SliderPicker\n              color={ch1OutputAmount[index]}\n              onChange={value => {\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ display: \"flex\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <h4>채널 2</h4>\n        {ch2OutputType === 1 ? (\n          <div className=\"servomotor\">\n            몇 도 움직일까요? ( 0 ~ 180 )<br />\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = parseInt(value);\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index]}\n            />\n          </div>\n        ) : ch2OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{ backgroundColor: \"#ffffff\", fontSize: 15, borderRadius: 2 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch2OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={e => {\n                    const value = e.target.value;\n                    setCh2OutputAmount(state => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], value, newState[index][2]];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 => 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={e => {\n                    const value = e.target.value;\n                    setCh2OutputAmount(state => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], newState[index][1], value];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch2OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <SliderPicker\n              color={ch2OutputAmount[index]}\n              onChangeComplete={value => {\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ display: \"flex\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n    </div>\n  );\n\n  const selectOutputType = () => (\n    //아웃풋 종류 보여줌\n    <div style={{ display: \"flex\" }}>\n      <div className=\"blocks\" style={{ display: \"inline\", width: \"49%\", marginRight: \"1%\" }}>\n        <div className=\"block\" ref={camera}></div>\n        <div className=\"block\">\n          <button onClick={() => addClass()}>클래스 추가 +</button>\n        </div>\n      </div>\n      <div className=\"blocks\" style={{ display: \"inline\", width: \"49%\", marginLeft: \"1%\" }}>\n        <div className=\"block\">\n          <div>\n            <h4>채널 1 출력</h4>\n            <div className=\"pics\">\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount(state => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                }}\n              >\n                <img className={ch1OutputType === 0 ? \"outputPicSel\" : \"outputPic\"} src={nope} alt=\"no output\" />\n              </div>\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh1OutputType(1);\n                  setCh1OutputAmount(state => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }}\n              >\n                <img className={ch1OutputType === 1 ? \"outputPicSel\" : \"outputPic\"} src={servomotor} alt=\"servomotor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  setCh1OutputType(2);\n                  setCh1OutputAmount(state => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch1OutputType === 2 ? \"outputPicSel\" : \"outputPic\"} src={motor} alt=\"motor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  if (ch2OutputType !== 3) {\n                    setCh1OutputType(3);\n                    setCh1OutputAmount(state => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch1OutputType === 3 ? \"outputPicSel\" : \"outputPic\"} src={led} alt=\"led\" />\n              </div>\n            </div>\n          </div>\n          <div>\n            <h4>채널 2 출력</h4>\n            <div className=\"pics\">\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount(state => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                }}\n              >\n                <img className={ch2OutputType === 0 ? \"outputPicSel\" : \"outputPic\"} src={nope} alt=\"no output\" />\n              </div>\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh2OutputType(1);\n                  setCh2OutputAmount(state => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }}\n              >\n                <img className={ch2OutputType === 1 ? \"outputPicSel\" : \"outputPic\"} src={servomotor} alt=\"servomotor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  setCh2OutputType(2);\n                  setCh2OutputAmount(state => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch2OutputType === 2 ? \"outputPicSel\" : \"outputPic\"} src={motor} alt=\"motor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  if (ch1OutputType !== 3) {\n                    setCh2OutputType(3);\n                    setCh2OutputAmount(state => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch2OutputType === 3 ? \"outputPicSel\" : \"outputPic\"} src={led} alt=\"led\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"connect-panel panel\">\n      <div className=\"panel-title\">블록 코드</div>\n      {false ? (\n        <div>\n          <p>\n            라벨 : <input type=\"file\" accept=\".txt\" onChange={e => uploadFile(e.target.files[0])} />\n          </p>\n        </div>\n      ) : null}\n      <div className=\"label-output\">\n        <div className=\"blocks-container\">\n          <div>{selectOutputType()}</div>\n\n          <div>\n            {labels.map((label, index) => (\n              <div className=\"blocks\" key={label}>\n                <div className=\"block\">{label}</div>\n\n                <div>\n                  <span style={{ display: \"inline-block\", width: \"50%\", textAlign: \"center\" }} id={\"canvas-\" + index.toString()}></span>\n                  <span style={{ display: \"inline-block\", width: \"50%\", verticalAlign: \"top\" }}>{selectOutputMount(index)}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div>\n        <h4>\n          블록이 완성되었다면{\" \"}\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadPy()}>\n            코드 다운로드\n          </span>{\" \"}\n        </h4>\n      </div>\n      <div>\n        <h4>\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadBat(\"WIN\")}>\n            코드 업로드 프로그램(윈도우)\n          </span>\n          <br />\n          코드와 업로드 프로그램 파일은 모델파일을 압축푼 폴더와 같은 폴더에 넣어주세요.\n        </h4>\n        <p>\n          초기 비밀번호 : raspberry\n          <br />\n        </p>\n      </div>\n    </div>\n  );\n}\n","export const front = `\n## pibox TFLITE\nimport os\nimport argparse\nimport cv2\nimport numpy as np\nimport sys\nimport time\nfrom threading import Thread\nimport importlib.util\n\n## 출력을 위한 import\nimport RPi.GPIO as GPIO\nimport pigpio\nimport time\nimport board\nimport neopixel\n\n`;\n\nexport const middle = `\n# 카메라 오브젝트\nclass VideoStream:\n    def __init__(self,resolution=(320,240),framerate=3): # 원래는 640,480 그리고 30 framerate\n        # 파이 카메라를 시작합니다.\n        self.stream = cv2.VideoCapture(0)\n        ret = self.stream.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))\n        ret = self.stream.set(3,resolution[0])\n        ret = self.stream.set(4,resolution[1])\n            \n        # 첫번째 사진을 불러옵니다.\n        (self.grabbed, self.frame) = self.stream.read()\n\n\t    # 멈출 수 있도록 stopped를 설정해줍니다.\n        self.stopped = False\n\n    def start(self):\n\t    # 비디오 스트림에서 프레임을 읽어오는 쓰레드를 시작합니다.\n        Thread(target=self.update,args=()).start()\n        return self\n\n    def update(self):\n        # 쓰레드가 멈출 때 까지 계속 스트림을 실행합니다.\n        while True:\n            # 카메라가 멈추면 스트림을 멈춥니다.\n            if self.stopped:\n                # 카메라 리소스를 닫습니다.\n                self.stream.release()\n                return\n\n            # 멈춘것이 아니라면 프레임을 가져옵니다.\n            (self.grabbed, self.frame) = self.stream.read()\n\n    def read(self):\n\t    # 가장 최근 프레임을 가져옵니다.\n        return self.frame\n\n    def stop(self):\n\t    # 카메라 쓰레드를 정지합니다.\n        self.stopped = True\n\n# 입력 파라미터를 정의합니다.\nparser = argparse.ArgumentParser()\nparser.add_argument('--modeldir', help='Folder the .tflite file is located in',\n                    required=True)\nparser.add_argument('--graph', help='Name of the .tflite file, if different than model.tflite',\n                    default='model.tflite')\nparser.add_argument('--labels', help='Name of the labelmap file, if different than labels.txt',\n                    default='labels.txt')\nparser.add_argument('--threshold', help='Minimum confidence threshold for displaying detected objects',\n                    default=0.5)\nparser.add_argument('--resolution', help='Desired webcam resolution in WxH. If the webcam does not support the resolution entered, errors may occur.',\n                    default='320x240') # 원래는 1280x720 속도를 위해 낮춤\nparser.add_argument('--edgetpu', help='Use Coral Edge TPU Accelerator to speed up detection',\n                    action='store_true',default=False)\n\nargs = parser.parse_args()\n\nMODEL_NAME = args.modeldir\nGRAPH_NAME = args.graph\nLABELMAP_NAME = args.labels\nmin_conf_threshold = float(args.threshold)\nresW, resH = args.resolution.split('x')\nimW, imH = int(resW), int(resH) # 라즈베리파이 제로 + 파이카메라에서는 224,224 가 아주 쬐에에에끔 빠릅니다.\nuse_TPU = args.edgetpu\n\n# 텐서플로우 라이브러리를 가져옵니다.\n# 텐서플로우 라이브러리가 없다면, tflite_runtime 을 가져옵니다.\n# 코랄 TPU를 사용한다면, TPU 용 라이브러리를 가져옵니다. (import the load_delegate library)\npkg = importlib.util.find_spec('tensorflow')\nif pkg is None:\n    from tflite_runtime.interpreter import Interpreter\n    if use_TPU:\n        from tflite_runtime.interpreter import load_delegate\nelse:\n    from tensorflow.lite.python.interpreter import Interpreter\n    if use_TPU:\n        from tensorflow.lite.python.interpreter import load_delegate\n\n# TPU를 사용한다면 TPU 모델을 가져옵니다.\nif use_TPU:\n    # 'edgetpu.tflite'가 TPU를 사용할 때의 기본 경로입니다.\n    if (GRAPH_NAME == 'model.tflite'):\n        GRAPH_NAME = 'edgetpu.tflite'       \n\n# 작업 경로와 현재 경로를 일치시킵니다.\nCWD_PATH = os.getcwd()\n\n# 모델 경로를 설정합니다.\nPATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,GRAPH_NAME)\n\n# 라벨 경로를 설정합니다.\nPATH_TO_LABELS = os.path.join(CWD_PATH,MODEL_NAME,LABELMAP_NAME)\n\n# 라벨을 가져옵니다.\nwith open(PATH_TO_LABELS, 'r') as f:\n    labels = [line.strip() for line in f.readlines()]\n\n# 첫번째 라벨이 ??? 인 경우가 있어 그럴 경우 제거합니다.\nif labels[0] == '???':\n    del(labels[0])\n\n# 텐서플로우 모델을 가져옵니다. TPU를 쓸 경우 TPU 모델로 가져옵니다.\nif use_TPU:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT,\n                              experimental_delegates=[load_delegate('libedgetpu.so.1.0')])\n    print(PATH_TO_CKPT)\nelse:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT)\n\ninterpreter.allocate_tensors()\n\n# 로드된 모델의 정보를 가져옵니다.\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nheight = input_details[0]['shape'][1]\nwidth = input_details[0]['shape'][2]\n#print(\"가로\")\n#print(width)\n#print(\"세로\")\n#print(height)\n# 입력이 소수인지 아닌지 판단합니다.\nfloating_model = (input_details[0]['dtype'] == np.float32)\n\ninput_mean = 127.5\ninput_std = 127.5\n\n# 연산 프레임을 체크하기 위한 변수를 할당합니다.\nframe_rate_calc = 1\nfreq = cv2.getTickFrequency()\n\n# 상단에서 정의한 비디오 스트림을 시작합니다.\nvideostream = VideoStream(resolution=(imW,imH),framerate=30).start() \ntime.sleep(1)\n\n# 프레임으로 연산을 시작합니다.\nwhile True:\n\n    # 연산 프레임을 위한 시간 체크 변수를 할당합니다.\n    t1 = cv2.getTickCount()\n\n    # 비디오스트림에서 프레임을 읽어옵니다.\n    frame1 = videostream.read()\n\n    # 입력에 넣을 수 있도록 해상도를 변경합니다.\n    frame = frame1.copy()\n    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n    # 위에서 input을 224,224로 설정했다면 아래 줄은 넘어가도 됩니다..\n    frame_resized = cv2.resize(frame_rgb, (width, height)) \n    input_data = np.expand_dims(frame_resized, axis=0)\n\n    # 입력이 소수라면 소수로 바꿔줍니다.\n    if floating_model:\n        input_data = (np.float32(input_data) - input_mean) / input_std\n\n    # 로드된 모델에 입력을 넣어 결과를 가져옵니다.\n    interpreter.set_tensor(input_details[0]['index'],input_data)\n    interpreter.invoke()\n    result=interpreter.get_tensor(output_details[0]['index'])[0]\n    print(labels[np.argmax(result)])\n    #print(result)\n    # 초당 연산 프레임을 계산합니다.\n    t2 = cv2.getTickCount()\n    time1 = (t2-t1)/freq\n    frame_rate_calc= 1/time1\n    #print(frame_rate_calc)\n`;\n","import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport WifiSSH from \"./WifiSSH\";\nimport BlockCode from \"./BlockCode\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pibox\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: null,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      isAndroid: navigator.userAgent.indexOf(\"Android\") > -1 || navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone: navigator.userAgent.indexOf(\"iPhone\") > -1 || navigator.userAgent.indexOf(\"iphone\") > -1\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID]\n          }\n        ]\n      })\n      .then(device => {\n        //GO loading screen\n        return device.gatt.connect();\n      })\n      .then(server => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then(service => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async characteristics => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \"\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\"\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"...\"\n          }\n        ];\n\n        await this.subscribeCharacteristic(UUID.WIFI_NAME, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.IP_ADDRESS, infoList, characteristicsList);\n        await this.readInfoCharacteristic(UUID.DEVICE_MODEL, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.NOTIFY_MESSAGE, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY, infoList, characteristicsList);\n\n        characteristicsList\n          .filter(i => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map(item =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\"\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(infoList[i].uuid_label, infoList, characteristicsList);\n          await this.subscribeCharacteristic(infoList[i].uuid, infoList, characteristicsList);\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter(i => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map(item =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\"\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(commandList[i].uuid, commandList, characteristicsList);\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList\n        });\n        // loading close\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise(resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(label => {\n          let tempCMDList = commandList;\n          tempCMDList.find(i => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise(resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(value => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find(i => i.uuid === uuid)) {\n            tempInfoList.find(i => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find(i => i.uuid_label === uuid)) {\n            tempInfoList.find(i => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList) this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\"characteristicvaluechanged\", event => {\n        if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n          let msg = this.ab2str(event.target.value.buffer);\n          notify.show(msg, \"custom\", 3000, \"teal\");\n        } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n          let msg = this.ab2str(event.target.value.buffer);\n          if (this.state.commandOutputShouldRefresh) {\n            this.setState({ commandOutputShouldRefresh: false, commandOutput: \"\" }, () => {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            });\n          } else {\n            let output = this.state.commandOutput + msg;\n            if (output.endsWith(\"&#&\")) {\n              output = output.replace(\"&#&\", \"\");\n              this.setState({ commandOutputShouldRefresh: true });\n            }\n            this.setState({ commandOutput: output });\n          }\n        } else {\n          let value = this.ab2str(event.target.value.buffer);\n          let tempInfoList = infoList;\n          if (tempInfoList.find(i => i.uuid === uuid)) {\n            tempInfoList.find(i => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find(i => i.uuid_label === uuid)) {\n            tempInfoList.find(i => i.uuid_label === uuid).label = value;\n          }\n          this.setState({ infoList: tempInfoList });\n        }\n      });\n      await this.getCharacteristicInit(uuid, characteristicsList).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = service => {\n    return new Promise(async resolve => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then(characteristic => characteristic.readValue())\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then(value => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then(characteristic => characteristic.readValue())\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then(value => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending);\n            }\n            let customCommandList = [];\n            for (let index = 0; index < this.state.customCommandCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending);\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map(i => service.getCharacteristic(i)),\n                ...customCommandList.map(i => service.getCharacteristic(i))\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = buf => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = uuid => {\n    return this.state.characteristicsList.find(i => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find(i => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    this.setState(\n      {\n        key: this.state.key.trim().replace(/\\|/g, \"*\"),\n        ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n        password: this.state.password.trim().replace(/\\|/g, \"*\")\n      },\n      () => {\n        let errMsg;\n        if (this.state.ssid === \"\") {\n          errMsg = \"SSID cannot be empty.\";\n        }\n        if (this.state.password === \"\") {\n          errMsg = \"Password cannot be empty.\";\n        }\n        if (errMsg) {\n          notify.show(errMsg, \"custom\", 3000, \"teal\");\n          return;\n        }\n        this.setState({ wifiLock: true }, () =>\n          setTimeout(() => {\n            this.setState({ wifiLock: false });\n          }, 4000)\n        );\n\n        let sendArray = this.str2abs(`${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`);\n        this.sendSeparately(sendArray, UUID.INPUT_SEP);\n      }\n    );\n  };\n  sendCommand = uuid => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async sec => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n  str2abs = str => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function(h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">Cannot find web bluetooth.</div>\n                <p>\n                  Please make sure your device and browser support web bluetooth. Please visit{\" \"}\n                  <a href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\" target=\"_brank\">\n                    Here\n                  </a>{\" \"}\n                  to check web-bluetooth compatibility.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">PIBOX. 라즈베이파이를 블루투스로 찾아 제어할 수 있습니다.</div>\n                <div>\n                  <button className=\"findBluetooth\" onClick={this.connectDevice}>\n                    블루투스로 찾기\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map(item => (\n                  <div key={item.uuid} className=\"info-group\">\n                    <div className=\"label\">{item.label}</div>\n                    <div className=\"value\">{item.value}</div>\n                  </div>\n                ))}\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"wifi-panel panel\">\n                <div className=\"panel-title\">라즈베리파이 와이파이 설정</div>\n                <div>\n                  <input placeholder=\"와이파이 이름(SSID)\" value={this.state.ssid} onChange={value => this.setState({ ssid: value.target.value })} />\n                </div>\n                <div>\n                  <input placeholder=\"와이파이 비밀번호\" value={this.state.password} onChange={value => this.setState({ password: value.target.value })} type=\"password\" />\n                </div>\n                <div>\n                  <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={value => this.setState({ key: value.target.value })} />\n                </div>\n                <div>\n                  <button onClick={this.inputWifi} disabled={this.state.wifiLock}>\n                    와이파이 설정\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"command-panel panel\">\n                <div className=\"panel-title\">커스텀 명령어</div>\n                {this.state.commandList.length > 0 ? (\n                  <div>\n                    <div>\n                      {this.state.commandList.map(item => (\n                        <div key={item.uuid} className=\"button-wrap\">\n                          <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                            {item.label}\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div>\n                      <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={value => this.setState({ key: value.target.value })} />\n                    </div>\n                    <div>\n                      <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                    </div>\n                  </div>\n                ) : (\n                  <p>커스텀 명령어가 없습니다.</p>\n                )}\n              </div>\n            ) : null}\n          </div>\n          {this.state.isConnected && false ? (\n            <div className=\"panel-container\">\n              <WifiSSH ipAddress={this.state.infoList.find(i => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find(i => i.label === \"IP Address\").value} />\n            </div>\n          ) : null}\n          {this.state.isConnected && this.state.infoList.find(i => i.label === \"Machine ID\") !== undefined ? (\n            <div className=\"panel-container\">\n              <BlockCode\n                ipAddress={this.state.infoList.find(i => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find(i => i.label === \"IP Address\").value}\n                machineId={this.state.infoList.find(i => i.label === \"Machine ID\") === undefined ? \"\" : this.state.infoList.find(i => i.label === \"Machine ID\").value}\n              />\n            </div>\n          ) : null}\n\n          <div className=\"copyright\">PiBox . Open source under GPL-3.0 license.</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n","module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n","module.exports = __webpack_public_path__ + \"static/media/servomotor.ba097c0f.png\";","module.exports = __webpack_public_path__ + \"static/media/motor.d4643de8.png\";","module.exports = __webpack_public_path__ + \"static/media/led.cd049886.png\";","module.exports = __webpack_public_path__ + \"static/media/none.bd980005.png\";"],"sourceRoot":""}