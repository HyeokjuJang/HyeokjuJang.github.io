{"version":3,"sources":["uuid.js","Loading.js","Tfjs.js","ProgressBar.js","BlockCode.js","PythonCodeBase.js","BluetoothConnect.js","App.js","index.js"],"names":["module","exports","PREFIX","SERVICE_ID","SERVICE_NAME","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","INPUT","NOTIFY_MESSAGE","INPUT_SEP","CUSTOM_COMMAND_INPUT","CUSTOM_COMMAND_NOTIFY","CUSTOM_INFO_LABEL","CUSTOM_INFO_COUNT","CUSTOM_INFO","CUSTOM_COMMAND_LABEL","CUSTOM_COMMAND_COUNT","Loading","props","className","style","flex","color","height","width","TfMain","camera","machineId","ipAddress","setProbability","setDataCount","console","log","this","infoTexts","data","label","training","videoPlaying","trained","inputFirst","isTraining","numClasses","completeModel","exampleCount","Array","fill","lastChildAddClass","result","resultConfidence","piboxPy","removing","body","document","undefined","current","bindPage","video","createElement","appendChild","i","div","marginBottom","button","innerText","addEventListener","infoText","push","src","crossOrigin","canvasEl","getElementById","toString","removeChild","firstChild","error","idx","lastIndexOf","splice","slice","concat","tf","mobilenet","layer","getLayer","inputs","outputs","output","loadMobileNet","trainable","predict","start","timer","stop","tagName","play","requestAnimationFrame","animate","bind","pause","cancelAnimationFrame","callback","length","alert","trainButton","labels","model","denseLayer1","dense","inputShape","shape","units","activation","use_bias","kernel_initializer","denseLayer2","add","compile","optimizer","adam","loss","metrics","forEach","e","parseInt","oldLabels","dispose","fit","epochs","batchSize","callbacks","onBatchEnd","batch","logs","acc","then","info","history","save","http","requestInit","method","headers","machine_id","image","IMAGE_SIZE","canvas","id","insertBefore","childNodes","lastChild","ctx","getContext","imageData","ImageData","dataSync","j","putImageData","nowClass","ms","Promise","resolve","setTimeout","fromPixels","resizeBilinear","newX","expandDims","toFloat","sub","oldData","draw","logits","predictedClass","as1D","argMax","res","confidence","fontWeight","Math","round","sleep","ProgressBar","bgcolor","completed","fillerStyles","backgroundColor","borderRadius","textAlign","margin","padding","BlockCode","useState","setLabels","ch1OutputType","setCh1OutputType","ch2OutputType","setCh2OutputType","ch1OutputAmount","setCh1OutputAmount","ch2OutputAmount","setCh2OutputAmount","tfFunc","setTfFunc","moveMotorThreshold","checkMove","setCheckMove","piboxUploadBtnName","setPiboxUploadBtnName","checkTime","setCheckTime","probability","dataCount","useRef","useEffect","a","wait","setLoadingToFalse","waitAndLoadingToFalse","getSetOutput","setOutputContext","getIfContext","chk","context","index","func","noOutputCh1","noOutputCh2","isNaN","parseFloat","r","g","b","getBackContext","back","downloadPy","setLoadingToTrue","download","front2","middleIf","file","Blob","type","piForm","FormData","append","fetch","mode","cache","credentials","redirect","referrer","sendCommand","uploadUUID","sendLEDoff","url","ch1Command","ch2Command","Date","now","sendMoving","delay","savedCallback","setInterval","clearInterval","useInterval","sec","alt","onClick","setIsBlockCoding","display","marginLeft","ref","train","cursor","marginRight","state","map","key","floor","position","top","onMouseDown","addTrainingData","onMouseUp","onTouchStart","onMouseLeave","onTouchEnd","onTouchMove","onTouchCancel","draggable","removeTrainingData","size","noshade","marginTop","onChange","value","target","newState","fontSize","defaultValue","rgb","onChangeComplete","selectOutputMount","addClass","BluetoothConnect","connectDevice","navigator","bluetooth","requestDevice","filters","services","UUID","device","setState","loading","gatt","connect","server","serverId","getPrimaryService","service","isIphone","webBleConnect","getCharacteristics","characteristics","characteristicsList","isConnected","infoList","preset","uuid","subscribeCharacteristic","readInfoCharacteristic","filter","indexOf","item","replace","uuid_label","tempCharList","commandList","readCommandLabel","catch","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","event","msg","notify","show","commandOutputShouldRefresh","commandOutput","endsWith","startNotifications","getCharacteristic","characteristic","customInfoCount","customCommandCount","customInfoList","ending","repeat","customCommandList","all","buf","String","fromCharCode","apply","Uint8Array","inputWifi","wifiEnt","trim","ssid","entId","password","errMsg","wifiLock","wifiReset","sendArray","str2abs","sendSeparately","c","array","writeValue","waitCamera","fetchTimeout","ok","str","val","charCodeAt","valArray","split","bufferArray","join","match","h","setIsBlockCodingToFalse","isBlockCoding","supportBluetooth","Boolean","window","charLength","isAndroid","userAgent","wifiConnected","wifiDirectSSID","toLowerCase","href","checked","placeholder","disabled","onKeyPress","location","reload","React","Component","options","timeout","race","_","reject","Error","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.60503c22.chunk.js","sourcesContent":["module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\nconst Loading = (props) => {\n  return (\n    <div className=\"loading\">\n      <div style={{ flex: \"auto\" }}>\n        <ReactLoading color={\"#EFEFEF\"} height={\"100%\"} width={\"100%\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as tf from \"@tensorflow/tfjs\";\n\n// Number of classes to classify\nconst NUM_CLASSES = 2;\n// Webcam Image size. Must be 224.\nconst IMAGE_SIZE = 96;\n\nexport class TfMain {\n  constructor(camera, machineId, ipAddress, setProbability, setDataCount) {\n    console.log(machineId);\n    // Initiate variables\n    this.infoTexts = [];\n    this.data = null;\n    this.label = [];\n    this.training = -1; // -1 when no class is being trained\n    this.videoPlaying = false;\n    this.trained = false;\n    this.inputFirst = true;\n    this.isTraining = false;\n    this.ipAddress = ipAddress;\n    this.numClasses = NUM_CLASSES;\n    this.completeModel = null;\n    this.exampleCount = new Array(NUM_CLASSES).fill(0);\n    this.lastChildAddClass = null;\n    this.machineId = machineId;\n    this.result = -1;\n    this.resultConfidence = 0;\n    this.piboxPy = \"\";\n    this.setProbability = setProbability;\n    this.setDataCount = setDataCount;\n    this.removing = false;\n\n    this.body = document.body;\n    if (camera.current !== undefined) {\n      this.body = camera.current;\n    }\n\n    this.bindPage();\n\n    // // Create video element that will contain the webcam image\n    // this.video = document.createElement(\"video\");\n    // this.video.setAttribute(\"autoplay\", \"\");\n    // this.video.setAttribute(\"playsinline\", \"\");\n\n    // Create image element for picamera streaming\n    this.video = document.createElement(\"img\");\n\n    // Add video element to DOM\n    this.body.appendChild(this.video);\n\n    // Create training buttons and info texts\n    for (let i = 0; i < this.numClasses; i++) {\n      const div = document.createElement(\"div\");\n      this.lastChildAddClass = div;\n      this.body.appendChild(div);\n\n      div.style.marginBottom = \"10px\";\n\n      // Create training button\n      const button = document.createElement(\"button\");\n      button.innerText = \"데이터 추가 - 클래스 \" + (i + 1);\n      //div.appendChild(button);\n\n      // Listen for mouse events when clicking the button\n      button.addEventListener(\"mousedown\", () => (this.training = i));\n      button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n      // Create info text\n      const infoText = document.createElement(\"span\");\n      infoText.innerText = \" 추가된 데이터가 없습니다.\";\n      //div.appendChild(infoText);\n      this.infoTexts.push(infoText);\n    }\n\n    // let div = document.createElement(\"div\");\n    // this.lastChildAddClass = div;\n    // this.body.appendChild(div);\n    // div.style.marginBottom = \"10px\";\n\n    // Create training button\n    // let button = document.createElement(\"button\");\n    // button.innerText = \"PLAi 학습하기\";\n    // button.id = \"trainButton\";\n    // div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    // button.addEventListener(\"mouseup\", () => this.train());\n\n    // div = document.createElement(\"div\");\n    // this.body.appendChild(div);\n    // div.style.marginBottom = \"10px\";\n\n    // Create training button\n    // button = document.createElement(\"button\");\n    // button.innerText = \"학습한 모델 저장\";\n    // button.id = \"modelSave\";\n    // div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    // button.addEventListener(\"mouseup\", () => {\n    //   this.download();\n    // });\n\n    //using webcam\n    if (0) {\n      // Setup webcam\n      navigator.mediaDevices\n        .getUserMedia({\n          video: { width: IMAGE_SIZE, height: IMAGE_SIZE },\n          audio: false,\n        })\n        .then((stream) => {\n          this.video.srcObject = stream;\n          this.video.width = IMAGE_SIZE;\n          this.video.height = IMAGE_SIZE;\n\n          this.video.addEventListener(\n            \"playing\",\n            () => (this.videoPlaying = true)\n          );\n          this.video.addEventListener(\n            \"paused\",\n            () => (this.videoPlaying = false)\n          );\n        });\n    }\n    //using picamera\n    if (1) {\n      this.video.src = \"http://\" + this.ipAddress + \":8000/stream.mjpg\";\n      this.video.width = 224;\n      this.video.height = 224;\n      this.video.crossOrigin = \"anonymous\";\n    }\n  }\n\n  addTrainingData(label) {\n    this.training = label;\n  }\n\n  async removeTrainingData(label) {\n    if (\n      label >= 0 &&\n      label < this.numClasses &&\n      this.exampleCount[label] > 0 &&\n      this.data !== null &&\n      !this.removing\n    ) {\n      this.removing = true;\n\n      // canvas에서 뺀다.\n      const canvasEl = document.getElementById(\"canvas-\" + label.toString());\n      try {\n        canvasEl.removeChild(canvasEl.firstChild);\n      } catch (error) {\n        //no canvas\n      }\n\n      // find last child's index from the array\n      var idx = this.label.lastIndexOf(label);\n      this.label.splice(idx, 1);\n      this.data = await this.data\n        .slice([0], [idx])\n        .concat(this.data.slice([idx + 1], [-1]), 0);\n\n      // example count에서도 뺀다.\n      this.exampleCount[label] -= 1;\n\n      this.removing = false;\n      // console.log(this.data.shape[0]);\n    }\n  }\n\n  async loadMobileNet() {\n    const mobilenet = await tf.loadLayersModel(\n      `./assets/${IMAGE_SIZE}_0.35/model.json`\n    );\n    const layer = mobilenet.getLayer(\n      IMAGE_SIZE === 160\n        ? \"global_average_pooling2d\"\n        : \"global_average_pooling2d_1\"\n    );\n    return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n  }\n\n  async bindPage() {\n    this.mobilenet = await this.loadMobileNet();\n    this.mobilenet.trainable = false;\n    this.mobilenet.predict(tf.zeros([1, IMAGE_SIZE, IMAGE_SIZE, 3]));\n\n    //tf.setBackend(\"webgl\");\n    //console.log(this.model.summary());\n\n    this.start();\n  }\n\n  start() {\n    if (this.timer) {\n      this.stop();\n    }\n    if (this.video.tagName === \"video\") this.video.play();\n    else this.videoPlaying = true;\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  stop() {\n    if (this.video.tagName === \"video\") this.video.pause();\n    this.videoPlaying = false;\n    cancelAnimationFrame(this.timer);\n  }\n\n  train(callback) {\n    if (!this.isTraining && this.label.length !== 0) {\n      this.isTraining = true;\n      const trainButton = document.getElementById(\"trainButton\");\n      //trainButton.innerText = \"잠시 기다려주세요...\";\n      //trainButton.disabled = true;\n      trainButton.src = \"img/plai_training.svg\";\n      console.log(\"train start\");\n\n      let labels = null;\n      this.model = tf.sequential();\n      this.denseLayer1 = tf.layers.dense({\n        inputShape: this.mobilenet.outputs[0].shape.slice(1),\n        units: 100,\n        activation: \"relu\",\n        use_bias: true,\n        kernel_initializer: \"varianceScaling\",\n      });\n      this.denseLayer2 = tf.layers.dense({\n        units: this.numClasses,\n        activation: \"softmax\",\n        use_bias: false,\n        kernel_initializer: \"varianceScaling\",\n      });\n\n      this.model.add(this.denseLayer1);\n      this.model.add(this.denseLayer2);\n      this.model.compile({\n        optimizer: tf.train.adam(0.0001),\n        loss: \"categoricalCrossentropy\",\n        metrics: [\"accuracy\"],\n      });\n\n      this.label.forEach((e) => {\n        const label = tf.oneHot(\n          tf.tensor1d([parseInt(e)], \"int32\"),\n          this.numClasses\n        );\n        if (labels === null) labels = label;\n        else {\n          const oldLabels = labels;\n          labels = oldLabels.concat(label, 0);\n          oldLabels.dispose();\n        }\n      });\n      //this.data.print();\n      //labels.print();\n      function onBatchEnd(batch, logs) {\n        console.log(\"Accuracy\", logs.acc);\n      }\n      this.model\n        .fit(this.data, labels, {\n          epochs: 20,\n          batchSize: parseInt(this.label.length * 0.4),\n          callbacks: { onBatchEnd },\n        })\n        .then((info) => {\n          console.log(\"Final accuracy\", info.history.acc);\n          this.trained = true;\n          this.isTraining = false;\n          trainButton.src = \"img/plai_train.svg\";\n          //trainButton.innerText = \"PLAi 학습하기\";\n          //trainButton.disabled = false;\n          callback();\n        });\n    } else {\n      alert(\n        \"데이터를 수집중이거나 학습할 데이터가 없는 클래스가 있어 학습을 시작할 수 없습니다.\"\n      );\n      callback();\n    }\n  }\n\n  async download() {\n    // const saveButton = document.getElementById(\"modelSave\");\n    // saveButton.innerText = \"잠시 기다려주세요...\";\n    // saveButton.disabled = true;\n    this.completeModel = tf.sequential();\n    this.completeModel.add(this.mobilenet);\n    try {\n      this.completeModel.add(this.model);\n    } catch (error) {\n      return false;\n    }\n\n    try {\n      //await this.completeModel.save(\"downloads://model\");\n      await this.completeModel.save(\n        tf.io.http(\"http://tfjson-to-tflite.unicityclean.com/upload\", {\n          //tf.io.http(\"http://tfjson-to-tflite-2053599458.ap-northeast-2.elb.amazonaws.com/upload\", {\n          requestInit: {\n            method: \"POST\",\n            headers: { machine_id: this.machineId },\n          },\n        })\n      );\n      // saveButton.innerText = \"(성공)학습한 모델 저장\";\n      // saveButton.disabled = false;\n      return true;\n    } catch (error) {\n      // saveButton.innerText = \"(실패)학습한 모델 저장\";\n      // saveButton.disabled = false;\n      return false;\n    }\n  }\n\n  async draw(image, label) {\n    const [width, height] = [IMAGE_SIZE / 2, IMAGE_SIZE / 2];\n    const canvasEl = document.getElementById(\"canvas-\" + label.toString());\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = width;\n    canvas.height = height;\n    canvas.className = \"cameraData\";\n    canvas.id =\n      \"data-\" + label.toString() + \"-\" + this.data.shape[0].toString();\n    canvasEl.insertBefore(canvas, canvasEl.firstChild);\n    if (canvasEl.childNodes.length > 25)\n      canvasEl.removeChild(canvasEl.lastChild);\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = new ImageData(width, height);\n    const data = image.dataSync();\n    for (let i = 0; i < height * width; ++i) {\n      const j = i * 4;\n      imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\n      imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\n      imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\n      imageData.data[j + 3] = 255;\n    }\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  addClass() {\n    this.exampleCount.push(0);\n    this.setDataCount(this.exampleCount);\n    this.numClasses += 1;\n    const div = document.createElement(\"div\");\n\n    this.body.insertBefore(div, this.lastChildAddClass);\n\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    const button = document.createElement(\"button\");\n    button.innerText = \"데이터 추가 - 클래스 \" + this.numClasses;\n    //div.appendChild(button);\n    const nowClass = this.numClasses;\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mousedown\", () => (this.training = nowClass - 1));\n    button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n    // Create info text\n    const infoText = document.createElement(\"span\");\n    infoText.innerText = \" 추가된 데이터가 없습니다.\";\n    //div.appendChild(infoText);\n    this.infoTexts.push(infoText);\n  }\n\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  async animate() {\n    if (this.videoPlaying) {\n      // Get image data from video element\n      const image = tf.tidy(() =>\n        tf.browser.fromPixels(this.video).resizeBilinear([96, 96])\n      );\n\n      let logits;\n      // 'conv_preds' is the logits activation of MobileNet.\n\n      // Train class if one of the buttons is held down\n      if (this.training !== -1) {\n        const newX = image.expandDims(0).toFloat().div(127).sub(1);\n        // Add current image to classifier\n        if (!this.inputFirst) {\n          const oldData = this.data;\n          this.data = oldData.concat(this.mobilenet.predict(newX), 0);\n          this.label.push(this.training);\n          oldData.dispose();\n        } else {\n          this.data = this.mobilenet.predict(newX);\n          this.label.push(this.training);\n          this.inputFirst = false;\n        }\n        await this.draw(newX.resizeBilinear([48, 48]), this.training);\n        this.exampleCount[this.training] += 1;\n        this.setDataCount(this.exampleCount);\n        newX.dispose();\n      }\n\n      //if (hasClass(this.data.map(e => e.length)) > 0) {\n      if (this.trained) {\n        // If classes have been added run predict\n        logits = tf.tidy(() =>\n          this.model.predict(\n            this.mobilenet.predict(\n              image.expandDims(0).toFloat().div(127).sub(1)\n            )\n          )\n        );\n        const predictedClass = tf.tidy(() => logits.as1D().argMax());\n\n        const res = (await predictedClass.data())[0];\n        const confidence = await logits.data();\n        this.setProbability(confidence);\n        for (let i = 0; i < this.numClasses; i++) {\n          // Make the predicted class bold\n          if (res === i) {\n            this.infoTexts[i].style.fontWeight = \"bold\";\n            this.result = i;\n            this.resultConfidence = confidence[i] * 100;\n          } else {\n            this.infoTexts[i].style.fontWeight = \"normal\";\n          }\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${\n              this.exampleCount[i]\n            } examples - ${Math.round(confidence[i] * 100)}%`;\n            this.setDataCount(this.exampleCount);\n          }\n        }\n        predictedClass.dispose();\n        logits.dispose();\n      } else {\n        for (let i = 0; i < this.numClasses; i++) {\n          // The number of examples for each class\n\n          // Update info text\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples`;\n            this.setDataCount(this.exampleCount);\n          }\n        }\n      }\n\n      // Dispose image when done\n      image.dispose();\n      // console.log(tf.memory());\n    }\n    await this.sleep(30);\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\n//window.addEventListener(\"load\", () => new Main());\n","import React from \"react\";\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 50,\n    margin: 8,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n    //transition: \"width 0.5s ease-in-out\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState, useEffect, useRef } from \"react\";\n// eslint-disable-next-line\nimport { SketchPicker, CompactPicker } from \"react-color\";\nimport { TfMain } from \"./Tfjs\";\nimport { front, middle } from \"./PythonCodeBase\";\nimport ProgressBar from \"./ProgressBar\";\n\nexport default function BlockCode(props) {\n  let fileReader;\n  const [labels, setLabels] = useState([\"클래스 1\", \"클래스 2\"]);\n  const [ch1OutputType, setCh1OutputType] = useState(0);\n  const [ch2OutputType, setCh2OutputType] = useState(0);\n  const [ch1OutputAmount, setCh1OutputAmount] = useState([]);\n  const [ch2OutputAmount, setCh2OutputAmount] = useState([]);\n  const [tfFunc, setTfFunc] = useState(null);\n  // eslint-disable-next-line\n  const [moveMotorThreshold, setMoveMotorThreshold] = useState(80);\n  const [checkMove, setCheckMove] = useState(false);\n  const [piboxUploadBtnName, setPiboxUploadBtnName] =\n    useState(\"블록코드 업로드\");\n  const [checkTime, setCheckTime] = useState(0);\n  const [probability, setProbability] = useState([0, 0]);\n  const [dataCount, setDataCount] = useState([0, 0]);\n  const camera = useRef(\"\");\n  // eslint-disable-next-line\n  const piboxUploadBtn = useRef(\"\");\n\n  useEffect(() => {\n    async function waitAndLoadingToFalse() {\n      await wait(2.0);\n      props.setLoadingToFalse();\n    }\n    if (camera.current !== undefined && props.machineId !== \"\") {\n      setTfFunc(\n        new TfMain(\n          camera,\n          props.machineId,\n          props.ipAddress,\n          setProbability,\n          setDataCount\n        )\n      );\n      setCh1OutputAmount(new Array(2).fill(\"\"));\n      setCh2OutputAmount(new Array(2).fill(\"\"));\n      waitAndLoadingToFalse();\n    } // eslint-disable-next-line\n  }, [camera, props.machineId]);\n\n  const uploadFile = (file) => {\n    // 파일이 입력되면 먼저 여기로 들어오게된다.\n    // 파일입력이 없음에도 들어오면 바로 컷\n    if (file === undefined) {\n      return;\n    }\n\n    fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      const content = fileReader.result;\n      const result = [];\n      content.split(\"\\n\").forEach((label) => {\n        result.push(label.substr(2));\n        console.log(label);\n      });\n      if (result[result.length - 1] === \"\") {\n        result.pop();\n      }\n      setLabels(result);\n      setCh1OutputType(0);\n      setCh2OutputType(0);\n      setCh1OutputAmount(new Array(result.length).fill(\"\"));\n      setCh2OutputAmount(new Array(result.length).fill(\"\"));\n    };\n    fileReader.readAsText(file);\n  };\n\n  function addClass() {\n    tfFunc.addClass();\n    setLabels((state) => [...state, `클래스 ${labels.length + 1}`]);\n    setCh1OutputAmount((state) => [...state, \"\"]);\n    setCh2OutputAmount((state) => [...state, \"\"]);\n    setProbability((state) => [...state, 0]);\n  }\n\n  function getSetOutput() {\n    let setOutputContext = `GPIO.setmode(GPIO.BCM)\npwm = pigpio.pi() \n    `;\n    // 서보모터\n    if (ch1OutputType === 1)\n      setOutputContext += `\npwm.set_mode(18, pigpio.OUTPUT)\n`;\n    else if (ch1OutputType === 2)\n      setOutputContext += `\nGPIO.setup(18,GPIO.OUT) # Channel 1 Speed\nGPIO.setup(23,GPIO.OUT) # Direction of Channel 1\nGPIO.output(23,0) \nm1=GPIO.PWM(18,50)\nm1.start(0)\n`;\n    else if (ch1OutputType === 3 && ch2OutputType !== 3)\n      setOutputContext += `\npix1 = neopixel.NeoPixel(board.D18,12)\n`;\n    // 서보모터\n    if (ch2OutputType === 1)\n      setOutputContext += `\npwm.set_mode(12, pigpio.OUTPUT)\n`;\n    else if (ch2OutputType === 2)\n      setOutputContext += `\nGPIO.setup(12,GPIO.OUT) # Channel 2 Speed\nGPIO.setup(25,GPIO.OUT)\nGPIO.output(25,0) # Direction of Channel 2\nm2=GPIO.PWM(12,50)\nm2.start(0)\n`;\n    else if (ch2OutputType === 3 && ch1OutputType !== 3)\n      setOutputContext += `\npix2 = neopixel.NeoPixel(board.D12,12)\n`;\n    return setOutputContext;\n  }\n  function getIfContext() {\n    let chk = 0;\n    let context = `    # From here. the block code\n    resultIndex = np.argmax(result)\n`;\n    labels.forEach((label, index) => {\n      let func = \"\";\n      let noOutputCh1 = false;\n      let noOutputCh2 = false;\n      // 타입이 0 이면 아웃풋이 없다.\n      if (ch1OutputType === 0) noOutputCh1 = true;\n      else if (ch1OutputType === 1) {\n        // 타입이 1이면 서보모터 실행\n        if (isNaN(parseFloat(ch1OutputAmount[index]))) noOutputCh1 = true;\n        else\n          func += `pwm.set_servo_pulsewidth(18,${\n            (parseFloat(ch1OutputAmount[index]) / 180) * 2000 + 500\n          }) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      }\n      // 타입이 2면 DC모터\n      else if (ch1OutputType === 2)\n        func += `m1.ChangeDutyCycle(${ch1OutputAmount[index][1]})\n        GPIO.output(23,${ch1OutputAmount[index][0]}) # Control direction\n        ${\n          ch2OutputType === 2\n            ? \"\"\n            : `time.sleep(${ch1OutputAmount[index][2]})\n        m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)\n        `\n        }\n        `;\n      // LED\n      else if (ch1OutputType === 3)\n        func += `pix1.fill((${ch1OutputAmount[index].r},${ch1OutputAmount[index].g},${ch1OutputAmount[index].b}))\n        pix1.show()\n        `;\n      // 서보모터\n      else noOutputCh1 = true;\n      if (ch2OutputType === 0) noOutputCh2 = true;\n      else if (ch2OutputType === 1) {\n        if (isNaN(parseFloat(ch2OutputAmount[index]))) noOutputCh2 = true;\n        else\n          func += `pwm.set_servo_pulsewidth(12,${\n            (parseFloat(ch2OutputAmount[index]) / 180) * 2000 + 500\n          }) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      }\n      // DC모터\n      else if (ch2OutputType === 2)\n        func += `m2.ChangeDutyCycle(${ch2OutputAmount[index][1]})\n        GPIO.output(25,${ch2OutputAmount[index][0]}) # Control direction\n        time.sleep(${ch2OutputAmount[index][2]})\n        ${\n          ch1OutputType === 2\n            ? `m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)`\n            : \"\"\n        }\n        m2.ChangeDutyCycle(0)\n        GPIO.output(25,0)\n        `;\n      // LED\n      else if (ch2OutputType === 3)\n        func += `pix2.fill((${ch2OutputAmount[index].r},${ch2OutputAmount[index].g},${ch2OutputAmount[index].b}))\n        pix2.show()\n        `;\n      // 아무것도 없다\n      else noOutputCh2 = true;\n      if (noOutputCh1 === true && noOutputCh2 === true) return;\n      if (\n        (ch1OutputType !== 0 && ch1OutputAmount[index] !== \"\") ||\n        (ch2OutputType !== 0 && ch2OutputAmount[index] !== \"\")\n      ) {\n        if (chk === 0) {\n          context += `\n    if `;\n          chk = 1;\n        } else {\n          context += `\n    elif `;\n        }\n      }\n      context += `resultIndex == ${index}:\n        ${func}\n        `;\n    });\n    return context;\n  }\n  function getBackContext() {\n    let back = `\n# Clean up\ncv2.destroyAllWindows()\nvideostream.stop()\n`;\n\n    if (ch1OutputType === 1 || ch2OutputType === 1) {\n      back += `pwm.stop()\n`;\n    }\n    if (ch1OutputType === 2) {\n      back += `m1.stop()\n`;\n    }\n    if (ch2OutputType === 2) {\n      back += `m2.stop()\n`;\n    }\n    back += `GPIO.cleanup()\n`;\n    return back;\n  }\n  const downloadPy = async () => {\n    //piboxUploadBtn.current.disabled = true;\n    setPiboxUploadBtnName(\"잠시만 기다려주세요...\");\n    props.setLoadingToTrue();\n    const isModel = await tfFunc.download();\n    if (!isModel) {\n      setPiboxUploadBtnName(\"블록코드 업로드\");\n      props.setLoadingToFalse();\n      return;\n    }\n    //const element = document.createElement(\"a\");\n    const front2 = getSetOutput();\n    const middleIf = getIfContext();\n    const back = getBackContext();\n    const file = new Blob([front, front2, middle, middleIf, back], {\n      type: \"text/plain\",\n    });\n    // element.href = URL.createObjectURL(file);\n    // element.download = \"pibox.py\";\n    // document.body.appendChild(element); // Required for this to work in FireFox\n    //element.click();\n    const piForm = new FormData();\n    piForm.append(\"pibox\", file, \"pibox.py\");\n    try {\n      fetch(\"http://tfjson-to-tflite.unicityclean.com/pibox\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          machine_id: props.machineId,\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: piForm,\n      })\n        .then(() => {\n          props.sendCommand(props.uploadUUID);\n        })\n        .then(() => {\n          props.setLoadingToFalse();\n          setPiboxUploadBtnName(\"블록코드 업로드\");\n          alert(\n            \"업로드가 완료되었습니다. 잠시 기다렸다가 PLAi 실행을 해주세요.\"\n          );\n          //piboxUploadBtn.current.disabled = false;\n        });\n    } catch (error) {\n      console.log(error);\n      props.setLoadingToFalse();\n      alert(\"업로드 실패, 나중에 다시 시도해주세요.\");\n      setPiboxUploadBtnName(\"블록코드 업로드\");\n      //piboxUploadBtn.current.disabled = false;\n    }\n\n    return file;\n  };\n\n  //   function downloadBat(os) {\n  //     const element = document.createElement(\"a\");\n  //     const batText = `sshpass -praspberry scp -o StrictHostKeyChecking=no ./model.tflite pi@${props.ipAddress}:/home/pi/tflite/model.tflite\n  // sshpass -praspberry scp -o StrictHostKeyChecking=no ./labels.txt pi@${props.ipAddress}:/home/pi/tflite/labels.txt\n  // sshpass -praspberry scp -o StrictHostKeyChecking=no ./pibox.py pi@${props.ipAddress}:/home/pi/tflite/pibox.py\n  // `;\n  //     const file = new Blob([batText], {\n  //       type: \"text/plain\",\n  //     });\n  //     element.href = URL.createObjectURL(file);\n  //     element.download = os === \"WIN\" ? \"upload.bat\" : \"upload.sh\";\n  //     document.body.appendChild(element); // Required for this to work in FireFox\n  //     element.click();\n  //   }\n\n  const sendLEDoff = async (index) => {\n    const url = \"http://\" + props.ipAddress + \":8000/move.html?\";\n    let ch1Command = \"None\";\n    if (ch1OutputType === 3) {\n      switch (ch1OutputType) {\n        case 3:\n          ch1Command = \"led_\" + 0 + \"_\" + 0 + \"_\" + 0;\n          break;\n        default:\n          break;\n      }\n    }\n    let ch2Command = \"None\";\n    if (ch2OutputType === 3) {\n      switch (ch2OutputType) {\n        case 3:\n          ch2Command =\n            \"led_\" +\n            ch2OutputAmount[index].r +\n            \"_\" +\n            ch2OutputAmount[index].g +\n            \"_\" +\n            ch2OutputAmount[index].b;\n          break;\n        default:\n          break;\n      }\n    }\n    //console.log(ch2OutputType, ch2OutputAmount);\n    console.log(url + \"ch1=\" + ch1Command + \"&ch2=\" + ch2Command);\n    try {\n      await fetch(url + \"ch1=\" + ch1Command + \"&ch2=\" + ch2Command);\n    } catch (error) {\n      console.log(error);\n    }\n    setCheckTime(Date.now());\n  };\n\n  const sendMoving = (index) => {\n    if ((ch1OutputType === 2 || ch2OutputType === 2) && 0) {\n      alert(\"지금은 서보모터와 LED만 동작해 볼 수 있습니다!\");\n    } else {\n      if (checkTime + 2000 < Date.now()) {\n        const url = \"http://\" + props.ipAddress + \":8000/move.html?\";\n        let ch1Command = \"None\";\n        if (\n          (!isNaN(parseFloat(ch1OutputAmount[index])) && ch1OutputType === 1) ||\n          (!isNaN(parseFloat(ch1OutputAmount[index][2])) &&\n            ch1OutputType === 2) ||\n          (!isNaN(parseFloat(ch1OutputAmount[index].r)) && ch1OutputType === 3)\n        ) {\n          switch (ch1OutputType) {\n            case 1:\n              ch1Command = \"servo_\" + ch1OutputAmount[index];\n              break;\n            case 2:\n              ch1Command =\n                \"dc_\" +\n                ch1OutputAmount[index][1] +\n                \"_\" +\n                ch1OutputAmount[index][0] +\n                \"_\" +\n                ch1OutputAmount[index][2];\n              break;\n            case 3:\n              ch1Command =\n                \"led_\" +\n                ch1OutputAmount[index].r +\n                \"_\" +\n                ch1OutputAmount[index].g +\n                \"_\" +\n                ch1OutputAmount[index].b;\n              break;\n            default:\n              break;\n          }\n        }\n        let ch2Command = \"None\";\n        if (\n          (!isNaN(parseFloat(ch2OutputAmount[index])) && ch2OutputType === 1) ||\n          (!isNaN(parseFloat(ch2OutputAmount[index][2])) &&\n            ch2OutputType === 2) ||\n          (!isNaN(parseFloat(ch2OutputAmount[index].r)) && ch2OutputType === 3)\n        ) {\n          switch (ch2OutputType) {\n            case 1:\n              ch2Command = \"servo_\" + ch2OutputAmount[index];\n              break;\n            case 2:\n              ch2Command =\n                \"dc_\" +\n                ch2OutputAmount[index][1] +\n                \"_\" +\n                ch2OutputAmount[index][0] +\n                \"_\" +\n                ch2OutputAmount[index][2];\n              break;\n            case 3:\n              ch2Command =\n                \"led_\" +\n                ch2OutputAmount[index].r +\n                \"_\" +\n                ch2OutputAmount[index].g +\n                \"_\" +\n                ch2OutputAmount[index].b;\n              break;\n            default:\n              break;\n          }\n        }\n        //console.log(ch2OutputType, ch2OutputAmount);\n        console.log(url + \"ch1=\" + ch1Command + \"&ch2=\" + ch2Command);\n        try {\n          fetch(url + \"ch1=\" + ch1Command + \"&ch2=\" + ch2Command);\n        } catch (error) {\n          console.log(error);\n        }\n        setCheckTime(Date.now());\n      }\n    }\n  };\n\n  useInterval(() => {\n    if (checkMove) {\n      if ((ch1OutputType === 2 || ch2OutputType === 2) && 0) {\n        alert(\"지금은 서보모터와 LED만 동작할 수 있습니다!\");\n        setCheckMove(false);\n      } else {\n        if (\n          moveMotorThreshold <= tfFunc.resultConfidence &&\n          tfFunc.result !== -1\n        ) {\n          sendMoving(tfFunc.result);\n        }\n      }\n    }\n  }, 100);\n\n  const selectOutputMount = (index) => (\n    <div className=\"showOutputType\" key={index}>\n      <span>\n        <div\n          className=\"class-object-label\"\n          style={{ marginTop: \"9px\", marginBottom: \"10px\" }}\n        >\n          출력 1\n        </div>\n        {ch1OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>\n              모터의 날개가 움직이는 각도를 설정해주세요.\n              <br /> ( 0 ~ 180 )\n            </p>\n            <input\n              style={{ height: 30 }}\n              onChange={(e) => {\n                let value = e.target.value;\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value > 180 ? 180 : value < 0 ? 0 : value;\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index] || \"\"}\n            />\n          </div>\n        ) : ch1OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{\n                backgroundColor: \"#ffffff\",\n                fontSize: 15,\n                borderRadius: 2,\n              }}\n              onChange={(e) => {\n                const value = e.target.value;\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = [\n                    value,\n                    newState[index][1],\n                    newState[index][2],\n                  ];\n                  return newState;\n                });\n              }}\n              defaultValue={ch1OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh1OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [\n                        newState[index][0],\n                        value,\n                        newState[index][2],\n                      ];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 {\"=>\"} 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh1OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [\n                        newState[index][0],\n                        newState[index][1],\n                        value,\n                      ];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch1OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <CompactPicker //SketchPicker\n              color={ch1OutputAmount[index]}\n              onChange={(value) => {\n                setCh1OutputAmount((state) => {\n                  console.log(value.rgb.r);\n                  console.log(state);\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ padding: \"10px\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <div\n          className=\"class-object-label\"\n          style={{ marginTop: \"9px\", marginBottom: \"10px\" }}\n        >\n          출력 2\n        </div>\n        {ch2OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>\n              모터의 날개가 움직이는 각도를 설정해주세요.\n              <br />( 0 ~ 180 )\n            </p>\n            <input\n              style={{ height: 30 }}\n              onChange={(e) => {\n                let value = e.target.value;\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n\n                  newState[index] = value > 180 ? 180 : value < 0 ? 0 : value;\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index] || \"\"}\n            />\n          </div>\n        ) : ch2OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{\n                backgroundColor: \"#ffffff\",\n                fontSize: 15,\n                borderRadius: 2,\n              }}\n              onChange={(e) => {\n                const value = e.target.value;\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = [\n                    value,\n                    newState[index][1],\n                    newState[index][2],\n                  ];\n                  return newState;\n                });\n              }}\n              defaultValue={ch2OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh2OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [\n                        newState[index][0],\n                        value,\n                        newState[index][2],\n                      ];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 {\"=>\"} 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh2OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [\n                        newState[index][0],\n                        newState[index][1],\n                        value,\n                      ];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch2OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <CompactPicker\n              color={ch2OutputAmount[index]}\n              onChangeComplete={(value) => {\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ padding: \"10px\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <button className=\"test-move\" onClick={() => sendMoving(index)}>\n          테스트하기\n        </button>\n      </span>\n    </div>\n  );\n\n  const selectOutputType = () => (\n    <div\n      className=\"blocks\"\n      style={{ display: \"inline\", width: \"49%\", marginLeft: \"1%\" }}\n    >\n      <div className=\"block\" id=\"output-type-block\">\n        <div className=\"output-type\">\n          <div className=\"Out-put-01\">출력 1</div>\n          <div className=\"output-circles\">\n            <div\n              style={{ marginLeft: \"12%\" }}\n              onClick={() => {\n                if (ch1OutputType === 1) {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh1OutputType(1);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }\n              }}\n            >\n              <img\n                width=\"76\"\n                height=\"76\"\n                src={\n                  ch1OutputType === 1\n                    ? \"img/servomotor_picked.svg\"\n                    : \"img/servomotor.svg\"\n                }\n                alt=\"servomotor\"\n                style={{ cursor: \"pointer\" }}\n              />\n            </div>\n\n            <div\n              style={{ marginLeft: \"40px\", marginRight: \"40px\" }}\n              onClick={() => {\n                if (ch1OutputType === 2) {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh1OutputType(2);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }\n              }}\n            >\n              <img\n                width=\"76\"\n                height=\"76\"\n                style={{ cursor: \"pointer\" }}\n                src={\n                  ch1OutputType === 2\n                    ? \"img/dcmotor_picked.svg\"\n                    : \"img/dcmotor.svg\"\n                }\n                alt=\"dcmotor\"\n              />\n            </div>\n\n            <div\n              style={{ marginRight: \"12%\" }}\n              onClick={() => {\n                if (ch1OutputType === 3) {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  if (ch2OutputType !== 3) {\n                    setCh1OutputType(3);\n                    setCh1OutputAmount((state) => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1,\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }\n              }}\n            >\n              <img\n                width=\"76\"\n                height=\"76\"\n                style={{ cursor: \"pointer\" }}\n                src={ch1OutputType === 3 ? \"img/led_picked.svg\" : \"img/led.svg\"}\n                alt=\"led\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"output-type\" style={{ marginLeft: \"80px\" }}>\n          <div className=\"Out-put-01\">출력 2</div>\n          <div className=\"output-circles\">\n            <div\n              style={{ marginLeft: \"12%\" }}\n              onClick={() => {\n                if (ch2OutputType === 1) {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh2OutputType(1);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }\n              }}\n            >\n              <img\n                width=\"76\"\n                height=\"76\"\n                style={{ cursor: \"pointer\" }}\n                src={\n                  ch2OutputType === 1\n                    ? \"img/servomotor_picked.svg\"\n                    : \"img/servomotor.svg\"\n                }\n                alt=\"servomotor\"\n              />\n            </div>\n\n            <div\n              style={{ marginLeft: \"40px\", marginRight: \"40px\" }}\n              onClick={() => {\n                if (ch2OutputType === 2) {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  setCh2OutputType(2);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }\n              }}\n            >\n              <img\n                width=\"76\"\n                height=\"76\"\n                style={{ cursor: \"pointer\" }}\n                src={\n                  ch2OutputType === 2\n                    ? \"img/dcmotor_picked.svg\"\n                    : \"img/dcmotor.svg\"\n                }\n                alt=\"dcmotor\"\n              />\n            </div>\n\n            <div\n              style={{ marginRight: \"12%\" }}\n              onClick={() => {\n                if (ch2OutputType === 3) {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                } else {\n                  if (ch1OutputType !== 3) {\n                    setCh2OutputType(3);\n                    setCh2OutputAmount((state) => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1,\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }\n              }}\n            >\n              <img\n                width=\"76\"\n                height=\"76\"\n                style={{ cursor: \"pointer\" }}\n                src={ch2OutputType === 3 ? \"img/led_picked.svg\" : \"img/led.svg\"}\n                alt=\"dcmotor\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const wait = async (sec) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n\n  const cameraPreviewWithButtons = () => (\n    //아웃풋 종류 보여줌\n    <div className=\"sticky-block\">\n      <div className=\"block-2\">\n        <div className=\"block\" ref={camera}></div>\n        <div style={{ marginLeft: \"20px\" }}>\n          <img\n            width=\"224\"\n            height=\"54\"\n            alt=\"train\"\n            src=\"img/plai_train.svg\"\n            id=\"trainButton\"\n            onClick={async () => {\n              props.setLoadingToTrue();\n              await wait(0.5);\n              tfFunc.train(props.setLoadingToFalse);\n            }}\n            className=\"plai-train\"\n          />\n        </div>\n        <div style={{ marginLeft: \"20px\" }}>\n          <img\n            width=\"224\"\n            height=\"54\"\n            alt=\"checkMove\"\n            style={{ cursor: \"pointer\" }}\n            src={checkMove ? \"img/plai_move_on.svg\" : \"img/plai_move_off.svg\"}\n            onClick={() => setCheckMove(!checkMove)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"connect-panel panel\">\n      <img\n        alt=\"goback\"\n        onClick={async () => {\n          await sendLEDoff();\n          props.setIsBlockCoding();\n        }}\n        src=\"img/icon_arrow_back.svg\"\n        className=\"Icon-arrow_back-blockcode\"\n      ></img>\n      {false ? (\n        <div>\n          <p>\n            라벨 :{\" \"}\n            <input\n              type=\"file\"\n              accept=\".txt\"\n              onChange={(e) => uploadFile(e.target.files[0])}\n            />\n          </p>\n        </div>\n      ) : null}\n      {/* <div className=\"training-label\">학습하기</div> */}\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"32.3%\", marginLeft: \"4%\" }}>\n          {cameraPreviewWithButtons()}\n        </div>\n        <div style={{ width: \"67.7%\", marginRight: \"4%\" }}>\n          <div>{selectOutputType()}</div>\n          <div className=\"label-output\">\n            <div className=\"blocks-container\">\n              <div>\n                {labels.map((label, index) => (\n                  <div key={label}>\n                    <div className=\"class-object\">\n                      <div className=\"class-object-left\">\n                        <div className=\"block\">\n                          <span className=\"class-object-label\">{label}</span>\n                          <ProgressBar\n                            bgcolor={\"#00695c\"}\n                            completed={Math.floor(probability[index] * 100)}\n                          />\n                        </div>\n                        <div style={{ display: \"flex\" }}>\n                          <div\n                            style={{\n                              marginLeft: \"10px\",\n                              marginRight: \"10px\",\n                              position: \"relative\",\n                              top: \"70px\",\n                              flex: \"1\",\n                            }}\n                          >\n                            <img\n                              alt=\"addData\"\n                              src=\"img/icon_video.svg\"\n                              className=\"Icon-awesome-video\"\n                              onMouseDown={() => {\n                                tfFunc.addTrainingData(index);\n                              }}\n                              onMouseUp={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                              onTouchStart={() => {\n                                tfFunc.addTrainingData(index);\n                              }}\n                              onMouseLeave={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                              onTouchEnd={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                              onTouchMove={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                              onTouchCancel={() => {\n                                tfFunc.addTrainingData(-1);\n                              }}\n                            ></img>\n                            <span\n                              className=\"class-object-data-count\"\n                              draggable=\"false\"\n                            >\n                              {dataCount[index]}\n                            </span>\n                            <span\n                              className=\"class-object-remove-data\"\n                              onClick={() => {\n                                tfFunc.removeTrainingData(index);\n                              }}\n                            >\n                              <img\n                                width=\"55px\"\n                                height=\"55px\"\n                                alt=\"addData\"\n                                src=\"img/trash.png\"\n                              ></img>\n                            </span>\n                          </div>\n                          <div\n                            className=\"training-images\"\n                            id={\"canvas-\" + index.toString()}\n                          ></div>\n                        </div>\n                      </div>\n                      <hr\n                        size=\"2\"\n                        width=\"60px\"\n                        noshade=\"true\"\n                        className=\"class-object-connecting\"\n                      ></hr>\n                      <div className=\"class-object-right\">\n                        <span className=\"class-output-settings\">\n                          {selectOutputMount(index)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\" style={{ textAlign: \"center\" }}>\n        <img\n          alt=\"addClass\"\n          style={{ margin: \"0px auto\", marginTop: \"30px\", cursor: \"pointer\" }}\n          onClick={() => addClass()}\n          src=\"img/add_class.svg\"\n        ></img>\n      </div>\n      <div className=\"block\">\n        <img\n          alt=\"upload\"\n          style={{ margin: \"0px auto\", marginTop: \"30px\", cursor: \"pointer\" }}\n          onClick={() =>\n            piboxUploadBtnName !== \"잠시만 기다려주세요...\"\n              ? downloadPy()\n              : null\n          }\n          src={\n            piboxUploadBtnName === \"잠시만 기다려주세요...\"\n              ? \"img/blockcode_uploading_button.svg\"\n              : \"img/blockcode_upload_button.svg\"\n          }\n        ></img>\n      </div>\n      {/* <div>\n        <h4>\n          블록이 완성되었다면{\" \"}\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadPy()}>\n            코드 다운로드\n          </span>{\" \"}\n        </h4>\n      </div> */}\n      {/* <div>\n        <h4>\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadBat(\"WIN\")}>\n            코드 업로드 프로그램(윈도우)\n          </span>\n          <br />\n          코드와 업로드 프로그램 파일은 모델파일을 압축푼 폴더와 같은 폴더에 넣어주세요.\n        </h4>\n        <p>\n          초기 비밀번호 : raspberry\n          <br />\n        </p>\n      </div> */}\n    </div>\n  );\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","export const front = `\n## pibox TFLITE\nimport os\nimport argparse\nimport cv2\nimport numpy as np\nimport sys\nimport time\nfrom threading import Thread\nimport importlib.util\n\n## 출력을 위한 import\nimport RPi.GPIO as GPIO\nimport pigpio\nimport time\nimport board\nimport neopixel\n\n`;\n\nexport const middle = `\n# 카메라 오브젝트\nclass VideoStream:\n    def __init__(self,resolution=(320,240),framerate=3): # 원래는 640,480 그리고 30 framerate\n        # 파이 카메라를 시작합니다.\n        self.stream = cv2.VideoCapture(0)\n        ret = self.stream.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))\n        ret = self.stream.set(3,resolution[0])\n        ret = self.stream.set(4,resolution[1])\n            \n        # 첫번째 사진을 불러옵니다.\n        (self.grabbed, self.frame) = self.stream.read()\n\n\t    # 멈출 수 있도록 stopped를 설정해줍니다.\n        self.stopped = False\n\n    def start(self):\n\t    # 비디오 스트림에서 프레임을 읽어오는 쓰레드를 시작합니다.\n        Thread(target=self.update,args=()).start()\n        return self\n\n    def update(self):\n        # 쓰레드가 멈출 때 까지 계속 스트림을 실행합니다.\n        while True:\n            # 카메라가 멈추면 스트림을 멈춥니다.\n            if self.stopped:\n                # 카메라 리소스를 닫습니다.\n                self.stream.release()\n                return\n\n            # 멈춘것이 아니라면 프레임을 가져옵니다.\n            (self.grabbed, self.frame) = self.stream.read()\n\n    def read(self):\n\t    # 가장 최근 프레임을 가져옵니다.\n        return self.frame\n\n    def stop(self):\n\t    # 카메라 쓰레드를 정지합니다.\n        self.stopped = True\n\n# 입력 파라미터를 정의합니다.\nparser = argparse.ArgumentParser()\nparser.add_argument('--modeldir', help='Folder the .tflite file is located in',\n                    required=True)\nparser.add_argument('--graph', help='Name of the .tflite file, if different than model.tflite',\n                    default='model.tflite')\nparser.add_argument('--labels', help='Name of the labelmap file, if different than labels.txt',\n                    default='labels.txt')\nparser.add_argument('--threshold', help='Minimum confidence threshold for displaying detected objects',\n                    default=0.5)\nparser.add_argument('--resolution', help='Desired webcam resolution in WxH. If the webcam does not support the resolution entered, errors may occur.',\n                    default='320x240') # 원래는 1280x720 속도를 위해 낮춤\nparser.add_argument('--edgetpu', help='Use Coral Edge TPU Accelerator to speed up detection',\n                    action='store_true',default=False)\n\nargs = parser.parse_args()\n\nMODEL_NAME = args.modeldir\nGRAPH_NAME = args.graph\nLABELMAP_NAME = args.labels\nmin_conf_threshold = float(args.threshold)\nresW, resH = args.resolution.split('x')\nimW, imH = int(resW), int(resH) # 라즈베리파이 제로 + 파이카메라에서는 224,224 가 아주 쬐에에에끔 빠릅니다.\nuse_TPU = args.edgetpu\n\n# 텐서플로우 라이브러리를 가져옵니다.\n# 텐서플로우 라이브러리가 없다면, tflite_runtime 을 가져옵니다.\n# 코랄 TPU를 사용한다면, TPU 용 라이브러리를 가져옵니다. (import the load_delegate library)\npkg = importlib.util.find_spec('tensorflow')\nif pkg is None:\n    from tflite_runtime.interpreter import Interpreter\n    if use_TPU:\n        from tflite_runtime.interpreter import load_delegate\nelse:\n    from tensorflow.lite.python.interpreter import Interpreter\n    if use_TPU:\n        from tensorflow.lite.python.interpreter import load_delegate\n\n# TPU를 사용한다면 TPU 모델을 가져옵니다.\nif use_TPU:\n    # 'edgetpu.tflite'가 TPU를 사용할 때의 기본 경로입니다.\n    if (GRAPH_NAME == 'model.tflite'):\n        GRAPH_NAME = 'edgetpu.tflite'       \n\n# 작업 경로와 현재 경로를 일치시킵니다.\nCWD_PATH = os.getcwd()\n\n# 모델 경로를 설정합니다.\nPATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,GRAPH_NAME)\n\n# 라벨 경로를 설정합니다.\nPATH_TO_LABELS = os.path.join(CWD_PATH,MODEL_NAME,LABELMAP_NAME)\n\n# 라벨을 가져옵니다.\nwith open(PATH_TO_LABELS, 'r') as f:\n    labels = [line.strip() for line in f.readlines()]\n\n# 첫번째 라벨이 ??? 인 경우가 있어 그럴 경우 제거합니다.\nif labels[0] == '???':\n    del(labels[0])\n\n# 텐서플로우 모델을 가져옵니다. TPU를 쓸 경우 TPU 모델로 가져옵니다.\nif use_TPU:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT,\n                              experimental_delegates=[load_delegate('libedgetpu.so.1.0')])\n    print(PATH_TO_CKPT)\nelse:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT)\n\ninterpreter.allocate_tensors()\n\n# 로드된 모델의 정보를 가져옵니다.\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nheight = input_details[0]['shape'][1]\nwidth = input_details[0]['shape'][2]\n#print(\"가로\")\n#print(width)\n#print(\"세로\")\n#print(height)\n# 입력이 소수인지 아닌지 판단합니다.\nfloating_model = (input_details[0]['dtype'] == np.float32)\n\ninput_mean = 127.5\ninput_std = 127.5\n\n# 연산 프레임을 체크하기 위한 변수를 할당합니다.\nframe_rate_calc = 1\nfreq = cv2.getTickFrequency()\n\n# 상단에서 정의한 비디오 스트림을 시작합니다.\nvideostream = VideoStream(resolution=(imW,imH),framerate=30).start() \ntime.sleep(1)\n\n# 프레임으로 연산을 시작합니다.\nwhile True:\n\n    # 연산 프레임을 위한 시간 체크 변수를 할당합니다.\n    t1 = cv2.getTickCount()\n\n    # 비디오스트림에서 프레임을 읽어옵니다.\n    frame1 = videostream.read()\n\n    # 입력에 넣을 수 있도록 해상도를 변경합니다.\n    frame = frame1.copy()\n    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n    # 위에서 input을 224,224로 설정했다면 아래 줄은 넘어가도 됩니다..\n    frame_resized = cv2.resize(frame_rgb, (width, height)) \n    input_data = np.expand_dims(frame_resized, axis=0)\n\n    # 입력이 소수라면 소수로 바꿔줍니다.\n    if floating_model:\n        input_data = (np.float32(input_data) - input_mean) / input_std\n\n    # 로드된 모델에 입력을 넣어 결과를 가져옵니다.\n    interpreter.set_tensor(input_details[0]['index'],input_data)\n    interpreter.invoke()\n    result=interpreter.get_tensor(output_details[0]['index'])[0]\n    print(labels[np.argmax(result)])\n    #print(result)\n    # 초당 연산 프레임을 계산합니다.\n    t2 = cv2.getTickCount()\n    time1 = (t2-t1)/freq\n    frame_rate_calc= 1/time1\n    #print(frame_rate_calc)\n`;\n","import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport Loading from \"./Loading\";\n// import WifiSSH from \"./WifiSSH\";\nimport BlockCode from \"./BlockCode\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pibox\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      isBlockCoding: false,\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: false,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      wifiReset: false,\n      isAndroid:\n        navigator.userAgent.indexOf(\"Android\") > -1 ||\n        navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone:\n        navigator.userAgent.indexOf(\"iPhone\") > -1 ||\n        navigator.userAgent.indexOf(\"iphone\") > -1,\n      wifiConnected: false,\n      wifiDirectSSID: true,\n      wifiEnt: false,\n      entId: \"\",\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID],\n          },\n        ],\n      })\n      .then((device) => {\n        //GO loading screen\n        this.setState({ loading: true });\n        return device.gatt.connect();\n      })\n      .then((server) => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then((service) => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async (characteristics) => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId,\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \",\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\",\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"\",\n          },\n        ];\n\n        await this.subscribeCharacteristic(\n          UUID.WIFI_NAME,\n          infoList,\n          characteristicsList\n        );\n        await this.subscribeCharacteristic(\n          UUID.IP_ADDRESS,\n          infoList,\n          characteristicsList\n        );\n        await this.readInfoCharacteristic(\n          UUID.DEVICE_MODEL,\n          infoList,\n          characteristicsList\n        );\n        await this.subscribeCharacteristic(\n          UUID.NOTIFY_MESSAGE,\n          infoList,\n          characteristicsList\n        );\n        await this.subscribeCharacteristic(\n          UUID.CUSTOM_COMMAND_NOTIFY,\n          infoList,\n          characteristicsList\n        );\n\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map((item) =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\",\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(\n            infoList[i].uuid_label,\n            infoList,\n            characteristicsList\n          );\n          await this.subscribeCharacteristic(\n            infoList[i].uuid,\n            infoList,\n            characteristicsList\n          );\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map((item) =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\",\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(\n            commandList[i].uuid,\n            commandList,\n            characteristicsList\n          );\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList,\n        });\n        //console.log(commandList);\n        // 0: {uuid: \"00000000-0000-0000-0000-fd2bcccc0001\", label: \"shutdown\"}\n        // 1: {uuid: \"00000000-0000-0000-0000-fd2bcccc0002\", label: \"reboot\"}\n        // 2: {uuid: \"00000000-0000-0000-0000-fd2bcccc0003\", label: \"start\"}\n        // 3: {uuid: \"00000000-0000-0000-0000-fd2bcccc0004\", label: \"stop\"}\n        // 4: {uuid: \"00000000-0000-0000-0000-fd2bcccc0005\", label: \"upload\"}\n        // 5: {uuid: \"00000000-0000-0000-0000-fd2bcccc0006\", label: \"camStart\"}\n        // 6: {uuid: \"00000000-0000-0000-0000-fd2bcccc0007\", label: \"wifiConnect\"}\n\n        // loading close\n        this.setState({ loading: false });\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((label) => {\n          let tempCMDList = commandList;\n          tempCMDList.find((i) => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((value) => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList)\n            this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async (resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\n        \"characteristicvaluechanged\",\n        (event) => {\n          if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n            let msg = this.ab2str(event.target.value.buffer);\n            notify.show(msg, \"custom\", 3000, \"teal\");\n          } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n            let msg = this.ab2str(event.target.value.buffer);\n            if (this.state.commandOutputShouldRefresh) {\n              this.setState(\n                { commandOutputShouldRefresh: false, commandOutput: \"\" },\n                () => {\n                  let output = this.state.commandOutput + msg;\n                  if (output.endsWith(\"&#&\")) {\n                    output = output.replace(\"&#&\", \"\");\n                    this.setState({ commandOutputShouldRefresh: true });\n                  }\n                  this.setState({ commandOutput: output });\n                }\n              );\n            } else {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            }\n          } else {\n            let value = this.ab2str(event.target.value.buffer);\n            let tempInfoList = infoList;\n            if (tempInfoList.find((i) => i.uuid === uuid)) {\n              tempInfoList.find((i) => i.uuid === uuid).value = value;\n            }\n            if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n              tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n            }\n            this.setState({ infoList: tempInfoList });\n            //console.log(tempInfoList.find((i) => i.label === \"IP Address\"));\n          }\n        }\n      );\n      await this.getCharacteristicInit(\n        uuid,\n        characteristicsList\n      ).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = (service) => {\n    return new Promise(async (resolve) => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(\n                UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending\n              );\n            }\n            let customCommandList = [];\n            for (\n              let index = 0;\n              index < this.state.customCommandCount;\n              index++\n            ) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(\n                UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending\n              );\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map((i) => service.getCharacteristic(i)),\n                ...customCommandList.map((i) => service.getCharacteristic(i)),\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = (buf) => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = (uuid) => {\n    return this.state.characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    if (this.state.wifiEnt) {\n      this.setState(\n        {\n          key: this.state.key.trim().replace(/\\|/g, \"*\"),\n          ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n          entId: this.state.entId.trim().replace(/\\|/g, \"*\"),\n          password: this.state.password.trim().replace(/\\|/g, \"*\"),\n        },\n        () => {\n          let errMsg;\n          if (this.state.ssid === \"\") {\n            errMsg = \"SSID cannot be empty.\";\n          }\n          if (this.state.password === \"\") {\n            errMsg = \"Password cannot be empty.\";\n          }\n          if (errMsg) {\n            notify.show(errMsg, \"custom\", 3000, \"teal\");\n            return;\n          }\n          this.setState({ wifiLock: true }, () =>\n            setTimeout(() => {\n              // this.sendCommand(\n              //   this.state.commandList.find((c) => c.label === \"wifiConnect\")\n              //     .uuid\n              // );\n              setTimeout(() => {\n                this.setState({ wifiLock: false, wifiReset: false });\n              }, 30000);\n            }, 5000)\n          );\n\n          let sendArray = this.str2abs(\n            `${this.state.key}%&%${this.state.ssid}%&%${this.state.password}%&%${this.state.entId}&#&`\n          );\n          this.sendSeparately(sendArray, UUID.INPUT_SEP);\n        }\n      );\n    } else {\n      this.setState(\n        {\n          key: this.state.key.trim().replace(/\\|/g, \"*\"),\n          ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n          password: this.state.password.trim().replace(/\\|/g, \"*\"),\n        },\n        () => {\n          let errMsg;\n          if (this.state.ssid === \"\") {\n            errMsg = \"SSID cannot be empty.\";\n          }\n          if (this.state.password === \"\") {\n            // 비밀번호 없는 와이파이에 연결하기 위해 제거\n            // errMsg = \"Password cannot be empty.\";\n          }\n          if (errMsg) {\n            notify.show(errMsg, \"custom\", 3000, \"teal\");\n            return;\n          }\n          this.setState({ wifiLock: true }, () =>\n            setTimeout(() => {\n              this.sendCommand(\n                this.state.commandList.find((c) => c.label === \"wifiConnect\")\n                  .uuid\n              );\n              setTimeout(() => {\n                this.setState({ wifiLock: false, wifiReset: false });\n              }, 30000);\n            }, 5000)\n          );\n\n          let sendArray = this.str2abs(\n            `${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`\n          );\n          this.sendSeparately(sendArray, UUID.INPUT_SEP);\n        }\n      );\n    }\n  };\n  sendCommand = (uuid) => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async (sec) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n\n  waitCamera = async () => {\n    let chk = true;\n    if (\n      this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined &&\n      this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\"\n    ) {\n      while (chk) {\n        try {\n          const resp = await fetchTimeout(\n            \"http://\" +\n              this.state.infoList.find((i) => i.label === \"IP Address\").value +\n              \":8000/index.html\",\n            {},\n            1000\n          );\n\n          if (!resp.ok) {\n            await this.wait(0.5);\n          } else {\n            chk = false;\n            return true;\n          }\n        } catch (error) {\n          await this.wait(0.5);\n        }\n      }\n    } else {\n      alert(\"와이파이가 연결되어있지 않습니다.\");\n      return false;\n    }\n  };\n  str2abs = (str) => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function (h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  setIsBlockCodingToFalse = () => {\n    this.setState({ isBlockCoding: false });\n    this.sendCommand(\n      this.state.commandList.find((c) => c.label === \"stop\").uuid\n    );\n  };\n\n  setLoadingToTrue = () => {\n    this.setState({ loading: true });\n  };\n\n  setLoadingToFalse = () => {\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          {this.state.loading ? <Loading /> : null}\n          <img alt=\"logo\" src=\"img/logo.svg\" className=\"logo\"></img>\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">\n                  장치에서 블루투스를 찾을 수 없습니다.\n                </div>\n                <p>\n                  블루투스를 지원하는 브라우저(크롬 권장)를 사용하시고,\n                  블루투스를 사용할 수 있는 지확인해주세요. 자세한 내용은{\" \"}\n                  <a\n                    href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\"\n                    target=\"_brank\"\n                  >\n                    이 페이지\n                  </a>{\" \"}\n                  를 참고해주세요.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <img\n                  alt=\"Icon-arrow_back\"\n                  src=\"img/icon_arrow_back.svg\"\n                  className=\"Icon-arrow_back\"\n                ></img>\n                <div className=\"character-button\">\n                  <img\n                    alt=\"character\"\n                    src=\"img/character.svg\"\n                    className=\"character\"\n                  ></img>\n                  <div className=\"Look-it-up\">Bluetooth 설정</div>\n                  <div className=\"PLAi-Bluetooth-\">\n                    에이스플레이를 움직일 Bluetooth를 찾아볼까요?\n                  </div>\n                  <div onClick={this.connectDevice}>\n                    <img\n                      alt=\"bluetooth_button\"\n                      src=\"img/bluetooth_button.svg\"\n                      className=\"bluetooth_button\"\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected && false ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map((item) => {\n                  if (\n                    item.label === \"Wifi\" ||\n                    item.label === \"IP Address\" ||\n                    item.label === \"CPU Temp\" ||\n                    item.label === \"CPU Load\"\n                  ) {\n                    return (\n                      <div key={item.uuid} className=\"info-group\">\n                        <div className=\"label\">{item.label}</div>\n                        <div className=\"value\">{item.value}</div>\n                      </div>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n              </div>\n            ) : null}\n            {(this.state.isConnected &&\n              (this.state.infoList.find((i) => i.label === \"IP Address\") ===\n                undefined ||\n                this.state.infoList.find((i) => i.label === \"IP Address\")\n                  .value === \"\")) ||\n            this.state.wifiReset ? (\n              <div className=\"wifi-panel panel\">\n                {/* <img src=\"img/icon_arrow_back.svg\" className=\"Icon-arrow_back\"></img> */}\n                <div className=\"WiFi-password-container\">\n                  <div className=\"wifi-setting-title\">\n                    <span className=\"WiFi-\">WiFi 설정</span>\n                    <img\n                      alt=\"character2\"\n                      src=\"img/character2.svg\"\n                      className=\"character2\"\n                    ></img>\n                  </div>\n                  <div className=\"wifi-name-container\">\n                    <div>\n                      <div>\n                        <span className=\"wifi-checkbox-1\">WiFi 직접 입력</span>\n                        <input\n                          type=\"checkbox\"\n                          checked={this.state.wifiDirectSSID}\n                          onChange={() =>\n                            this.setState({\n                              wifiDirectSSID: !this.state.wifiDirectSSID,\n                            })\n                          }\n                        />\n                        <span className=\"wifi-checkbox-2\">학교용 WiFi</span>\n                        <input\n                          type=\"checkbox\"\n                          checked={this.state.wifiEnt}\n                          onChange={() =>\n                            this.setState({\n                              wifiEnt: !this.state.wifiEnt,\n                            })\n                          }\n                        />\n                      </div>\n                      <span className=\"Wifi-Name\">WiFi Name</span>\n                      {!this.state.wifiDirectSSID ? (\n                        this.state.infoList.find(\n                          (i) => i.label === \"WiFi list\"\n                        ) !== undefined &&\n                        this.state.infoList.find((i) => i.label === \"WiFi list\")\n                          .value !== \"\" ? (\n                          <select\n                            className=\"wifi-name-input\"\n                            onChange={(value) =>\n                              this.setState({ ssid: value.target.value })\n                            }\n                          >\n                            <option value=\"\">\n                              {\"  \"}와이파이 이름(SSID) 한글이름 연결불가\n                            </option>\n                            {this.state.infoList\n                              .find((i) => i.label === \"WiFi list\")\n                              .value.split(\"ESSID:\")\n                              .map((ssid, index) => {\n                                if (index !== 0)\n                                  return (\n                                    <option\n                                      key={index}\n                                      value={ssid.split('\"')[1]}\n                                    >\n                                      {ssid.split('\"')[1]}\n                                    </option>\n                                  );\n                                else return null;\n                              })}\n                          </select>\n                        ) : (\n                          <input\n                            placeholder=\"  와이파이 검색중\"\n                            className=\"wifi-name-input\"\n                            disabled\n                          />\n                        )\n                      ) : (\n                        <input\n                          className=\"wifi-name-input\"\n                          placeholder=\"  와이파이 이름(SSID) 한글이름 연결불가\"\n                          value={this.state.ssid}\n                          onChange={(value) =>\n                            this.setState({ ssid: value.target.value })\n                          }\n                        />\n                      )}\n                    </div>\n                    {this.state.wifiEnt ? (\n                      <div>\n                        <span className=\"Wifi-Ent-ID\">학교용 WiFi ID</span>\n                        <input\n                          className=\"wifi-Ent-ID-input\"\n                          placeholder=\"  와이파이 아이디\"\n                          value={this.state.entId}\n                          onChange={(value) =>\n                            this.setState({\n                              entId: value.target.value.replace(\n                                /[ㄱ-ㅎㅏ-ㅣ가-힣]/g,\n                                \"\"\n                              ),\n                            })\n                          }\n                        />\n                      </div>\n                    ) : null}\n                    <div>\n                      <span className=\"Wifi-Password\">WiFi Password</span>\n                      <input\n                        className=\"wifi-password-input\"\n                        placeholder=\"  와이파이 비밀번호\"\n                        value={this.state.password}\n                        onChange={(value) =>\n                          this.setState({\n                            password: value.target.value.replace(\n                              /[ㄱ-ㅎㅏ-ㅣ가-힣]/g,\n                              \"\"\n                            ),\n                          })\n                        }\n                        type=\"password\"\n                        onKeyPress={(e) => {\n                          if (e.key === \"Enter\") {\n                            this.inputWifi();\n                          }\n                        }}\n                      />\n                    </div>\n                  </div>\n                  {/* <div>\n                    <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                  </div> */}\n                  <div>\n                    <img\n                      alt=\"wifi-button\"\n                      className=\"wifi-button\"\n                      onClick={this.inputWifi}\n                      disabled={this.state.wifiLock}\n                      src={\n                        this.state.wifiLock\n                          ? \"img/wifing_button.svg\"\n                          : \"img/wifi_button.svg\"\n                      }\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected &&\n            this.state.infoList.find((i) => i.label === \"IP Address\") !==\n              undefined &&\n            this.state.infoList.find((i) => i.label === \"IP Address\").value !==\n              \"\" &&\n            !this.state.wifiConnected &&\n            !this.state.wifiReset ? (\n              <div className=\"connect-panel panel\">\n                <img\n                  alt=\"Icon-arrow_back\"\n                  src=\"img/icon_arrow_back.svg\"\n                  onClick={() => this.setState({ wifiReset: true })}\n                  className=\"Icon-arrow_back\"\n                ></img>\n                <div className=\"character-button\">\n                  <img\n                    alt=\"character2\"\n                    src=\"img/character2.svg\"\n                    className=\"character\"\n                  ></img>\n                  <div className=\"Look-it-up\">WiFi 설정이 완료 되었습니다.</div>\n                  <div className=\"PLAi-Bluetooth-\">\n                    에이스플레이와 함께 놀아볼까요?\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({ wifiConnected: true });\n                      console.log(\n                        this.state.infoList.find(\n                          (i) => i.label === \"IP Address\"\n                        ).value\n                      );\n                    }}\n                  >\n                    <img\n                      alt=\"wifi_next\"\n                      src=\"img/wifi_next.svg\"\n                      className=\"bluetooth_button\"\n                    ></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {/* <div className=\"command-panel panel\">\n              <div className=\"panel-title\">커스텀 명령어</div>\n              {this.state.commandList.length > 0 ? (\n                <div>\n                  <div>\n                    {this.state.commandList.map((item) => (\n                      <div key={item.uuid} className=\"button-wrap\">\n                        <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                          {item.label}\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                  <div>\n                    <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                  </div>\n                  <div>\n                    <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                  </div>\n                </div>\n              ) : (\n                <p>커스텀 명령어가 없습니다.</p>\n              )}\n            </div> */}\n          </div>\n          {/* {this.state.isConnected && false ? (\n            <div className=\"panel-container\">\n              <WifiSSH ipAddress={this.state.infoList.find((i) => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find((i) => i.label === \"IP Address\").value} />\n            </div>\n          ) : null} */}\n\n          {this.state.isConnected &&\n          !this.state.isBlockCoding &&\n          this.state.wifiConnected &&\n          !this.state.wifiReset ? (\n            <div className=\"connect-panel panel\">\n              <img\n                alt=\"Icon-arrow_back\"\n                src=\"img/icon_arrow_back.svg\"\n                onClick={() => this.setState({ wifiReset: true })}\n                className=\"Icon-arrow_back\"\n              ></img>\n              <div className=\"character-button\">\n                <img\n                  alt=\"character\"\n                  src=\"img/plai_character.svg\"\n                  className=\"character\"\n                ></img>\n                {this.state.isConnected &&\n                this.state.infoList.find((i) => i.label === \"IP Address\") !==\n                  undefined &&\n                this.state.infoList.find((i) => i.label === \"IP Address\")\n                  .value !== \"\" &&\n                this.state.infoList.find((i) => i.label === \"Machine ID\") !==\n                  undefined &&\n                this.state.infoList.find((i) => i.label === \"Machine ID\")\n                  .value !== \"\" &&\n                !this.state.isBlockCoding &&\n                this.state.wifiConnected ? (\n                  <div>\n                    <img\n                      width=\"343\"\n                      height=\"56\"\n                      alt=\"bluetooth_button\"\n                      src=\"img/start_blockcode_button.svg\"\n                      className=\"bluetooth_button\"\n                      onClick={async () => {\n                        this.setLoadingToTrue();\n                        this.sendCommand(\n                          this.state.commandList.find(\n                            (c) => c.label === \"camStart\"\n                          ).uuid\n                        );\n                        await this.wait(2.0);\n                        await this.waitCamera();\n                        this.setState({ isBlockCoding: true });\n                      }}\n                    ></img>\n                  </div>\n                ) : (\n                  <div>\n                    <img\n                      width=\"343\"\n                      height=\"56\"\n                      alt=\"start_blockcode_button_not_available\"\n                      src=\"img/start_blockcode_button_not_available.svg\"\n                      className=\"bluetooth_button_no\"\n                    ></img>\n                  </div>\n                )}\n                <div>\n                  <img\n                    width=\"343\"\n                    height=\"56\"\n                    alt=\"start_plai_button\"\n                    src=\"img/start_plai_button.svg\"\n                    className=\"bluetooth_button\"\n                    onClick={async () => {\n                      this.sendCommand(\n                        this.state.commandList.find((c) => c.label === \"start\")\n                          .uuid\n                      );\n                      alert(\"실행 명령을 전달했습니다.\");\n                      await this.wait(0.5);\n                    }}\n                  ></img>\n                </div>\n                <div>\n                  <img\n                    width=\"343\"\n                    height=\"56\"\n                    alt=\"stop_plai_button\"\n                    src=\"img/stop_plai_button.svg\"\n                    className=\"bluetooth_button\"\n                    onClick={async () => {\n                      this.sendCommand(\n                        this.state.commandList.find((c) => c.label === \"stop\")\n                          .uuid\n                      );\n                      alert(\"정지 명령을 전달했습니다.\");\n                      this.setState({ isBlockCoding: false });\n                      await this.wait(0.5);\n                    }}\n                  ></img>\n                </div>\n                <div>\n                  <img\n                    width=\"343\"\n                    height=\"56\"\n                    alt=\"plai_reboot_button\"\n                    src=\"img/plai_reboot_button.svg\"\n                    className=\"bluetooth_button\"\n                    onClick={async () => {\n                      this.sendCommand(\n                        this.state.commandList.find((c) => c.label === \"reboot\")\n                          .uuid\n                      );\n                      alert(\"재부팅 명령을 전달했습니다.\");\n                      await this.wait(0.5);\n                      window.location.reload();\n                    }}\n                  ></img>\n                </div>\n              </div>\n            </div>\n          ) : null}\n          {this.state.isConnected &&\n          this.state.isBlockCoding &&\n          this.state.wifiConnected &&\n          !this.state.wifiReset ? (\n            <div className=\"panel-container\">\n              <BlockCode\n                ipAddress={\n                  this.state.infoList.find((i) => i.label === \"IP Address\") ===\n                  undefined\n                    ? \"\"\n                    : this.state.infoList.find((i) => i.label === \"IP Address\")\n                        .value\n                }\n                machineId={\n                  this.state.infoList.find((i) => i.label === \"Machine ID\") ===\n                  undefined\n                    ? \"\"\n                    : this.state.infoList.find((i) => i.label === \"Machine ID\")\n                        .value\n                }\n                sendCommand={this.sendCommand}\n                uploadUUID={\n                  this.state.commandList.find((c) => c.label === \"upload\").uuid\n                }\n                setIsBlockCoding={this.setIsBlockCodingToFalse}\n                setLoadingToFalse={this.setLoadingToFalse}\n                setLoadingToTrue={this.setLoadingToTrue}\n              />\n            </div>\n          ) : null}\n\n          {/* <div className=\"copyright\">\n            PiBox . Open source under GPL-3.0 license.\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\n// https://stackoverflow.com/questions/46946380/fetch-api-request-timeout\nfunction fetchTimeout(url, options, timeout = 7000) {\n  return Promise.race([\n    fetch(url, options),\n    new Promise((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n"],"sourceRoot":""}