{"version":3,"sources":["uuid.js","WifiSSH.js","BlockCode.js","PythonCodeBase.js","BluetoothConnect.js","App.js","index.js","assets/images/servomotor.png","assets/images/motor.png","assets/images/led.png","assets/images/none.png"],"names":["module","exports","PREFIX","SERVICE_ID","SERVICE_NAME","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","INPUT","NOTIFY_MESSAGE","INPUT_SEP","CUSTOM_COMMAND_INPUT","CUSTOM_COMMAND_NOTIFY","CUSTOM_INFO_LABEL","CUSTOM_INFO_COUNT","CUSTOM_INFO","CUSTOM_COMMAND_LABEL","CUSTOM_COMMAND_COUNT","WifiSSH","ipAddress","useState","isIpAddress","setIsIpAddress","ip","setIp","useEffect","className","src","title","width","height","BlockCode","props","fileReader","labels","setLabels","ch1OutputType","setCh1OutputType","ch2OutputType","setCh2OutputType","ch1OutputAmount","setCh1OutputAmount","ch2OutputAmount","setCh2OutputAmount","console","log","downloadPy","element","document","createElement","front2","setOutputContext","getSetOutput","middleIf","chk","context","forEach","label","index","func","noOutputCh1","noOutputCh2","parseFloat","r","g","b","getIfContext","back","getBackContext","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","accept","onChange","e","undefined","target","files","FileReader","onloadend","content","result","split","push","substr","length","pop","Array","fill","readAsText","onClick","state","nope","alt","servomotor","motor","a","alert","led","map","key","style","value","newState","parseInt","display","defaultValue","color","rgb","onChangeComplete","selectOutputMount","cursor","os","batText","downloadBat","BluetoothConnect","i","connectDevice","navigator","bluetooth","requestDevice","filters","services","UUID","then","device","gatt","connect","server","setState","serverId","id","getPrimaryService","service","isIphone","webBleConnect","getCharacteristics","characteristics","characteristicsList","isConnected","infoList","preset","uuid","subscribeCharacteristic","readInfoCharacteristic","filter","indexOf","item","replace","uuid_label","tempCharList","commandList","readCommandLabel","catch","Promise","resolve","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","addEventListener","event","msg","notify","show","commandOutputShouldRefresh","commandOutput","output","endsWith","startNotifications","getCharacteristic","characteristic","customInfoCount","customCommandCount","customInfoList","ending","toString","repeat","customCommandList","all","buf","String","fromCharCode","apply","Uint8Array","inputWifi","trim","ssid","password","errMsg","wifiLock","setTimeout","sendArray","str2abs","sendSeparately","sendCommand","slice","array","writeValue","wait","sec","str","val","charCodeAt","valArray","bufferArray","splice","join","match","h","supportBluetooth","Boolean","window","loading","charLength","isAndroid","userAgent","toLowerCase","this","placeholder","disabled","size","readOnly","rows","React","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.810ff15b.chunk.js","sourcesContent":["module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport default function WifiSSH({ ipAddress }) {\n  const [isIpAddress, setIsIpAddress] = useState(false);\n  const [ip, setIp] = useState(\"\");\n  useEffect(() => {\n    if (ipAddress !== \"\" && ipAddress !== \"...\") {\n      //ip address가 있으면\n      setIsIpAddress(true);\n      setIp(ipAddress);\n    } else {\n      setIsIpAddress(false);\n      setIp(\"\");\n    }\n  }, [ipAddress]);\n\n  useEffect(() => {\n    if (ip !== \"\") {\n    }\n  }, [ip]);\n\n  if (isIpAddress)\n    return (\n      <div className=\"connect-panel panel\">\n        <div className=\"panel-title\">터미널 : http://{ip}:4200</div>\n        <iframe src={\"http://\" + ip + \":4200\"} title=\"터미널\" width=\"100%\" height=\"600px\"></iframe>\n      </div>\n    );\n  else return null;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { SliderPicker } from \"react-color\";\nimport servomotor from \"./assets/images/servomotor.png\";\nimport motor from \"./assets/images/motor.png\";\nimport led from \"./assets/images/led.png\";\nimport nope from \"./assets/images/none.png\";\nimport { front, middle } from \"./PythonCodeBase\";\n\nexport default function BlockCode(props) {\n  let fileReader;\n  const [labels, setLabels] = useState([]);\n  const [ch1OutputType, setCh1OutputType] = useState(0);\n  const [ch2OutputType, setCh2OutputType] = useState(0);\n  const [ch1OutputAmount, setCh1OutputAmount] = useState([]);\n  const [ch2OutputAmount, setCh2OutputAmount] = useState([]);\n  useEffect(() => {\n    console.log(ch1OutputAmount);\n  }, [ch1OutputAmount]);\n  const uploadFile = file => {\n    // 파일이 입력되면 먼저 여기로 들어오게된다.\n    // 파일입력이 없음에도 들어오면 바로 컷\n    if (file === undefined) {\n      return;\n    }\n\n    fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      const content = fileReader.result;\n      const result = [];\n      content.split(\"\\n\").forEach(label => {\n        result.push(label.substr(2));\n        console.log(label);\n      });\n      if (result[result.length - 1] === \"\") {\n        result.pop();\n      }\n      setLabels(result);\n      setCh1OutputType(0);\n      setCh2OutputType(0);\n      setCh1OutputAmount(new Array(result.length).fill(\"\"));\n      setCh2OutputAmount(new Array(result.length).fill(\"\"));\n    };\n    fileReader.readAsText(file);\n  };\n\n  function getSetOutput() {\n    let setOutputContext = `GPIO.setmode(GPIO.BCM)\npwm = pigpio.pi() \n    `;\n    if (ch1OutputType === 1)\n      setOutputContext += `\npwm.set_mode(18, pigpio.OUTPUT)\n`;\n    // 서보모터\n    else if (ch1OutputType === 2)\n      setOutputContext += `\nGPIO.setup(18,GPIO.OUT) # 채널 1 속도\nGPIO.setup(23,GPIO.OUT)\nGPIO.output(23,0) # 채널1 방향\nm1=GPIO.PWM(18,50)\nm1.start(0)\n`;\n    else if (ch1OutputType === 3 && ch2OutputType !== 3)\n      setOutputContext += `\npix1 = neopixel.NeoPixel(board.D18,12)\n`;\n    if (ch2OutputType === 1)\n      setOutputContext += `\npwm.set_mode(12, pigpio.OUTPUT)\n`;\n    // 서보모터\n    else if (ch2OutputType === 2)\n      setOutputContext += `\nGPIO.setup(12,GPIO.OUT) # 채널 2 속도\nGPIO.setup(25,GPIO.OUT)\nGPIO.output(25,0) # 채널2 방향\nm2=GPIO.PWM(12,50)\nm2.start(0)\n`;\n    else if (ch2OutputType === 3 && ch1OutputType !== 3)\n      setOutputContext += `\npix2 = neopixel.NeoPixel(board.D12,12)\n`;\n    return setOutputContext;\n  }\n  function getIfContext() {\n    let chk = 0;\n    let context = `    # 여기부터는 블록으로 만든 커스텀 코드입니다.\n    resultIndex = np.argmax(result)\n`;\n    labels.forEach((label, index) => {\n      let func = \"\";\n      let noOutputCh1 = false;\n      let noOutputCh2 = false;\n      if (ch1OutputType === 0) noOutputCh1 = true;\n      else if (ch1OutputType === 1)\n        func += `pwm.set_servo_pulsewidth(18,${(parseFloat(ch1OutputAmount[index]) / 180) * 2000 + 500}) # 500 => 0도 / 1500 => 90도 / 2500 => 180도\n        `;\n      // 서보모터\n      else if (ch1OutputType === 2)\n        func += `m1.ChangeDutyCycle(${ch1OutputAmount[index][1]})\n        GPIO.output(23,${ch1OutputAmount[index][0]}) # 방향 제어\n        ${\n          ch2OutputType === 2\n            ? \"\"\n            : `time.sleep(${ch1OutputAmount[index][2]})\n        m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)\n        `\n        }\n        `;\n      // 모터\n      else if (ch1OutputType === 3)\n        func += `pix1.fill((${ch1OutputAmount[index].r},${ch1OutputAmount[index].g},${ch1OutputAmount[index].b}))\n        pix1.show()\n        `;\n      // LED\n      else noOutputCh1 = true;\n      if (ch2OutputType === 0) noOutputCh2 = true;\n      else if (ch2OutputType === 1)\n        func += `pwm.set_servo_pulsewidth(12,${(parseFloat(ch2OutputAmount[index]) / 180) * 2000 + 500}) # 500 => 0도 / 1500 => 90도 / 2500 => 180도\n        `;\n      // 서보모터\n      else if (ch2OutputType === 2)\n        func += `m2.ChangeDutyCycle(${ch2OutputAmount[index][1]})\n        GPIO.output(25,${ch2OutputAmount[index][0]}) # 방향 제어\n        time.sleep(${ch2OutputAmount[index][2]})\n        ${\n          ch1OutputType === 2\n            ? `m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)`\n            : \"\"\n        }\n        m2.ChangeDutyCycle(0)\n        GPIO.output(25,0)\n        `;\n      // 모터\n      else if (ch2OutputType === 3)\n        func += `pix2.fill((${ch2OutputAmount[index].r},${ch2OutputAmount[index].g},${ch2OutputAmount[index].b}))\n        pix2.show()\n        `;\n      // LED\n      else noOutputCh2 = true;\n      if (noOutputCh1 === true && noOutputCh2 === true) return;\n      if (chk === 0) {\n        context += `\n    if `;\n        chk = 1;\n      } else\n        context += `\n    elif `;\n      context += `resultIndex == ${index}:\n        ${func}\n        `;\n    });\n    return context;\n  }\n  function getBackContext() {\n    let back = `\n# Clean up\ncv2.destroyAllWindows()\nvideostream.stop()\n`;\n\n    if (ch1OutputType === 1) {\n      back += `p1.stop()\n`;\n    }\n    if (ch1OutputType === 2) {\n      back += `m1.stop()\n`;\n    }\n    if (ch2OutputType === 1) {\n      back += `p2.stop()\n`;\n    }\n    if (ch2OutputType === 2) {\n      back += `m2.stop()\n`;\n    }\n    back += `GPIO.cleanup()\n`;\n    return back;\n  }\n  function downloadPy() {\n    const element = document.createElement(\"a\");\n    const front2 = getSetOutput();\n    const middleIf = getIfContext();\n    const back = getBackContext();\n    const file = new Blob([front, front2, middle, middleIf, back], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"pibox.py\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  function downloadBat(os) {\n    const element = document.createElement(\"a\");\n    const batText = `sshpass -praspberry scp -o StrictHostKeyChecking=no ./model.tflite pi@${props.ipAddress}:/home/pi/tflite/model.tflite\nsshpass -praspberry scp -o StrictHostKeyChecking=no ./labels.txt pi@${props.ipAddress}:/home/pi/tflite/labels.txt\nsshpass -praspberry scp -o StrictHostKeyChecking=no ./pibox.py pi@${props.ipAddress}:/home/pi/tflite/pibox.py\n`;\n    const file = new Blob([batText], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = os === \"WIN\" ? \"upload.bat\" : \"upload.sh\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  const selectOutputMount = index => (\n    <div className=\"showOutputType\" key={index}>\n      <span>\n        <h4>채널 1</h4>\n        {ch1OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>몇 도 움직일까요? ( 0 ~ 180 )</p>\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = parseInt(value);\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index]}\n            />\n          </div>\n        ) : ch1OutputType === 2 ? (\n          <div style={{ display: \"flex\" }}>\n            <select\n              onChange={e => {\n                const value = e.target.value;\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch1OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <h4>속도 ( 0 ~ 100 ) </h4>\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [newState[index][0], value, newState[index][2]];\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index][1]}\n            />\n            <h4>시간 ( 1 => 1초 ) </h4>\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [newState[index][0], newState[index][1], value];\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index][2]}\n            />\n          </div>\n        ) : ch1OutputType === 3 ? (\n          <div style={{ display: \"flex\" }}>\n            <SliderPicker\n              color={ch1OutputAmount[index]}\n              onChange={value => {\n                setCh1OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ display: \"flex\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <h4>채널 2</h4>\n        {ch2OutputType === 1 ? (\n          <div className=\"servomotor\">\n            몇 도 움직일까요? ( 0 ~ 180 )<br />\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = parseInt(value);\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index]}\n            />\n          </div>\n        ) : ch2OutputType === 2 ? (\n          <div style={{ display: \"flex\" }}>\n            <select\n              onChange={e => {\n                const value = e.target.value;\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch2OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <h4>속도 ( 0 ~ 100 ) </h4>\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [newState[index][0], value, newState[index][2]];\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index][1]}\n            />\n            <h4>시간 ( 1 => 1초 ) </h4>\n            <input\n              style={{ height: 30 }}\n              onChange={e => {\n                const value = e.target.value;\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = [newState[index][0], newState[index][1], value];\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index][2]}\n            />\n          </div>\n        ) : ch2OutputType === 3 ? (\n          <div style={{ display: \"flex\", width: \"100%\" }}>\n            <SliderPicker\n              color={ch2OutputAmount[index]}\n              onChangeComplete={value => {\n                setCh2OutputAmount(state => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ display: \"flex\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n    </div>\n  );\n\n  const selectOutputType = () => (\n    //아웃풋 종류 보여줌\n    <div>\n      <span>\n        <h4>채널 1 출력</h4>\n        <div className=\"pics\">\n          <div\n            className=\"outputType\"\n            onClick={() => {\n              setCh1OutputType(0);\n              setCh1OutputAmount(state => {\n                return new Array(state.length).fill(\"\");\n              });\n            }}\n          >\n            <img className=\"outputPic\" src={nope} alt=\"no output\" />\n          </div>\n          <div\n            className=\"outputType\"\n            onClick={() => {\n              setCh1OutputType(1);\n              setCh1OutputAmount(state => {\n                return new Array(state.length).fill(\"0\");\n              });\n            }}\n          >\n            <img className=\"outputPic\" src={servomotor} alt=\"servomotor\" />\n          </div>\n\n          <div\n            onClick={() => {\n              setCh1OutputType(2);\n              setCh1OutputAmount(state => {\n                return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n              });\n            }}\n            className=\"outputType\"\n          >\n            <img className=\"outputPic\" src={motor} alt=\"motor\" />\n          </div>\n\n          <div\n            onClick={() => {\n              if (ch2OutputType !== 3) {\n                setCh1OutputType(3);\n                setCh1OutputAmount(state => {\n                  return new Array(state.length).fill({\n                    r: 255,\n                    g: 255,\n                    b: 255,\n                    a: 1\n                  });\n                });\n              } else {\n                alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n              }\n            }}\n            className=\"outputType\"\n          >\n            <img className=\"outputPic\" src={led} alt=\"led\" />\n          </div>\n        </div>\n      </span>\n      <span>\n        <h4>채널 2 출력</h4>\n        <div className=\"pics\">\n          <div\n            className=\"outputType\"\n            onClick={() => {\n              setCh2OutputType(0);\n              setCh2OutputAmount(state => {\n                return new Array(state.length).fill(\"\");\n              });\n            }}\n          >\n            <img className=\"outputPic\" src={nope} alt=\"no output\" />\n          </div>\n          <div\n            className=\"outputType\"\n            onClick={() => {\n              setCh2OutputType(1);\n              setCh2OutputAmount(state => {\n                return new Array(state.length).fill(\"0\");\n              });\n            }}\n          >\n            <img className=\"outputPic\" src={servomotor} alt=\"servomotor\" />\n          </div>\n\n          <div\n            onClick={() => {\n              setCh2OutputType(2);\n              setCh2OutputAmount(state => {\n                return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n              });\n            }}\n            className=\"outputType\"\n          >\n            <img className=\"outputPic\" src={motor} alt=\"motor\" />\n          </div>\n\n          <div\n            onClick={() => {\n              if (ch1OutputType !== 3) {\n                setCh2OutputType(3);\n                setCh2OutputAmount(state => {\n                  return new Array(state.length).fill({\n                    r: 255,\n                    g: 255,\n                    b: 255,\n                    a: 1\n                  });\n                });\n              } else {\n                alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n              }\n            }}\n            className=\"outputType\"\n          >\n            <img className=\"outputPic\" src={led} alt=\"led\" />\n          </div>\n        </div>\n      </span>\n    </div>\n  );\n\n  return (\n    <div className=\"connect-panel panel\">\n      <div className=\"panel-title\">블록 코드</div>\n\n      <div>\n        <p>\n          라벨 : <input type=\"file\" accept=\".txt\" onChange={e => uploadFile(e.target.files[0])} />\n        </p>\n      </div>\n      <div className=\"label-output\">\n        <div className=\"blocks-container\">\n          {labels.length === 0 ? null : <div>{selectOutputType()}</div>}\n          <div>\n            {labels.map((label, index) => (\n              <div className=\"blocks\" key={label}>\n                <div className=\"block\">{label}</div>\n                <div className=\"arrow\"></div>\n                <div>{selectOutputMount(index)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div>\n        <h4>\n          블록이 완성되었다면{\" \"}\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadPy()}>\n            코드 다운로드\n          </span>{\" \"}\n        </h4>\n      </div>\n      <div>\n        <h4>\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadBat(\"WIN\")}>\n            코드 업로드 프로그램(윈도우)\n          </span>\n          <br />\n          코드와 업로드 프로그램 파일은 모델파일을 압축푼 폴더와 같은 폴더에 넣어주세요.\n        </h4>\n        <p>\n          초기 비밀번호 : raspberry\n          <br />\n        </p>\n      </div>\n    </div>\n  );\n}\n","export const front = `\n## pibox TFLITE\nimport os\nimport argparse\nimport cv2\nimport numpy as np\nimport sys\nimport time\nfrom threading import Thread\nimport importlib.util\n\n## 출력을 위한 import\nimport RPi.GPIO as GPIO\nimport pigpio\nimport time\nimport board\nimport neopixel\n\n`;\n\nexport const middle = `\n# 카메라 오브젝트\nclass VideoStream:\n    def __init__(self,resolution=(320,240),framerate=3): # 원래는 640,480 그리고 30 framerate\n        # 파이 카메라를 시작합니다.\n        self.stream = cv2.VideoCapture(0)\n        ret = self.stream.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))\n        ret = self.stream.set(3,resolution[0])\n        ret = self.stream.set(4,resolution[1])\n            \n        # 첫번째 사진을 불러옵니다.\n        (self.grabbed, self.frame) = self.stream.read()\n\n\t    # 멈출 수 있도록 stopped를 설정해줍니다.\n        self.stopped = False\n\n    def start(self):\n\t    # 비디오 스트림에서 프레임을 읽어오는 쓰레드를 시작합니다.\n        Thread(target=self.update,args=()).start()\n        return self\n\n    def update(self):\n        # 쓰레드가 멈출 때 까지 계속 스트림을 실행합니다.\n        while True:\n            # 카메라가 멈추면 스트림을 멈춥니다.\n            if self.stopped:\n                # 카메라 리소스를 닫습니다.\n                self.stream.release()\n                return\n\n            # 멈춘것이 아니라면 프레임을 가져옵니다.\n            (self.grabbed, self.frame) = self.stream.read()\n\n    def read(self):\n\t    # 가장 최근 프레임을 가져옵니다.\n        return self.frame\n\n    def stop(self):\n\t    # 카메라 쓰레드를 정지합니다.\n        self.stopped = True\n\n# 입력 파라미터를 정의합니다.\nparser = argparse.ArgumentParser()\nparser.add_argument('--modeldir', help='Folder the .tflite file is located in',\n                    required=True)\nparser.add_argument('--graph', help='Name of the .tflite file, if different than model.tflite',\n                    default='model.tflite')\nparser.add_argument('--labels', help='Name of the labelmap file, if different than labels.txt',\n                    default='labels.txt')\nparser.add_argument('--threshold', help='Minimum confidence threshold for displaying detected objects',\n                    default=0.5)\nparser.add_argument('--resolution', help='Desired webcam resolution in WxH. If the webcam does not support the resolution entered, errors may occur.',\n                    default='320x240') # 원래는 1280x720 속도를 위해 낮춤\nparser.add_argument('--edgetpu', help='Use Coral Edge TPU Accelerator to speed up detection',\n                    action='store_true',default=False)\n\nargs = parser.parse_args()\n\nMODEL_NAME = args.modeldir\nGRAPH_NAME = args.graph\nLABELMAP_NAME = args.labels\nmin_conf_threshold = float(args.threshold)\nresW, resH = args.resolution.split('x')\nimW, imH = int(resW), int(resH) # 라즈베리파이 제로 + 파이카메라에서는 224,224 가 아주 쬐에에에끔 빠릅니다.\nuse_TPU = args.edgetpu\n\n# 텐서플로우 라이브러리를 가져옵니다.\n# 텐서플로우 라이브러리가 없다면, tflite_runtime 을 가져옵니다.\n# 코랄 TPU를 사용한다면, TPU 용 라이브러리를 가져옵니다. (import the load_delegate library)\npkg = importlib.util.find_spec('tensorflow')\nif pkg is None:\n    from tflite_runtime.interpreter import Interpreter\n    if use_TPU:\n        from tflite_runtime.interpreter import load_delegate\nelse:\n    from tensorflow.lite.python.interpreter import Interpreter\n    if use_TPU:\n        from tensorflow.lite.python.interpreter import load_delegate\n\n# TPU를 사용한다면 TPU 모델을 가져옵니다.\nif use_TPU:\n    # 'edgetpu.tflite'가 TPU를 사용할 때의 기본 경로입니다.\n    if (GRAPH_NAME == 'model.tflite'):\n        GRAPH_NAME = 'edgetpu.tflite'       \n\n# 작업 경로와 현재 경로를 일치시킵니다.\nCWD_PATH = os.getcwd()\n\n# 모델 경로를 설정합니다.\nPATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,GRAPH_NAME)\n\n# 라벨 경로를 설정합니다.\nPATH_TO_LABELS = os.path.join(CWD_PATH,MODEL_NAME,LABELMAP_NAME)\n\n# 라벨을 가져옵니다.\nwith open(PATH_TO_LABELS, 'r') as f:\n    labels = [line.strip() for line in f.readlines()]\n\n# 첫번째 라벨이 ??? 인 경우가 있어 그럴 경우 제거합니다.\nif labels[0] == '???':\n    del(labels[0])\n\n# 텐서플로우 모델을 가져옵니다. TPU를 쓸 경우 TPU 모델로 가져옵니다.\nif use_TPU:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT,\n                              experimental_delegates=[load_delegate('libedgetpu.so.1.0')])\n    print(PATH_TO_CKPT)\nelse:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT)\n\ninterpreter.allocate_tensors()\n\n# 로드된 모델의 정보를 가져옵니다.\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nheight = input_details[0]['shape'][1]\nwidth = input_details[0]['shape'][2]\n#print(\"가로\")\n#print(width)\n#print(\"세로\")\n#print(height)\n# 입력이 소수인지 아닌지 판단합니다.\nfloating_model = (input_details[0]['dtype'] == np.float32)\n\ninput_mean = 127.5\ninput_std = 127.5\n\n# 연산 프레임을 체크하기 위한 변수를 할당합니다.\nframe_rate_calc = 1\nfreq = cv2.getTickFrequency()\n\n# 상단에서 정의한 비디오 스트림을 시작합니다.\nvideostream = VideoStream(resolution=(imW,imH),framerate=30).start() \ntime.sleep(1)\n\n# 프레임으로 연산을 시작합니다.\nwhile True:\n\n    # 연산 프레임을 위한 시간 체크 변수를 할당합니다.\n    t1 = cv2.getTickCount()\n\n    # 비디오스트림에서 프레임을 읽어옵니다.\n    frame1 = videostream.read()\n\n    # 입력에 넣을 수 있도록 해상도를 변경합니다.\n    frame = frame1.copy()\n    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n    # 위에서 input을 224,224로 설정했다면 아래 줄은 넘어가도 됩니다..\n    frame_resized = cv2.resize(frame_rgb, (width, height)) \n    input_data = np.expand_dims(frame_resized, axis=0)\n\n    # 입력이 소수라면 소수로 바꿔줍니다.\n    if floating_model:\n        input_data = (np.float32(input_data) - input_mean) / input_std\n\n    # 로드된 모델에 입력을 넣어 결과를 가져옵니다.\n    interpreter.set_tensor(input_details[0]['index'],input_data)\n    interpreter.invoke()\n    result=interpreter.get_tensor(output_details[0]['index'])[0]\n    print(labels[np.argmax(result)])\n    #print(result)\n    # 초당 연산 프레임을 계산합니다.\n    t2 = cv2.getTickCount()\n    time1 = (t2-t1)/freq\n    frame_rate_calc= 1/time1\n    #print(frame_rate_calc)\n`;\n","import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport WifiSSH from \"./WifiSSH\";\nimport BlockCode from \"./BlockCode\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pibox\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: null,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      isAndroid: navigator.userAgent.indexOf(\"Android\") > -1 || navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone: navigator.userAgent.indexOf(\"iPhone\") > -1 || navigator.userAgent.indexOf(\"iphone\") > -1\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID]\n          }\n        ]\n      })\n      .then(device => {\n        //GO loading screen\n        return device.gatt.connect();\n      })\n      .then(server => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then(service => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async characteristics => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \"\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\"\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"...\"\n          }\n        ];\n\n        await this.subscribeCharacteristic(UUID.WIFI_NAME, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.IP_ADDRESS, infoList, characteristicsList);\n        await this.readInfoCharacteristic(UUID.DEVICE_MODEL, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.NOTIFY_MESSAGE, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY, infoList, characteristicsList);\n\n        characteristicsList\n          .filter(i => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map(item =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\"\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(infoList[i].uuid_label, infoList, characteristicsList);\n          await this.subscribeCharacteristic(infoList[i].uuid, infoList, characteristicsList);\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter(i => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map(item =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\"\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(commandList[i].uuid, commandList, characteristicsList);\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList\n        });\n        // loading close\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise(resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(label => {\n          let tempCMDList = commandList;\n          tempCMDList.find(i => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise(resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(value => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find(i => i.uuid === uuid)) {\n            tempInfoList.find(i => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find(i => i.uuid_label === uuid)) {\n            tempInfoList.find(i => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList) this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\"characteristicvaluechanged\", event => {\n        if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n          let msg = this.ab2str(event.target.value.buffer);\n          notify.show(msg, \"custom\", 3000, \"teal\");\n        } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n          let msg = this.ab2str(event.target.value.buffer);\n          if (this.state.commandOutputShouldRefresh) {\n            this.setState({ commandOutputShouldRefresh: false, commandOutput: \"\" }, () => {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            });\n          } else {\n            let output = this.state.commandOutput + msg;\n            if (output.endsWith(\"&#&\")) {\n              output = output.replace(\"&#&\", \"\");\n              this.setState({ commandOutputShouldRefresh: true });\n            }\n            this.setState({ commandOutput: output });\n          }\n        } else {\n          let value = this.ab2str(event.target.value.buffer);\n          let tempInfoList = infoList;\n          if (tempInfoList.find(i => i.uuid === uuid)) {\n            tempInfoList.find(i => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find(i => i.uuid_label === uuid)) {\n            tempInfoList.find(i => i.uuid_label === uuid).label = value;\n          }\n          this.setState({ infoList: tempInfoList });\n        }\n      });\n      await this.getCharacteristicInit(uuid, characteristicsList).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = service => {\n    return new Promise(async resolve => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then(characteristic => characteristic.readValue())\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then(value => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then(characteristic => characteristic.readValue())\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then(value => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending);\n            }\n            let customCommandList = [];\n            for (let index = 0; index < this.state.customCommandCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending);\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map(i => service.getCharacteristic(i)),\n                ...customCommandList.map(i => service.getCharacteristic(i))\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = buf => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = uuid => {\n    return this.state.characteristicsList.find(i => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find(i => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    this.setState(\n      {\n        key: this.state.key.trim().replace(/\\|/g, \"*\"),\n        ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n        password: this.state.password.trim().replace(/\\|/g, \"*\")\n      },\n      () => {\n        let errMsg;\n        if (this.state.ssid === \"\") {\n          errMsg = \"SSID cannot be empty.\";\n        }\n        if (this.state.password === \"\") {\n          errMsg = \"Password cannot be empty.\";\n        }\n        if (errMsg) {\n          notify.show(errMsg, \"custom\", 3000, \"teal\");\n          return;\n        }\n        this.setState({ wifiLock: true }, () =>\n          setTimeout(() => {\n            this.setState({ wifiLock: false });\n          }, 4000)\n        );\n\n        let sendArray = this.str2abs(`${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`);\n        this.sendSeparately(sendArray, UUID.INPUT_SEP);\n      }\n    );\n  };\n  sendCommand = uuid => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async sec => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n  str2abs = str => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function(h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">Cannot find web bluetooth.</div>\n                <p>\n                  Please make sure your device and browser support web bluetooth. Please visit{\" \"}\n                  <a href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\" target=\"_brank\">\n                    Here\n                  </a>{\" \"}\n                  to check web-bluetooth compatibility.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">PIBOX. 라즈베이파이를 블루투스로 찾아 제어할 수 있습니다.</div>\n                <div>\n                  <button className=\"findBluetooth\" onClick={this.connectDevice}>\n                    블루투스로 찾기\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map(item => (\n                  <div key={item.uuid} className=\"info-group\">\n                    <div className=\"label\">{item.label}</div>\n                    <div className=\"value\">{item.value}</div>\n                  </div>\n                ))}\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"wifi-panel panel\">\n                <div className=\"panel-title\">라즈베리파이 와이파이 설정</div>\n                <div>\n                  <input placeholder=\"와이파이 이름(SSID)\" value={this.state.ssid} onChange={value => this.setState({ ssid: value.target.value })} />\n                </div>\n                <div>\n                  <input\n                    placeholder=\"와이파이 비밀번호\"\n                    value={this.state.password}\n                    onChange={value => this.setState({ password: value.target.value })}\n                    type=\"password\"\n                  />\n                </div>\n                <div>\n                  <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={value => this.setState({ key: value.target.value })} />\n                </div>\n                <div>\n                  <button onClick={this.inputWifi} disabled={this.state.wifiLock}>\n                    와이파이 설정\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"command-panel panel\">\n                <div className=\"panel-title\">커스텀 명령어</div>\n                {this.state.commandList.length > 0 ? (\n                  <div>\n                    <div>\n                      {this.state.commandList.map(item => (\n                        <div key={item.uuid} className=\"button-wrap\">\n                          <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                            {item.label}\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div>\n                      <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={value => this.setState({ key: value.target.value })} />\n                    </div>\n                    <div>\n                      <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                    </div>\n                  </div>\n                ) : (\n                  <p>커스텀 명령어가 없습니다.</p>\n                )}\n              </div>\n            ) : null}\n          </div>\n          {this.state.isConnected ? (\n            <div className=\"panel-container\">\n              <WifiSSH\n                ipAddress={\n                  this.state.infoList.find(i => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find(i => i.label === \"IP Address\").value\n                }\n              />\n            </div>\n          ) : null}\n          {this.state.isConnected ? (\n            <div className=\"panel-container\">\n              <BlockCode\n                ipAddress={\n                  this.state.infoList.find(i => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find(i => i.label === \"IP Address\").value\n                }\n              />\n            </div>\n          ) : null}\n\n          <div className=\"copyright\">PiBox . Open source under GPL-3.0 license.</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n","module.exports = __webpack_public_path__ + \"static/media/servomotor.ba097c0f.png\";","module.exports = __webpack_public_path__ + \"static/media/motor.d4643de8.png\";","module.exports = __webpack_public_path__ + \"static/media/led.cd049886.png\";","module.exports = __webpack_public_path__ + \"static/media/none.bd980005.png\";"],"sourceRoot":""}