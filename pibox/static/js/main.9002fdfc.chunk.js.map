{"version":3,"sources":["BluetoothConnect.js","App.js","index.js","uuid.js"],"names":["BluetoothConnect","props","i","connectDevice","navigator","bluetooth","requestDevice","filters","services","UUID","SERVICE_ID","then","device","gatt","connect","server","setState","serverId","id","getPrimaryService","service","state","isIphone","console","log","webBleConnect","getCharacteristics","characteristics","a","characteristicsList","isConnected","infoList","preset","uuid","label","value","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","subscribeCharacteristic","readInfoCharacteristic","NOTIFY_MESSAGE","CUSTOM_COMMAND_NOTIFY","filter","indexOf","CUSTOM_INFO_LABEL","map","item","push","replace","CUSTOM_INFO","uuid_label","length","tempCharList","CUSTOM_COMMAND_LABEL","commandList","readCommandLabel","catch","Promise","resolve","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","addEventListener","event","target","msg","notify","show","commandOutputShouldRefresh","commandOutput","output","endsWith","startNotifications","getCharacteristic","PREFIX","CUSTOM_INFO_COUNT","characteristic","parseInt","customInfoCount","CUSTOM_COMMAND_COUNT","customCommandCount","customInfoList","index","ending","toString","repeat","customCommandList","all","SERVICE_NAME","INPUT_SEP","CUSTOM_COMMAND_INPUT","buf","String","fromCharCode","apply","Uint8Array","inputWifi","key","trim","ssid","password","errMsg","wifiLock","setTimeout","wifiReset","sendArray","str2abs","sendSeparately","sendCommand","slice","array","writeValue","wait","sec","waitCamera","chk","undefined","fetch","resp","ok","alert","str","val","charCodeAt","valArray","split","bufferArray","splice","join","match","h","setIsBlockCodingToFalse","isBlockCoding","c","supportBluetooth","Boolean","window","loading","charLength","isAndroid","userAgent","wifiConnected","toLowerCase","className","src","this","href","onClick","placeholder","onChange","type","disabled","React","Component","App","ReactDOM","render","document","getElementById","createElement","module","exports","INPUT"],"mappings":"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","file":"static/js/main.9002fdfc.chunk.js","sourcesContent":["import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport WifiSSH from \"./WifiSSH\";\nimport BlockCode from \"./BlockCode\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pibox\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      isBlockCoding: false,\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: null,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      wifiReset: false,\n      isAndroid: navigator.userAgent.indexOf(\"Android\") > -1 || navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone: navigator.userAgent.indexOf(\"iPhone\") > -1 || navigator.userAgent.indexOf(\"iphone\") > -1,\n      wifiConnected: false,\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID],\n          },\n        ],\n      })\n      .then((device) => {\n        //GO loading screen\n        return device.gatt.connect();\n      })\n      .then((server) => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then((service) => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async (characteristics) => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId,\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \",\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\",\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"...\",\n          },\n        ];\n\n        await this.subscribeCharacteristic(UUID.WIFI_NAME, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.IP_ADDRESS, infoList, characteristicsList);\n        await this.readInfoCharacteristic(UUID.DEVICE_MODEL, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.NOTIFY_MESSAGE, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY, infoList, characteristicsList);\n\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map((item) =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\",\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(infoList[i].uuid_label, infoList, characteristicsList);\n          await this.subscribeCharacteristic(infoList[i].uuid, infoList, characteristicsList);\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map((item) =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\",\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(commandList[i].uuid, commandList, characteristicsList);\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList,\n        });\n        //console.log(commandList);\n        // 0: {uuid: \"00000000-0000-0000-0000-fd2bcccc0001\", label: \"shutdown\"}\n        // 1: {uuid: \"00000000-0000-0000-0000-fd2bcccc0002\", label: \"reboot\"}\n        // 2: {uuid: \"00000000-0000-0000-0000-fd2bcccc0003\", label: \"start\"}\n        // 3: {uuid: \"00000000-0000-0000-0000-fd2bcccc0004\", label: \"stop\"}\n        // 4: {uuid: \"00000000-0000-0000-0000-fd2bcccc0005\", label: \"upload\"}\n        // 5: {uuid: \"00000000-0000-0000-0000-fd2bcccc0006\", label: \"camStart\"}\n\n        // loading close\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((label) => {\n          let tempCMDList = commandList;\n          tempCMDList.find((i) => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((value) => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList) this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async (resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\"characteristicvaluechanged\", (event) => {\n        if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n          let msg = this.ab2str(event.target.value.buffer);\n          notify.show(msg, \"custom\", 3000, \"teal\");\n        } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n          let msg = this.ab2str(event.target.value.buffer);\n          if (this.state.commandOutputShouldRefresh) {\n            this.setState({ commandOutputShouldRefresh: false, commandOutput: \"\" }, () => {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            });\n          } else {\n            let output = this.state.commandOutput + msg;\n            if (output.endsWith(\"&#&\")) {\n              output = output.replace(\"&#&\", \"\");\n              this.setState({ commandOutputShouldRefresh: true });\n            }\n            this.setState({ commandOutput: output });\n          }\n        } else {\n          let value = this.ab2str(event.target.value.buffer);\n          let tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          this.setState({ infoList: tempInfoList });\n        }\n      });\n      await this.getCharacteristicInit(uuid, characteristicsList).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = (service) => {\n    return new Promise(async (resolve) => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending);\n            }\n            let customCommandList = [];\n            for (let index = 0; index < this.state.customCommandCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending);\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map((i) => service.getCharacteristic(i)),\n                ...customCommandList.map((i) => service.getCharacteristic(i)),\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = (buf) => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = (uuid) => {\n    return this.state.characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    this.setState(\n      {\n        key: this.state.key.trim().replace(/\\|/g, \"*\"),\n        ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n        password: this.state.password.trim().replace(/\\|/g, \"*\"),\n      },\n      () => {\n        let errMsg;\n        if (this.state.ssid === \"\") {\n          errMsg = \"SSID cannot be empty.\";\n        }\n        if (this.state.password === \"\") {\n          errMsg = \"Password cannot be empty.\";\n        }\n        if (errMsg) {\n          notify.show(errMsg, \"custom\", 3000, \"teal\");\n          return;\n        }\n        this.setState({ wifiLock: true }, () =>\n          setTimeout(() => {\n            this.setState({ wifiLock: false, wifiReset: false });\n          }, 4000)\n        );\n\n        let sendArray = this.str2abs(`${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`);\n        this.sendSeparately(sendArray, UUID.INPUT_SEP);\n      }\n    );\n  };\n  sendCommand = (uuid) => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async (sec) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n  waitCamera = async () => {\n    let chk = true;\n    if (this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined && this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\") {\n      while (chk) {\n        await fetch(\"http://\" + this.state.infoList.find((i) => i.label === \"IP Address\").value + \":8000/index.html\")\n          // eslint-disable-next-line\n          .then(async (resp) => {\n            if (!resp.ok) {\n              await this.wait(0.5);\n            } else {\n              chk = false;\n            }\n          })\n          .catch(async () => {\n            await this.wait(0.5);\n          });\n      }\n      return true;\n    } else {\n      alert(\"와이파이가 연결되어있지 않습니다.\");\n      return false;\n    }\n  };\n  str2abs = (str) => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function (h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  setIsBlockCodingToFalse = () => {\n    this.setState({ isBlockCoding: false });\n    this.sendCommand(this.state.commandList.find((c) => c.label === \"stop\").uuid);\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          <img src=\"img/logo.svg\" className=\"logo\"></img>\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">Cannot find web bluetooth.</div>\n                <p>\n                  Please make sure your device and browser support web bluetooth. Please visit{\" \"}\n                  <a href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\" target=\"_brank\">\n                    Here\n                  </a>{\" \"}\n                  to check web-bluetooth compatibility.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <img src=\"img/icon_arrow_back.svg\" className=\"Icon-arrow_back\"></img>\n                <div className=\"character-button\">\n                  <img src=\"img/character.svg\" className=\"character\"></img>\n                  <div className=\"Look-it-up\">Look it up!</div>\n                  <div className=\"PLAi-Bluetooth-\">PLAi를 움직일 Bluetooth를 찾아볼까요?</div>\n                  <div onClick={this.connectDevice}>\n                    <img src=\"img/bluetooth_button.svg\" className=\"bluetooth_button\"></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected && false ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map((item) => {\n                  if (item.label === \"Wifi\" || item.label === \"IP Address\" || item.label === \"CPU Temp\" || item.label === \"CPU Load\") {\n                    return (\n                      <div key={item.uuid} className=\"info-group\">\n                        <div className=\"label\">{item.label}</div>\n                        <div className=\"value\">{item.value}</div>\n                      </div>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n              </div>\n            ) : null}\n            {(this.state.isConnected && (this.state.infoList.find((i) => i.label === \"IP Address\") === undefined || this.state.infoList.find((i) => i.label === \"IP Address\").value === \"\")) ||\n            this.state.wifiReset ? (\n              <div className=\"wifi-panel panel\">\n                <img src=\"img/icon_arrow_back.svg\" className=\"Icon-arrow_back\"></img>\n                <div className=\"WiFi-password-container\">\n                  <div className=\"wifi-setting-title\">\n                    <span className=\"WiFi-\">WiFi 설정</span>\n                    <img src=\"img/character2.svg\" className=\"character2\"></img>\n                  </div>\n                  <div className=\"wifi-name-container\">\n                    <div>\n                      <span className=\"Wifi-Name\">WiFi Name</span>\n                      <input className=\"wifi-name-input\" placeholder=\"  와이파이 이름(SSID)\" value={this.state.ssid} onChange={(value) => this.setState({ ssid: value.target.value })} />\n                    </div>\n                    <div>\n                      <span className=\"Wifi-Password\">WiFi Password</span>\n                      <input\n                        className=\"wifi-password-input\"\n                        placeholder=\"  와이파이 비밀번호\"\n                        value={this.state.password}\n                        onChange={(value) =>\n                          this.setState({\n                            password: value.target.value.replace(/[ㄱ-ㅎㅏ-ㅣ가-힣]/g, \"\"),\n                          })\n                        }\n                        type=\"password\"\n                      />\n                    </div>\n                  </div>\n                  {/* <div>\n                    <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                  </div> */}\n                  <div>\n                    <img className=\"wifi-button\" onClick={this.inputWifi} disabled={this.state.wifiLock} src={this.state.wifiLock ? \"img/wifing_button.svg\" : \"img/wifi_button.svg\"}></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected &&\n            this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined &&\n            this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\" &&\n            !this.state.wifiConnected &&\n            !this.state.wifiReset ? (\n              <div className=\"connect-panel panel\">\n                <img src=\"img/icon_arrow_back.svg\" onClick={() => this.setState({ wifiReset: true })} className=\"Icon-arrow_back\"></img>\n                <div className=\"character-button\">\n                  <img src=\"img/character2.svg\" className=\"character\"></img>\n                  <div className=\"Look-it-up\">WiFi 설정이 완료 되었습니다.</div>\n                  <div className=\"PLAi-Bluetooth-\">PLAi와 함께 놀아볼까요?</div>\n                  <div onClick={() => this.setState({ wifiConnected: true })}>\n                    <img src=\"img/wifi_next.svg\" className=\"bluetooth_button\"></img>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            {/* <div className=\"command-panel panel\">\n              <div className=\"panel-title\">커스텀 명령어</div>\n              {this.state.commandList.length > 0 ? (\n                <div>\n                  <div>\n                    {this.state.commandList.map((item) => (\n                      <div key={item.uuid} className=\"button-wrap\">\n                        <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                          {item.label}\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                  <div>\n                    <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                  </div>\n                  <div>\n                    <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                  </div>\n                </div>\n              ) : (\n                <p>커스텀 명령어가 없습니다.</p>\n              )}\n            </div> */}\n          </div>\n          {this.state.isConnected && false ? (\n            <div className=\"panel-container\">\n              <WifiSSH ipAddress={this.state.infoList.find((i) => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find((i) => i.label === \"IP Address\").value} />\n            </div>\n          ) : null}\n          {this.state.isConnected && !this.state.isBlockCoding && this.state.wifiConnected ? (\n            <div className=\"connect-panel panel\">\n              <img src=\"img/icon_arrow_back.svg\" onClick={() => this.setState({ wifiReset: true })} className=\"Icon-arrow_back\"></img>\n              <div className=\"character-button\">\n                <img src=\"img/plai_character.svg\" className=\"character\"></img>\n                {this.state.isConnected &&\n                this.state.infoList.find((i) => i.label === \"IP Address\") !== undefined &&\n                this.state.infoList.find((i) => i.label === \"IP Address\").value !== \"\" &&\n                this.state.infoList.find((i) => i.label === \"Machine ID\") !== undefined &&\n                this.state.infoList.find((i) => i.label === \"Machine ID\").value !== \"\" &&\n                !this.state.isBlockCoding &&\n                this.state.wifiConnected ? (\n                  <div\n                    onClick={async () => {\n                      this.sendCommand(this.state.commandList.find((c) => c.label === \"camStart\").uuid);\n                      await this.wait(2.0);\n                      await this.waitCamera();\n                      this.setState({ isBlockCoding: true });\n                    }}\n                  >\n                    <img src=\"img/start_blockcode_button.svg\" className=\"bluetooth_button\"></img>\n                  </div>\n                ) : (\n                  <div>\n                    <img src=\"img/start_blockcode_button_not_available.svg\" className=\"bluetooth_button\"></img>\n                  </div>\n                )}\n                <div\n                  onClick={async () => {\n                    this.sendCommand(this.state.commandList.find((c) => c.label === \"start\").uuid);\n                    await this.wait(0.5);\n                  }}\n                >\n                  <img src=\"img/start_plai_button.svg\" className=\"bluetooth_button\"></img>\n                </div>\n                <div\n                  onClick={async () => {\n                    this.sendCommand(this.state.commandList.find((c) => c.label === \"stop\").uuid);\n                    this.setState({ isBlockCoding: false });\n                    await this.wait(0.5);\n                  }}\n                >\n                  <img src=\"img/stop_plai_button.svg\" className=\"bluetooth_button\"></img>\n                </div>\n                <div\n                  onClick={async () => {\n                    this.sendCommand(this.state.commandList.find((c) => c.label === \"reboot\").uuid);\n                    await this.wait(0.5);\n                  }}\n                >\n                  <img src=\"img/plai_reboot_button.svg\" className=\"bluetooth_button\"></img>\n                </div>\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"copyright\">PiBox . Open source under GPL-3.0 license.</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n","module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n"],"sourceRoot":""}