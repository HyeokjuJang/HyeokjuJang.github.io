{"version":3,"sources":["uuid.js","WifiSSH.js","BluetoothConnect.js","App.js","index.js"],"names":["module","exports","PREFIX","SERVICE_ID","SERVICE_NAME","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","INPUT","NOTIFY_MESSAGE","INPUT_SEP","CUSTOM_COMMAND_INPUT","CUSTOM_COMMAND_NOTIFY","CUSTOM_INFO_LABEL","CUSTOM_INFO_COUNT","CUSTOM_INFO","CUSTOM_COMMAND_LABEL","CUSTOM_COMMAND_COUNT","WifiSSH","ipAddress","useState","isIpAddress","setIsIpAddress","ip","setIp","useEffect","className","src","title","width","BluetoothConnect","props","i","connectDevice","navigator","bluetooth","requestDevice","filters","services","UUID","then","device","gatt","connect","server","setState","serverId","id","getPrimaryService","service","state","isIphone","console","log","webBleConnect","getCharacteristics","characteristics","a","characteristicsList","isConnected","infoList","preset","uuid","label","value","subscribeCharacteristic","readInfoCharacteristic","filter","indexOf","map","item","push","replace","uuid_label","length","tempCharList","commandList","readCommandLabel","catch","Promise","resolve","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","addEventListener","event","target","msg","notify","show","commandOutputShouldRefresh","commandOutput","output","endsWith","startNotifications","getCharacteristic","characteristic","parseInt","customInfoCount","customCommandCount","customInfoList","index","ending","toString","repeat","customCommandList","all","buf","String","fromCharCode","apply","Uint8Array","inputWifi","key","trim","ssid","password","errMsg","wifiLock","setTimeout","sendArray","str2abs","sendSeparately","sendCommand","slice","array","writeValue","wait","sec","str","val","charCodeAt","valArray","split","bufferArray","splice","join","match","h","supportBluetooth","Boolean","window","loading","charLength","isAndroid","userAgent","toLowerCase","this","href","onClick","placeholder","onChange","type","disabled","size","readOnly","rows","undefined","React","Component","App","ReactDOM","render","document","getElementById","createElement"],"mappings":"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","file":"static/js/main.b5ebcf93.chunk.js","sourcesContent":["module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport default function WifiSSH({ ipAddress }) {\n  const [isIpAddress, setIsIpAddress] = useState(false);\n  const [ip, setIp] = useState(\"\");\n  useEffect(() => {\n    if (ipAddress !== \"\" && ipAddress !== \"...\") {\n      //ip address가 있으면\n      setIsIpAddress(true);\n      setIp(ipAddress);\n    } else {\n      setIsIpAddress(false);\n      setIp(\"\");\n    }\n  }, [ipAddress]);\n\n  useEffect(() => {\n    if (ip !== \"\") {\n    }\n  }, [ip]);\n\n  if (isIpAddress)\n    return (\n      <div className=\"connect-panel panel\">\n        <div className=\"panel-title\">터미널 : http://{ip}:4200</div>\n        <iframe src={\"http://\" + ip + \":4200\"} title=\"터미널\" width=\"100%\"></iframe>\n      </div>\n    );\n  else return null;\n}\n","import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport WifiSSH from \"./WifiSSH\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pisugar\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: null,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      isAndroid: navigator.userAgent.indexOf(\"Android\") > -1 || navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone: navigator.userAgent.indexOf(\"iPhone\") > -1 || navigator.userAgent.indexOf(\"iphone\") > -1\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID]\n          }\n        ]\n      })\n      .then(device => {\n        //GO loading screen\n        return device.gatt.connect();\n      })\n      .then(server => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then(service => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async characteristics => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \"\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\"\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"...\"\n          }\n        ];\n\n        await this.subscribeCharacteristic(UUID.WIFI_NAME, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.IP_ADDRESS, infoList, characteristicsList);\n        await this.readInfoCharacteristic(UUID.DEVICE_MODEL, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.NOTIFY_MESSAGE, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY, infoList, characteristicsList);\n\n        characteristicsList\n          .filter(i => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map(item =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\"\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(infoList[i].uuid_label, infoList, characteristicsList);\n          await this.subscribeCharacteristic(infoList[i].uuid, infoList, characteristicsList);\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter(i => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map(item =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\"\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(commandList[i].uuid, commandList, characteristicsList);\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList\n        });\n        // loading close\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise(resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(label => {\n          let tempCMDList = commandList;\n          tempCMDList.find(i => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise(resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(value => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find(i => i.uuid === uuid)) {\n            tempInfoList.find(i => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find(i => i.uuid_label === uuid)) {\n            tempInfoList.find(i => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList) this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async resolve => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\"characteristicvaluechanged\", event => {\n        if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n          let msg = this.ab2str(event.target.value.buffer);\n          notify.show(msg, \"custom\", 3000, \"teal\");\n        } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n          let msg = this.ab2str(event.target.value.buffer);\n          if (this.state.commandOutputShouldRefresh) {\n            this.setState({ commandOutputShouldRefresh: false, commandOutput: \"\" }, () => {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            });\n          } else {\n            let output = this.state.commandOutput + msg;\n            if (output.endsWith(\"&#&\")) {\n              output = output.replace(\"&#&\", \"\");\n              this.setState({ commandOutputShouldRefresh: true });\n            }\n            this.setState({ commandOutput: output });\n          }\n        } else {\n          let value = this.ab2str(event.target.value.buffer);\n          let tempInfoList = infoList;\n          if (tempInfoList.find(i => i.uuid === uuid)) {\n            tempInfoList.find(i => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find(i => i.uuid_label === uuid)) {\n            tempInfoList.find(i => i.uuid_label === uuid).label = value;\n          }\n          this.setState({ infoList: tempInfoList });\n        }\n      });\n      await this.getCharacteristicInit(uuid, characteristicsList).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = service => {\n    return new Promise(async resolve => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then(characteristic => characteristic.readValue())\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then(value => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then(characteristic => characteristic.readValue())\n        .then(i => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then(value => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending);\n            }\n            let customCommandList = [];\n            for (let index = 0; index < this.state.customCommandCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending);\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map(i => service.getCharacteristic(i)),\n                ...customCommandList.map(i => service.getCharacteristic(i))\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = buf => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = uuid => {\n    return this.state.characteristicsList.find(i => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find(i => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    this.setState(\n      {\n        key: this.state.key.trim().replace(/\\|/g, \"*\"),\n        ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n        password: this.state.password.trim().replace(/\\|/g, \"*\")\n      },\n      () => {\n        let errMsg;\n        if (this.state.ssid === \"\") {\n          errMsg = \"SSID cannot be empty.\";\n        }\n        if (this.state.password === \"\") {\n          errMsg = \"Password cannot be empty.\";\n        }\n        if (errMsg) {\n          notify.show(errMsg, \"custom\", 3000, \"teal\");\n          return;\n        }\n        this.setState({ wifiLock: true }, () =>\n          setTimeout(() => {\n            this.setState({ wifiLock: false });\n          }, 4000)\n        );\n\n        let sendArray = this.str2abs(`${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`);\n        this.sendSeparately(sendArray, UUID.INPUT_SEP);\n      }\n    );\n  };\n  sendCommand = uuid => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async sec => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n  str2abs = str => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function(h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">Cannot find web bluetooth.</div>\n                <p>\n                  Please make sure your device and browser support web bluetooth. Please visit{\" \"}\n                  <a href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\" target=\"_brank\">\n                    Here\n                  </a>{\" \"}\n                  to check web-bluetooth compatibility.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">PIBOX. 라즈베이파이를 블루투스로 찾아 제어할 수 있습니다. </div>\n                <div>\n                  <button onClick={this.connectDevice}>블루투스로 찾기</button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map(item => (\n                  <div key={item.uuid} className=\"info-group\">\n                    <div className=\"label\">{item.label}</div>\n                    <div className=\"value\">{item.value}</div>\n                  </div>\n                ))}\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"wifi-panel panel\">\n                <div className=\"panel-title\">라즈베리파이 와이파이 설정</div>\n                <div>\n                  <input placeholder=\"와이파이 이름(SSID)\" value={this.state.ssid} onChange={value => this.setState({ ssid: value.target.value })} />\n                </div>\n                <div>\n                  <input\n                    placeholder=\"와이파이 비밀번호\"\n                    value={this.state.password}\n                    onChange={value => this.setState({ password: value.target.value })}\n                    type=\"password\"\n                  />\n                </div>\n                <div>\n                  <input placeholder=\"Key (Default: pisugar)\" value={this.state.key} onChange={value => this.setState({ key: value.target.value })} />\n                </div>\n                <div>\n                  <button onClick={this.inputWifi} disabled={this.state.wifiLock}>\n                    와이파이 설정\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"command-panel panel\">\n                <div className=\"panel-title\">커스텀 명령어</div>\n                {this.state.commandList.length > 0 ? (\n                  <div>\n                    <div>\n                      {this.state.commandList.map(item => (\n                        <div key={item.uuid} className=\"button-wrap\">\n                          <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                            {item.label}\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div>\n                      <input placeholder=\"Key (Default: pisugar)\" value={this.state.key} onChange={value => this.setState({ key: value.target.value })} />\n                    </div>\n                    <div>\n                      <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                    </div>\n                  </div>\n                ) : (\n                  <p>커스텀 명령어가 없습니다.</p>\n                )}\n              </div>\n            ) : null}\n          </div>\n          {this.state.isConnected ? (\n            <div className=\"panel-container\">\n              <WifiSSH\n                ipAddress={\n                  this.state.infoList.find(i => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find(i => i.label === \"IP Address\").value\n                }\n              />\n            </div>\n          ) : null}\n          <div className=\"copyright\">PiBox . Open source under GPL-3.0 license.</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n"],"sourceRoot":""}