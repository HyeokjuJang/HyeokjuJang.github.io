{"version":3,"sources":["Tfjs.js","BlockCode.js","PythonCodeBase.js","BluetoothConnect.js","App.js","index.js","uuid.js","assets/images/servomotor.png","assets/images/motor.png","assets/images/led.png","assets/images/none.png"],"names":["TfMain","camera","machineId","console","log","this","infoTexts","data","label","training","videoPlaying","trained","inputFirst","isTraining","numClasses","completeModel","exampleCount","Array","fill","lastChildAddClass","piboxPy","body","document","undefined","current","bindPage","video","createElement","setAttribute","appendChild","i","div","style","marginBottom","button","innerText","addEventListener","infoText","push","id","train","download","navigator","mediaDevices","getUserMedia","width","height","audio","then","stream","srcObject","tf","mobilenet","layer","getLayer","inputs","outputs","output","loadMobileNet","trainable","predict","start","timer","stop","play","requestAnimationFrame","animate","bind","pause","cancelAnimationFrame","trainButton","getElementById","disabled","labels","model","denseLayer1","dense","inputShape","shape","slice","units","activation","use_bias","kernel_initializer","denseLayer2","add","compile","optimizer","adam","loss","metrics","forEach","e","parseInt","oldLabels","concat","dispose","fit","epochs","batchSize","length","callbacks","onBatchEnd","batch","logs","acc","info","history","saveButton","save","http","requestInit","method","headers","machine_id","image","canvasEl","toString","canvas","className","insertBefore","firstChild","childNodes","removeChild","lastChild","ctx","getContext","imageData","ImageData","dataSync","j","putImageData","nowClass","fromPixels","infer","expandDims","toFloat","sub","newX","oldData","draw","logits","predictedClass","as1D","argMax","res","confidence","fontWeight","Math","round","BlockCode","props","useState","setLabels","ch1OutputType","setCh1OutputType","ch2OutputType","setCh2OutputType","ch1OutputAmount","setCh1OutputAmount","ch2OutputAmount","setCh2OutputAmount","tfFunc","setTfFunc","piboxUploadBtnName","setPiboxUploadBtnName","useRef","useEffect","downloadPy","element","front2","setOutputContext","getSetOutput","middleIf","chk","context","index","func","noOutputCh1","noOutputCh2","parseFloat","r","g","b","getIfContext","back","getBackContext","file","Blob","type","href","URL","createObjectURL","piForm","FormData","append","fetch","mode","cache","credentials","redirect","referrer","display","marginRight","ref","onClick","addClass","state","marginLeft","src","nope","alt","servomotor","motor","a","alert","led","map","key","textAlign","verticalAlign","onChange","value","target","newState","backgroundColor","fontSize","borderRadius","defaultValue","color","rgb","onChangeComplete","selectOutputMount","cursor","os","batText","ipAddress","click","downloadBat","BluetoothConnect","connectDevice","bluetooth","requestDevice","filters","services","UUID","SERVICE_ID","device","gatt","connect","server","setState","serverId","getPrimaryService","service","isIphone","webBleConnect","getCharacteristics","characteristics","characteristicsList","isConnected","infoList","preset","uuid","DEVICE_MODEL","WIFI_NAME","IP_ADDRESS","subscribeCharacteristic","readInfoCharacteristic","NOTIFY_MESSAGE","CUSTOM_COMMAND_NOTIFY","filter","indexOf","CUSTOM_INFO_LABEL","item","replace","CUSTOM_INFO","uuid_label","tempCharList","CUSTOM_COMMAND_LABEL","commandList","readCommandLabel","catch","Promise","resolve","getCharacteristicInit","readValue","buffer","ab2str","tempCMDList","find","tempInfoList","event","msg","notify","show","commandOutputShouldRefresh","commandOutput","endsWith","startNotifications","getCharacteristic","PREFIX","CUSTOM_INFO_COUNT","characteristic","customInfoCount","CUSTOM_COMMAND_COUNT","customCommandCount","customInfoList","ending","repeat","customCommandList","all","SERVICE_NAME","INPUT_SEP","CUSTOM_COMMAND_INPUT","buf","String","fromCharCode","apply","Uint8Array","inputWifi","trim","ssid","password","errMsg","wifiLock","setTimeout","sendArray","str2abs","sendSeparately","sendCommand","array","writeValue","wait","sec","str","val","charCodeAt","valArray","split","bufferArray","splice","join","match","h","supportBluetooth","Boolean","window","loading","charLength","isAndroid","userAgent","toLowerCase","placeholder","size","readOnly","rows","React","Component","App","ReactDOM","render","module","exports","INPUT"],"mappings":"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","file":"static/js/main.d658ff27.chunk.js","sourcesContent":["// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as tf from \"@tensorflow/tfjs\";\n\n// Number of classes to classify\nconst NUM_CLASSES = 2;\n// Webcam Image size. Must be 224.\nconst IMAGE_SIZE = 96;\n\nexport class TfMain {\n  constructor(camera, machineId) {\n    console.log(machineId);\n    // Initiate variables\n    this.infoTexts = [];\n    this.data = null;\n    this.label = [];\n    this.training = -1; // -1 when no class is being trained\n    this.videoPlaying = false;\n    this.trained = false;\n    this.inputFirst = true;\n    this.isTraining = false;\n    this.numClasses = NUM_CLASSES;\n    this.completeModel = null;\n    this.exampleCount = new Array(NUM_CLASSES).fill(0);\n    this.lastChildAddClass = null;\n    this.machineId = machineId;\n    this.piboxPy = \"\";\n\n    this.body = document.body;\n    if (camera.current !== undefined) {\n      this.body = camera.current;\n    }\n\n    this.bindPage();\n\n    // Create video element that will contain the webcam image\n    this.video = document.createElement(\"video\");\n    this.video.setAttribute(\"autoplay\", \"\");\n    this.video.setAttribute(\"playsinline\", \"\");\n\n    // Add video element to DOM\n    this.body.appendChild(this.video);\n\n    // Create training buttons and info texts\n    for (let i = 0; i < this.numClasses; i++) {\n      const div = document.createElement(\"div\");\n      this.lastChildAddClass = div;\n      this.body.appendChild(div);\n\n      div.style.marginBottom = \"10px\";\n\n      // Create training button\n      const button = document.createElement(\"button\");\n      button.innerText = \"데이터 추가 - 클래스 \" + (i + 1);\n      div.appendChild(button);\n\n      // Listen for mouse events when clicking the button\n      button.addEventListener(\"mousedown\", () => (this.training = i));\n      button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n      // Create info text\n      const infoText = document.createElement(\"span\");\n      infoText.innerText = \" 추가된 데이터가 없습니다.\";\n      div.appendChild(infoText);\n      this.infoTexts.push(infoText);\n    }\n\n    let div = document.createElement(\"div\");\n    this.lastChildAddClass = div;\n    this.body.appendChild(div);\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    let button = document.createElement(\"button\");\n    button.innerText = \"학습하기\";\n    button.id = \"trainButton\";\n    div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mouseup\", () => this.train());\n\n    div = document.createElement(\"div\");\n    this.body.appendChild(div);\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    button = document.createElement(\"button\");\n    button.innerText = \"학습한 모델 저장\";\n    button.id = \"modelSave\";\n    div.appendChild(button);\n\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mouseup\", () => {\n      this.download();\n    });\n\n    // Setup webcam\n    navigator.mediaDevices.getUserMedia({ video: { width: IMAGE_SIZE, height: IMAGE_SIZE }, audio: false }).then((stream) => {\n      this.video.srcObject = stream;\n      this.video.width = IMAGE_SIZE;\n      this.video.height = IMAGE_SIZE;\n\n      this.video.addEventListener(\"playing\", () => (this.videoPlaying = true));\n      this.video.addEventListener(\"paused\", () => (this.videoPlaying = false));\n    });\n  }\n\n  addTrainingData(label) {\n    this.training = label;\n  }\n\n  async loadMobileNet() {\n    const mobilenet = await tf.loadLayersModel(`./assets/${IMAGE_SIZE}_0.35/model.json`);\n    const layer = mobilenet.getLayer(IMAGE_SIZE === 160 ? \"global_average_pooling2d\" : \"global_average_pooling2d_1\");\n    return tf.model({ inputs: mobilenet.inputs, outputs: layer.output });\n  }\n\n  async bindPage() {\n    this.mobilenet = await this.loadMobileNet();\n    this.mobilenet.trainable = false;\n    this.mobilenet.predict(tf.zeros([1, IMAGE_SIZE, IMAGE_SIZE, 3]));\n\n    //tf.setBackend(\"webgl\");\n    //console.log(this.model.summary());\n\n    this.start();\n  }\n\n  start() {\n    if (this.timer) {\n      this.stop();\n    }\n    this.video.play();\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  stop() {\n    this.video.pause();\n    cancelAnimationFrame(this.timer);\n  }\n\n  train() {\n    if (!this.isTraining) {\n      const trainButton = document.getElementById(\"trainButton\");\n      trainButton.innerText = \"잠시 기다려주세요...\";\n      trainButton.disabled = true;\n      console.log(\"train start\");\n\n      this.isTraining = true;\n      let labels = null;\n      this.model = tf.sequential();\n      this.denseLayer1 = tf.layers.dense({\n        inputShape: this.mobilenet.outputs[0].shape.slice(1),\n        units: 100,\n        activation: \"relu\",\n        use_bias: true,\n        kernel_initializer: \"varianceScaling\",\n      });\n      this.denseLayer2 = tf.layers.dense({ units: this.numClasses, activation: \"softmax\", use_bias: false, kernel_initializer: \"varianceScaling\" });\n\n      this.model.add(this.denseLayer1);\n      this.model.add(this.denseLayer2);\n      this.model.compile({\n        optimizer: tf.train.adam(0.0001),\n        loss: \"categoricalCrossentropy\",\n        metrics: [\"accuracy\"],\n      });\n\n      this.label.forEach((e) => {\n        const label = tf.oneHot(tf.tensor1d([parseInt(e)], \"int32\"), this.numClasses);\n        if (labels === null) labels = label;\n        else {\n          const oldLabels = labels;\n          labels = oldLabels.concat(label, 0);\n          oldLabels.dispose();\n        }\n      });\n      //this.data.print();\n      //labels.print();\n      function onBatchEnd(batch, logs) {\n        console.log(\"Accuracy\", logs.acc);\n      }\n      this.model\n        .fit(this.data, labels, {\n          epochs: 20,\n          batchSize: parseInt(this.label.length * 0.4),\n          callbacks: { onBatchEnd },\n        })\n        .then((info) => {\n          console.log(\"Final accuracy\", info.history.acc);\n          this.trained = true;\n          this.isTraining = false;\n          trainButton.innerText = \"학습하기\";\n          trainButton.disabled = false;\n        });\n    }\n  }\n\n  async download() {\n    const saveButton = document.getElementById(\"modelSave\");\n    saveButton.innerText = \"잠시 기다려주세요...\";\n    saveButton.disabled = true;\n    this.completeModel = tf.sequential();\n    this.completeModel.add(this.mobilenet);\n    this.completeModel.add(this.model);\n\n    //await this.completeModel.save(\"downloads://model\");\n    await this.completeModel.save(\n      tf.io.http(\"https://tfjson-to-tflite.unicityclean.com/upload\", {\n        //tf.io.http(\"http://tfjson-to-tflite-2053599458.ap-northeast-2.elb.amazonaws.com/upload\", {\n        requestInit: { method: \"POST\", headers: { machine_id: this.machineId } },\n      })\n    );\n\n    saveButton.innerText = \"학습한 모델 저장\";\n    saveButton.disabled = false;\n  }\n\n  async draw(image, label) {\n    const [width, height] = [IMAGE_SIZE, IMAGE_SIZE];\n    const canvasEl = document.getElementById(\"canvas-\" + label.toString());\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = width;\n    canvas.height = height;\n    canvas.className = \"cameraData\";\n    canvasEl.insertBefore(canvas, canvasEl.firstChild);\n    if (canvasEl.childNodes.length > 9) canvasEl.removeChild(canvasEl.lastChild);\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = new ImageData(width, height);\n    const data = image.dataSync();\n    for (let i = 0; i < height * width; ++i) {\n      const j = i * 4;\n      imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\n      imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\n      imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\n      imageData.data[j + 3] = 255;\n    }\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  addClass() {\n    this.exampleCount.push(0);\n    this.numClasses += 1;\n    const div = document.createElement(\"div\");\n\n    this.body.insertBefore(div, this.lastChildAddClass);\n\n    div.style.marginBottom = \"10px\";\n\n    // Create training button\n    const button = document.createElement(\"button\");\n    button.innerText = \"데이터 추가 - 클래스 \" + this.numClasses;\n    div.appendChild(button);\n    const nowClass = this.numClasses;\n    // Listen for mouse events when clicking the button\n    button.addEventListener(\"mousedown\", () => (this.training = nowClass - 1));\n    button.addEventListener(\"mouseup\", () => (this.training = -1));\n\n    // Create info text\n    const infoText = document.createElement(\"span\");\n    infoText.innerText = \" 추가된 데이터가 없습니다.\";\n    div.appendChild(infoText);\n    this.infoTexts.push(infoText);\n  }\n\n  async animate() {\n    if (this.videoPlaying) {\n      // Get image data from video element\n      const image = tf.browser.fromPixels(this.video);\n\n      let logits;\n      // 'conv_preds' is the logits activation of MobileNet.\n      const infer = () => tf.tidy(() => this.model.predict(this.mobilenet.predict(image.expandDims(0).toFloat().div(127).sub(1))));\n\n      // Train class if one of the buttons is held down\n      if (this.training !== -1) {\n        const newX = image.expandDims(0).toFloat().div(127).sub(1);\n        // Add current image to classifier\n        if (!this.inputFirst) {\n          const oldData = this.data;\n          this.data = oldData.concat(this.mobilenet.predict(newX), 0);\n          this.label.push(this.training);\n          oldData.dispose();\n        } else {\n          this.data = this.mobilenet.predict(newX);\n          this.label.push(this.training);\n          this.inputFirst = false;\n        }\n        await this.draw(newX, this.training);\n        this.exampleCount[this.training] += 1;\n        newX.dispose();\n      }\n\n      //if (hasClass(this.data.map(e => e.length)) > 0) {\n      if (this.trained) {\n        // If classes have been added run predict\n        logits = infer();\n        const predictedClass = logits.as1D().argMax();\n\n        const res = (await predictedClass.data())[0];\n        const confidence = await logits.data();\n        for (let i = 0; i < this.numClasses; i++) {\n          // Make the predicted class bold\n          if (res === i) {\n            this.infoTexts[i].style.fontWeight = \"bold\";\n          } else {\n            this.infoTexts[i].style.fontWeight = \"normal\";\n          }\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples - ${Math.round(confidence[i] * 100)}%`;\n          }\n        }\n        predictedClass.dispose();\n      } else {\n        for (let i = 0; i < this.numClasses; i++) {\n          // The number of examples for each class\n\n          // Update info text\n          if (this.exampleCount[i] > 0) {\n            this.infoTexts[i].innerText = ` ${this.exampleCount[i]} examples`;\n          }\n        }\n      }\n\n      // Dispose image when done\n      image.dispose();\n      if (logits != null) {\n        logits.dispose();\n      }\n    }\n    this.timer = requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\n//window.addEventListener(\"load\", () => new Main());\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { SliderPicker } from \"react-color\";\nimport { TfMain } from \"./Tfjs\";\nimport servomotor from \"./assets/images/servomotor.png\";\nimport motor from \"./assets/images/motor.png\";\nimport led from \"./assets/images/led.png\";\nimport nope from \"./assets/images/none.png\";\nimport { front, middle } from \"./PythonCodeBase\";\n\nexport default function BlockCode(props) {\n  let fileReader;\n  const [labels, setLabels] = useState([\"클래스 1\", \"클래스 2\"]);\n  const [ch1OutputType, setCh1OutputType] = useState(0);\n  const [ch2OutputType, setCh2OutputType] = useState(0);\n  const [ch1OutputAmount, setCh1OutputAmount] = useState([]);\n  const [ch2OutputAmount, setCh2OutputAmount] = useState([]);\n  const [tfFunc, setTfFunc] = useState(null);\n  const [piboxUploadBtnName, setPiboxUploadBtnName] = useState(\"블록코드 업로드\");\n  const camera = useRef(\"\");\n\n  useEffect(() => {\n    if (camera.current !== undefined && props.machineId !== \"\") {\n      setTfFunc(new TfMain(camera, props.machineId, downloadPy));\n      setCh1OutputAmount(new Array(2).fill(\"\"));\n      setCh2OutputAmount(new Array(2).fill(\"\"));\n    } // eslint-disable-next-line\n  }, [camera, props.machineId]);\n\n  const uploadFile = (file) => {\n    // 파일이 입력되면 먼저 여기로 들어오게된다.\n    // 파일입력이 없음에도 들어오면 바로 컷\n    if (file === undefined) {\n      return;\n    }\n\n    fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      const content = fileReader.result;\n      const result = [];\n      content.split(\"\\n\").forEach((label) => {\n        result.push(label.substr(2));\n        console.log(label);\n      });\n      if (result[result.length - 1] === \"\") {\n        result.pop();\n      }\n      setLabels(result);\n      setCh1OutputType(0);\n      setCh2OutputType(0);\n      setCh1OutputAmount(new Array(result.length).fill(\"\"));\n      setCh2OutputAmount(new Array(result.length).fill(\"\"));\n    };\n    fileReader.readAsText(file);\n  };\n\n  function addClass() {\n    tfFunc.addClass();\n    setLabels((state) => [...state, `클래스 ${labels.length + 1}`]);\n    setCh1OutputAmount((state) => [...state, \"\"]);\n    setCh2OutputAmount((state) => [...state, \"\"]);\n  }\n\n  function getSetOutput() {\n    let setOutputContext = `GPIO.setmode(GPIO.BCM)\npwm = pigpio.pi() \n    `;\n    if (ch1OutputType === 1)\n      setOutputContext += `\npwm.set_mode(18, pigpio.OUTPUT)\n`;\n    // 서보모터\n    else if (ch1OutputType === 2)\n      setOutputContext += `\nGPIO.setup(18,GPIO.OUT) # Channel 1 Speed\nGPIO.setup(23,GPIO.OUT) # Direction of Channel 1\nGPIO.output(23,0) \nm1=GPIO.PWM(18,50)\nm1.start(0)\n`;\n    else if (ch1OutputType === 3 && ch2OutputType !== 3)\n      setOutputContext += `\npix1 = neopixel.NeoPixel(board.D18,12)\n`;\n    if (ch2OutputType === 1)\n      setOutputContext += `\npwm.set_mode(12, pigpio.OUTPUT)\n`;\n    // 서보모터\n    else if (ch2OutputType === 2)\n      setOutputContext += `\nGPIO.setup(12,GPIO.OUT) # Channel 2 Speed\nGPIO.setup(25,GPIO.OUT)\nGPIO.output(25,0) # Direction of Channel 2\nm2=GPIO.PWM(12,50)\nm2.start(0)\n`;\n    else if (ch2OutputType === 3 && ch1OutputType !== 3)\n      setOutputContext += `\npix2 = neopixel.NeoPixel(board.D12,12)\n`;\n    return setOutputContext;\n  }\n  function getIfContext() {\n    let chk = 0;\n    let context = `    # From here. the block code\n    resultIndex = np.argmax(result)\n`;\n    labels.forEach((label, index) => {\n      let func = \"\";\n      let noOutputCh1 = false;\n      let noOutputCh2 = false;\n      if (ch1OutputType === 0) noOutputCh1 = true;\n      else if (ch1OutputType === 1)\n        func += `pwm.set_servo_pulsewidth(18,${(parseFloat(ch1OutputAmount[index]) / 180) * 2000 + 500}) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      // 서보모터\n      else if (ch1OutputType === 2)\n        func += `m1.ChangeDutyCycle(${ch1OutputAmount[index][1]})\n        GPIO.output(23,${ch1OutputAmount[index][0]}) # Control direction\n        ${\n          ch2OutputType === 2\n            ? \"\"\n            : `time.sleep(${ch1OutputAmount[index][2]})\n        m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)\n        `\n        }\n        `;\n      // 모터\n      else if (ch1OutputType === 3)\n        func += `pix1.fill((${ch1OutputAmount[index].r},${ch1OutputAmount[index].g},${ch1OutputAmount[index].b}))\n        pix1.show()\n        `;\n      // LED\n      else noOutputCh1 = true;\n      if (ch2OutputType === 0) noOutputCh2 = true;\n      else if (ch2OutputType === 1)\n        func += `pwm.set_servo_pulsewidth(12,${(parseFloat(ch2OutputAmount[index]) / 180) * 2000 + 500}) # 500 => 0 deg / 1500 => 90 deg / 2500 => 180 deg\n        `;\n      // 서보모터\n      else if (ch2OutputType === 2)\n        func += `m2.ChangeDutyCycle(${ch2OutputAmount[index][1]})\n        GPIO.output(25,${ch2OutputAmount[index][0]}) # Control direction\n        time.sleep(${ch2OutputAmount[index][2]})\n        ${\n          ch1OutputType === 2\n            ? `m1.ChangeDutyCycle(0)\n        GPIO.output(23,0)`\n            : \"\"\n        }\n        m2.ChangeDutyCycle(0)\n        GPIO.output(25,0)\n        `;\n      // 모터\n      else if (ch2OutputType === 3)\n        func += `pix2.fill((${ch2OutputAmount[index].r},${ch2OutputAmount[index].g},${ch2OutputAmount[index].b}))\n        pix2.show()\n        `;\n      // LED\n      else noOutputCh2 = true;\n      if (noOutputCh1 === true && noOutputCh2 === true) return;\n      if (chk === 0) {\n        context += `\n    if `;\n        chk = 1;\n      } else\n        context += `\n    elif `;\n      context += `resultIndex == ${index}:\n        ${func}\n        `;\n    });\n    return context;\n  }\n  function getBackContext() {\n    let back = `\n# Clean up\ncv2.destroyAllWindows()\nvideostream.stop()\n`;\n\n    if (ch1OutputType === 1) {\n      back += `p1.stop()\n`;\n    }\n    if (ch1OutputType === 2) {\n      back += `m1.stop()\n`;\n    }\n    if (ch2OutputType === 1) {\n      back += `p2.stop()\n`;\n    }\n    if (ch2OutputType === 2) {\n      back += `m2.stop()\n`;\n    }\n    back += `GPIO.cleanup()\n`;\n    return back;\n  }\n  const downloadPy = () => {\n    setPiboxUploadBtnName(\"잠시만 기다려주세요...\");\n\n    const element = document.createElement(\"a\");\n    const front2 = getSetOutput();\n    const middleIf = getIfContext();\n    const back = getBackContext();\n    const file = new Blob([front, front2, middle, middleIf, back], {\n      type: \"text/plain\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"pibox.py\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    //element.click();\n    const piForm = new FormData();\n    piForm.append(\"pibox\", file, \"pibox.py\");\n    fetch(\"https://tfjson-to-tflite.unicityclean.com/pibox\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        machine_id: props.machineId,\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: piForm,\n    }).then(() => {\n      setPiboxUploadBtnName(\"블록코드 업로드\");\n    });\n    return file;\n  };\n\n  function downloadBat(os) {\n    const element = document.createElement(\"a\");\n    const batText = `sshpass -praspberry scp -o StrictHostKeyChecking=no ./model.tflite pi@${props.ipAddress}:/home/pi/tflite/model.tflite\nsshpass -praspberry scp -o StrictHostKeyChecking=no ./labels.txt pi@${props.ipAddress}:/home/pi/tflite/labels.txt\nsshpass -praspberry scp -o StrictHostKeyChecking=no ./pibox.py pi@${props.ipAddress}:/home/pi/tflite/pibox.py\n`;\n    const file = new Blob([batText], {\n      type: \"text/plain\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = os === \"WIN\" ? \"upload.bat\" : \"upload.sh\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  const selectOutputMount = (index) => (\n    <div className=\"showOutputType\" key={index}>\n      <span>\n        <h4>채널 1</h4>\n        {ch1OutputType === 1 ? (\n          <div className=\"servomotor\">\n            <p>몇 도 움직일까요? ( 0 ~ 180 )</p>\n            <input\n              style={{ height: 30 }}\n              onChange={(e) => {\n                let value = e.target.value;\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  if (value === \"\") value = 0;\n                  newState[index] = parseInt(value);\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch1OutputAmount[index]}\n            />\n          </div>\n        ) : ch1OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{ backgroundColor: \"#ffffff\", fontSize: 15, borderRadius: 2 }}\n              onChange={(e) => {\n                const value = e.target.value;\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch1OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh1OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], value, newState[index][2]];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 => 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh1OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], newState[index][1], value];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch1OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch1OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <SliderPicker\n              color={ch1OutputAmount[index]}\n              onChange={(value) => {\n                setCh1OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ display: \"flex\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n      <span>\n        <h4>채널 2</h4>\n        {ch2OutputType === 1 ? (\n          <div className=\"servomotor\">\n            몇 도 움직일까요? ( 0 ~ 180 )<br />\n            <input\n              style={{ height: 30 }}\n              onChange={(e) => {\n                let value = e.target.value;\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  if (value === \"\") value = 0;\n                  newState[index] = parseInt(value);\n                  return newState;\n                });\n              }}\n              type=\"number\"\n              value={ch2OutputAmount[index]}\n            />\n          </div>\n        ) : ch2OutputType === 2 ? (\n          <div style={{ display: \"inline\" }}>\n            <select\n              style={{ backgroundColor: \"#ffffff\", fontSize: 15, borderRadius: 2 }}\n              onChange={(e) => {\n                const value = e.target.value;\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = [value, newState[index][1], newState[index][2]];\n                  return newState;\n                });\n              }}\n              defaultValue={ch2OutputAmount[index][0]}\n            >\n              <option value=\"0\">정방향</option>\n              <option value=\"1\">역방향</option>\n            </select>\n            <div style={{ display: \"flex\" }}>\n              <div>\n                <h5 style={{ textAlign: \"center\" }}>속도 ( 0 ~ 100 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh2OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], value, newState[index][2]];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][1]}\n                />\n              </div>\n              <div style={{ marginLeft: \"10%\" }}>\n                <h5 style={{ textAlign: \"center\" }}>시간 ( 1 => 1초 ) </h5>\n                <input\n                  style={{ height: 30 }}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    setCh2OutputAmount((state) => {\n                      const newState = [...state];\n                      newState[index] = [newState[index][0], newState[index][1], value];\n                      return newState;\n                    });\n                  }}\n                  type=\"number\"\n                  value={ch2OutputAmount[index][2]}\n                />\n              </div>\n            </div>\n          </div>\n        ) : ch2OutputType === 3 ? (\n          <div style={{ display: \"inline\" }}>\n            <SliderPicker\n              color={ch2OutputAmount[index]}\n              onChangeComplete={(value) => {\n                setCh2OutputAmount((state) => {\n                  const newState = [...state];\n                  newState[index] = value.rgb;\n                  return newState;\n                });\n              }}\n            />\n          </div>\n        ) : (\n          <div style={{ display: \"flex\" }}>출력 종류를 먼저 선택하세요</div>\n        )}\n      </span>\n    </div>\n  );\n\n  const selectOutputType = () => (\n    //아웃풋 종류 보여줌\n    <div style={{ display: \"flex\" }}>\n      <div className=\"blocks\" style={{ display: \"inline\", width: \"49%\", marginRight: \"1%\" }}>\n        <div className=\"block\" ref={camera}></div>\n        <div className=\"block\">\n          <button onClick={() => downloadPy()}>{piboxUploadBtnName}</button>\n        </div>\n        <div className=\"block\">\n          <button onClick={() => addClass()}>클래스 추가 +</button>\n        </div>\n      </div>\n      <div className=\"blocks\" style={{ display: \"inline\", width: \"49%\", marginLeft: \"1%\" }}>\n        <div className=\"block\">\n          <div>\n            <h4>채널 1 출력</h4>\n            <div className=\"pics\">\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh1OutputType(0);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                }}\n              >\n                <img className={ch1OutputType === 0 ? \"outputPicSel\" : \"outputPic\"} src={nope} alt=\"no output\" />\n              </div>\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh1OutputType(1);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }}\n              >\n                <img className={ch1OutputType === 1 ? \"outputPicSel\" : \"outputPic\"} src={servomotor} alt=\"servomotor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  setCh1OutputType(2);\n                  setCh1OutputAmount((state) => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch1OutputType === 2 ? \"outputPicSel\" : \"outputPic\"} src={motor} alt=\"motor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  if (ch2OutputType !== 3) {\n                    setCh1OutputType(3);\n                    setCh1OutputAmount((state) => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1,\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch1OutputType === 3 ? \"outputPicSel\" : \"outputPic\"} src={led} alt=\"led\" />\n              </div>\n            </div>\n          </div>\n          <div>\n            <h4>채널 2 출력</h4>\n            <div className=\"pics\">\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh2OutputType(0);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"\");\n                  });\n                }}\n              >\n                <img className={ch2OutputType === 0 ? \"outputPicSel\" : \"outputPic\"} src={nope} alt=\"no output\" />\n              </div>\n              <div\n                className=\"outputType\"\n                onClick={() => {\n                  setCh2OutputType(1);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill(\"0\");\n                  });\n                }}\n              >\n                <img className={ch2OutputType === 1 ? \"outputPicSel\" : \"outputPic\"} src={servomotor} alt=\"servomotor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  setCh2OutputType(2);\n                  setCh2OutputAmount((state) => {\n                    return new Array(state.length).fill([\"0\", \"50\", \"0.5\"]);\n                  });\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch2OutputType === 2 ? \"outputPicSel\" : \"outputPic\"} src={motor} alt=\"motor\" />\n              </div>\n\n              <div\n                onClick={() => {\n                  if (ch1OutputType !== 3) {\n                    setCh2OutputType(3);\n                    setCh2OutputAmount((state) => {\n                      return new Array(state.length).fill({\n                        r: 255,\n                        g: 255,\n                        b: 255,\n                        a: 1,\n                      });\n                    });\n                  } else {\n                    alert(\"LED 출력은 1개의 채널만 가능합니다.\");\n                  }\n                }}\n                className=\"outputType\"\n              >\n                <img className={ch2OutputType === 3 ? \"outputPicSel\" : \"outputPic\"} src={led} alt=\"led\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"connect-panel panel\">\n      <div className=\"panel-title\">블록 코드</div>\n      {false ? (\n        <div>\n          <p>\n            라벨 : <input type=\"file\" accept=\".txt\" onChange={(e) => uploadFile(e.target.files[0])} />\n          </p>\n        </div>\n      ) : null}\n      <div className=\"label-output\">\n        <div className=\"blocks-container\">\n          <div>{selectOutputType()}</div>\n\n          <div>\n            {labels.map((label, index) => (\n              <div className=\"blocks\" key={label}>\n                <div className=\"block\">{label}</div>\n\n                <div>\n                  <span style={{ display: \"inline-block\", width: \"50%\", textAlign: \"center\" }} id={\"canvas-\" + index.toString()}></span>\n                  <span style={{ display: \"inline-block\", width: \"50%\", verticalAlign: \"top\" }}>{selectOutputMount(index)}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div>\n        <h4>\n          블록이 완성되었다면{\" \"}\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadPy()}>\n            코드 다운로드\n          </span>{\" \"}\n        </h4>\n      </div>\n      <div>\n        <h4>\n          <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => downloadBat(\"WIN\")}>\n            코드 업로드 프로그램(윈도우)\n          </span>\n          <br />\n          코드와 업로드 프로그램 파일은 모델파일을 압축푼 폴더와 같은 폴더에 넣어주세요.\n        </h4>\n        <p>\n          초기 비밀번호 : raspberry\n          <br />\n        </p>\n      </div>\n    </div>\n  );\n}\n","export const front = `\n## pibox TFLITE\nimport os\nimport argparse\nimport cv2\nimport numpy as np\nimport sys\nimport time\nfrom threading import Thread\nimport importlib.util\n\n## 출력을 위한 import\nimport RPi.GPIO as GPIO\nimport pigpio\nimport time\nimport board\nimport neopixel\n\n`;\n\nexport const middle = `\n# 카메라 오브젝트\nclass VideoStream:\n    def __init__(self,resolution=(320,240),framerate=3): # 원래는 640,480 그리고 30 framerate\n        # 파이 카메라를 시작합니다.\n        self.stream = cv2.VideoCapture(0)\n        ret = self.stream.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))\n        ret = self.stream.set(3,resolution[0])\n        ret = self.stream.set(4,resolution[1])\n            \n        # 첫번째 사진을 불러옵니다.\n        (self.grabbed, self.frame) = self.stream.read()\n\n\t    # 멈출 수 있도록 stopped를 설정해줍니다.\n        self.stopped = False\n\n    def start(self):\n\t    # 비디오 스트림에서 프레임을 읽어오는 쓰레드를 시작합니다.\n        Thread(target=self.update,args=()).start()\n        return self\n\n    def update(self):\n        # 쓰레드가 멈출 때 까지 계속 스트림을 실행합니다.\n        while True:\n            # 카메라가 멈추면 스트림을 멈춥니다.\n            if self.stopped:\n                # 카메라 리소스를 닫습니다.\n                self.stream.release()\n                return\n\n            # 멈춘것이 아니라면 프레임을 가져옵니다.\n            (self.grabbed, self.frame) = self.stream.read()\n\n    def read(self):\n\t    # 가장 최근 프레임을 가져옵니다.\n        return self.frame\n\n    def stop(self):\n\t    # 카메라 쓰레드를 정지합니다.\n        self.stopped = True\n\n# 입력 파라미터를 정의합니다.\nparser = argparse.ArgumentParser()\nparser.add_argument('--modeldir', help='Folder the .tflite file is located in',\n                    required=True)\nparser.add_argument('--graph', help='Name of the .tflite file, if different than model.tflite',\n                    default='model.tflite')\nparser.add_argument('--labels', help='Name of the labelmap file, if different than labels.txt',\n                    default='labels.txt')\nparser.add_argument('--threshold', help='Minimum confidence threshold for displaying detected objects',\n                    default=0.5)\nparser.add_argument('--resolution', help='Desired webcam resolution in WxH. If the webcam does not support the resolution entered, errors may occur.',\n                    default='320x240') # 원래는 1280x720 속도를 위해 낮춤\nparser.add_argument('--edgetpu', help='Use Coral Edge TPU Accelerator to speed up detection',\n                    action='store_true',default=False)\n\nargs = parser.parse_args()\n\nMODEL_NAME = args.modeldir\nGRAPH_NAME = args.graph\nLABELMAP_NAME = args.labels\nmin_conf_threshold = float(args.threshold)\nresW, resH = args.resolution.split('x')\nimW, imH = int(resW), int(resH) # 라즈베리파이 제로 + 파이카메라에서는 224,224 가 아주 쬐에에에끔 빠릅니다.\nuse_TPU = args.edgetpu\n\n# 텐서플로우 라이브러리를 가져옵니다.\n# 텐서플로우 라이브러리가 없다면, tflite_runtime 을 가져옵니다.\n# 코랄 TPU를 사용한다면, TPU 용 라이브러리를 가져옵니다. (import the load_delegate library)\npkg = importlib.util.find_spec('tensorflow')\nif pkg is None:\n    from tflite_runtime.interpreter import Interpreter\n    if use_TPU:\n        from tflite_runtime.interpreter import load_delegate\nelse:\n    from tensorflow.lite.python.interpreter import Interpreter\n    if use_TPU:\n        from tensorflow.lite.python.interpreter import load_delegate\n\n# TPU를 사용한다면 TPU 모델을 가져옵니다.\nif use_TPU:\n    # 'edgetpu.tflite'가 TPU를 사용할 때의 기본 경로입니다.\n    if (GRAPH_NAME == 'model.tflite'):\n        GRAPH_NAME = 'edgetpu.tflite'       \n\n# 작업 경로와 현재 경로를 일치시킵니다.\nCWD_PATH = os.getcwd()\n\n# 모델 경로를 설정합니다.\nPATH_TO_CKPT = os.path.join(CWD_PATH,MODEL_NAME,GRAPH_NAME)\n\n# 라벨 경로를 설정합니다.\nPATH_TO_LABELS = os.path.join(CWD_PATH,MODEL_NAME,LABELMAP_NAME)\n\n# 라벨을 가져옵니다.\nwith open(PATH_TO_LABELS, 'r') as f:\n    labels = [line.strip() for line in f.readlines()]\n\n# 첫번째 라벨이 ??? 인 경우가 있어 그럴 경우 제거합니다.\nif labels[0] == '???':\n    del(labels[0])\n\n# 텐서플로우 모델을 가져옵니다. TPU를 쓸 경우 TPU 모델로 가져옵니다.\nif use_TPU:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT,\n                              experimental_delegates=[load_delegate('libedgetpu.so.1.0')])\n    print(PATH_TO_CKPT)\nelse:\n    interpreter = Interpreter(model_path=PATH_TO_CKPT)\n\ninterpreter.allocate_tensors()\n\n# 로드된 모델의 정보를 가져옵니다.\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nheight = input_details[0]['shape'][1]\nwidth = input_details[0]['shape'][2]\n#print(\"가로\")\n#print(width)\n#print(\"세로\")\n#print(height)\n# 입력이 소수인지 아닌지 판단합니다.\nfloating_model = (input_details[0]['dtype'] == np.float32)\n\ninput_mean = 127.5\ninput_std = 127.5\n\n# 연산 프레임을 체크하기 위한 변수를 할당합니다.\nframe_rate_calc = 1\nfreq = cv2.getTickFrequency()\n\n# 상단에서 정의한 비디오 스트림을 시작합니다.\nvideostream = VideoStream(resolution=(imW,imH),framerate=30).start() \ntime.sleep(1)\n\n# 프레임으로 연산을 시작합니다.\nwhile True:\n\n    # 연산 프레임을 위한 시간 체크 변수를 할당합니다.\n    t1 = cv2.getTickCount()\n\n    # 비디오스트림에서 프레임을 읽어옵니다.\n    frame1 = videostream.read()\n\n    # 입력에 넣을 수 있도록 해상도를 변경합니다.\n    frame = frame1.copy()\n    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n    # 위에서 input을 224,224로 설정했다면 아래 줄은 넘어가도 됩니다..\n    frame_resized = cv2.resize(frame_rgb, (width, height)) \n    input_data = np.expand_dims(frame_resized, axis=0)\n\n    # 입력이 소수라면 소수로 바꿔줍니다.\n    if floating_model:\n        input_data = (np.float32(input_data) - input_mean) / input_std\n\n    # 로드된 모델에 입력을 넣어 결과를 가져옵니다.\n    interpreter.set_tensor(input_details[0]['index'],input_data)\n    interpreter.invoke()\n    result=interpreter.get_tensor(output_details[0]['index'])[0]\n    print(labels[np.argmax(result)])\n    #print(result)\n    # 초당 연산 프레임을 계산합니다.\n    t2 = cv2.getTickCount()\n    time1 = (t2-t1)/freq\n    frame_rate_calc= 1/time1\n    #print(frame_rate_calc)\n`;\n","import React from \"react\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport WifiSSH from \"./WifiSSH\";\nimport BlockCode from \"./BlockCode\";\nimport \"./App.css\";\nimport UUID from \"./uuid\";\n\nexport default class BluetoothConnect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supportBluetooth: Boolean(window.navigator.bluetooth),\n      isConnected: false,\n      serverId: \"\",\n      ssid: \"\",\n      password: \"\",\n      key: \"pibox\",\n      wifiLock: false,\n      characteristicsList: [],\n      infoList: [],\n      commandList: [],\n      commandOutput: \"\",\n      commandOutputShouldRefresh: false,\n      loading: null,\n      charLength: -1,\n      customInfoCount: 0,\n      customCommandCount: 0,\n      isAndroid: navigator.userAgent.indexOf(\"Android\") > -1 || navigator.userAgent.indexOf(\"Adr\") > -1,\n      isIphone: navigator.userAgent.indexOf(\"iPhone\") > -1 || navigator.userAgent.indexOf(\"iphone\") > -1,\n    };\n    for (let i in UUID) {\n      UUID[i] = UUID[i].toLowerCase();\n    }\n  }\n\n  componentDidMount() {}\n\n  connectDevice = () => {\n    navigator.bluetooth\n      .requestDevice({\n        filters: [\n          {\n            services: [UUID.SERVICE_ID],\n          },\n        ],\n      })\n      .then((device) => {\n        //GO loading screen\n        return device.gatt.connect();\n      })\n      .then((server) => {\n        this.setState({ serverId: server.device.id });\n        return server.getPrimaryService(UUID.SERVICE_ID);\n      })\n      .then((service) => {\n        if (this.state.isIphone) {\n          // iOS webBLE does not support getCharacteristics()\n          console.log(\"ios webBLE\");\n          return this.webBleConnect(service);\n        } else {\n          return service.getCharacteristics();\n        }\n      })\n      .then(async (characteristics) => {\n        console.log(\"Connected!\");\n        let characteristicsList = characteristics;\n        this.setState({ isConnected: true });\n        let infoList = [\n          {\n            preset: true,\n            uuid: \"\",\n            label: \"Device ID\",\n            value: this.state.serverId,\n          },\n          {\n            preset: true,\n            uuid: UUID.DEVICE_MODEL,\n            label: \"Model\",\n            value: \" \",\n          },\n          {\n            preset: true,\n            uuid: UUID.WIFI_NAME,\n            label: \"Wifi\",\n            value: \"...\",\n          },\n          {\n            preset: true,\n            uuid: UUID.IP_ADDRESS,\n            label: \"IP Address\",\n            value: \"...\",\n          },\n        ];\n\n        await this.subscribeCharacteristic(UUID.WIFI_NAME, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.IP_ADDRESS, infoList, characteristicsList);\n        await this.readInfoCharacteristic(UUID.DEVICE_MODEL, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.NOTIFY_MESSAGE, infoList, characteristicsList);\n        await this.subscribeCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY, infoList, characteristicsList);\n\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_INFO_LABEL) >= 0)\n          .map((item) =>\n            infoList.push({\n              uuid: item.uuid.replace(UUID.CUSTOM_INFO_LABEL, UUID.CUSTOM_INFO),\n              uuid_label: item.uuid,\n              label: \"-\",\n              value: \"\",\n            })\n          );\n        for (let i = 0; i < infoList.length; i++) {\n          if (infoList[i].preset) continue;\n          await this.readInfoCharacteristic(infoList[i].uuid_label, infoList, characteristicsList);\n          await this.subscribeCharacteristic(infoList[i].uuid, infoList, characteristicsList);\n        }\n        let tempCharList = [];\n        characteristicsList\n          .filter((i) => i.uuid.indexOf(UUID.CUSTOM_COMMAND_LABEL) >= 0)\n          .map((item) =>\n            tempCharList.push({\n              uuid: item.uuid,\n              label: \"...\",\n            })\n          );\n        let commandList = tempCharList;\n        for (let i = 0; i < commandList.length; i++) {\n          await this.readCommandLabel(commandList[i].uuid, commandList, characteristicsList);\n        }\n        this.setState({\n          characteristicsList: characteristicsList,\n          infoList: infoList,\n          commandList: commandList,\n        });\n        // loading close\n      })\n      .catch(console.log);\n  };\n\n  readCommandLabel = (uuid, commandList, characteristicsList) => {\n    //console.log(\"readCommandLabel\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((label) => {\n          let tempCMDList = commandList;\n          tempCMDList.find((i) => i.uuid === uuid).label = label;\n          this.setState({ commandList: tempCMDList }, resolve());\n        });\n    });\n  };\n\n  readInfoCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"readInfoCharacteristic\");\n    return new Promise((resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList)\n        .readValue()\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then((value) => {\n          const tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          if (tempInfoList !== this.state.infoList) this.setState({ infoList: tempInfoList }, resolve());\n          else resolve();\n        });\n    });\n  };\n\n  subscribeCharacteristic = (uuid, infoList, characteristicsList) => {\n    //console.log(\"subscribeCharacteristic\");\n    return new Promise(async (resolve) => {\n      this.getCharacteristicInit(uuid, characteristicsList).addEventListener(\"characteristicvaluechanged\", (event) => {\n        if (event.target.uuid === UUID.NOTIFY_MESSAGE) {\n          let msg = this.ab2str(event.target.value.buffer);\n          notify.show(msg, \"custom\", 3000, \"teal\");\n        } else if (event.target.uuid === UUID.CUSTOM_COMMAND_NOTIFY) {\n          let msg = this.ab2str(event.target.value.buffer);\n          if (this.state.commandOutputShouldRefresh) {\n            this.setState({ commandOutputShouldRefresh: false, commandOutput: \"\" }, () => {\n              let output = this.state.commandOutput + msg;\n              if (output.endsWith(\"&#&\")) {\n                output = output.replace(\"&#&\", \"\");\n                this.setState({ commandOutputShouldRefresh: true });\n              }\n              this.setState({ commandOutput: output });\n            });\n          } else {\n            let output = this.state.commandOutput + msg;\n            if (output.endsWith(\"&#&\")) {\n              output = output.replace(\"&#&\", \"\");\n              this.setState({ commandOutputShouldRefresh: true });\n            }\n            this.setState({ commandOutput: output });\n          }\n        } else {\n          let value = this.ab2str(event.target.value.buffer);\n          let tempInfoList = infoList;\n          if (tempInfoList.find((i) => i.uuid === uuid)) {\n            tempInfoList.find((i) => i.uuid === uuid).value = value;\n          }\n          if (tempInfoList.find((i) => i.uuid_label === uuid)) {\n            tempInfoList.find((i) => i.uuid_label === uuid).label = value;\n          }\n          this.setState({ infoList: tempInfoList });\n        }\n      });\n      await this.getCharacteristicInit(uuid, characteristicsList).startNotifications();\n      resolve();\n    });\n  };\n\n  webBleConnect = (service) => {\n    return new Promise(async (resolve) => {\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_INFO_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-info-count \" + value);\n          this.setState({ customInfoCount: value });\n        });\n      await service\n        .getCharacteristic(UUID.PREFIX + UUID.CUSTOM_COMMAND_COUNT)\n        .then((characteristic) => characteristic.readValue())\n        .then((i) => i.buffer)\n        .then(this.ab2str)\n        .then(parseInt)\n        .then((value) => {\n          console.log(\"custom-command-count \" + value);\n          this.setState({ customCommandCount: value }, () => {\n            let customInfoList = [];\n            for (let index = 0; index < this.state.customInfoCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO + ending);\n              customInfoList.push(UUID.PREFIX + UUID.CUSTOM_INFO_LABEL + ending);\n            }\n            let customCommandList = [];\n            for (let index = 0; index < this.state.customCommandCount; index++) {\n              let ending = (index + 1).toString(16);\n              ending = \"0\".repeat(4 - ending.length) + ending;\n              customCommandList.push(UUID.PREFIX + UUID.CUSTOM_COMMAND_LABEL + ending);\n            }\n            resolve(\n              Promise.all([\n                service.getCharacteristic(UUID.SERVICE_NAME),\n                service.getCharacteristic(UUID.DEVICE_MODEL),\n                service.getCharacteristic(UUID.WIFI_NAME),\n                service.getCharacteristic(UUID.IP_ADDRESS),\n                service.getCharacteristic(UUID.NOTIFY_MESSAGE),\n                service.getCharacteristic(UUID.INPUT_SEP),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_INPUT),\n                service.getCharacteristic(UUID.CUSTOM_COMMAND_NOTIFY),\n                ...customInfoList.map((i) => service.getCharacteristic(i)),\n                ...customCommandList.map((i) => service.getCharacteristic(i)),\n              ])\n            );\n          });\n        });\n    });\n  };\n  ab2str = (buf) => {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  };\n\n  getCharacteristic = (uuid) => {\n    return this.state.characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  getCharacteristicInit = (uuid, characteristicsList) => {\n    return characteristicsList.find((i) => i.uuid === uuid);\n  };\n\n  inputWifi = () => {\n    this.setState(\n      {\n        key: this.state.key.trim().replace(/\\|/g, \"*\"),\n        ssid: this.state.ssid.trim().replace(/\\|/g, \"*\"),\n        password: this.state.password.trim().replace(/\\|/g, \"*\"),\n      },\n      () => {\n        let errMsg;\n        if (this.state.ssid === \"\") {\n          errMsg = \"SSID cannot be empty.\";\n        }\n        if (this.state.password === \"\") {\n          errMsg = \"Password cannot be empty.\";\n        }\n        if (errMsg) {\n          notify.show(errMsg, \"custom\", 3000, \"teal\");\n          return;\n        }\n        this.setState({ wifiLock: true }, () =>\n          setTimeout(() => {\n            this.setState({ wifiLock: false });\n          }, 4000)\n        );\n\n        let sendArray = this.str2abs(`${this.state.key}%&%${this.state.ssid}%&%${this.state.password}&#&`);\n        this.sendSeparately(sendArray, UUID.INPUT_SEP);\n      }\n    );\n  };\n  sendCommand = (uuid) => {\n    let sendArray = this.str2abs(`${this.state.key}%&%${uuid.slice(-4)}&#&`);\n    this.sendSeparately(sendArray, UUID.CUSTOM_COMMAND_INPUT);\n  };\n  sendSeparately = async (array, uuid) => {\n    for (const i in array) {\n      await this.getCharacteristic(uuid).writeValue(array[i]);\n      await this.wait(0.4);\n    }\n  };\n  wait = async (sec) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000 * sec);\n    });\n  };\n  str2abs = (str) => {\n    let val = \"\";\n    for (let i = 0; i < str.length; i++) {\n      if (val === \"\") {\n        val = str.charCodeAt(i).toString(16);\n      } else {\n        val += \",\" + str.charCodeAt(i).toString(16);\n      }\n    }\n    let valArray = val.split(\",\");\n    let bufferArray = [];\n    while (valArray.length > 0) {\n      let value = valArray.splice(0, 20).join(\",\");\n      bufferArray.push(\n        new Uint8Array(\n          value.match(/[\\da-f]{2}/gi).map(function (h) {\n            return parseInt(h, 16);\n          })\n        ).buffer\n      );\n    }\n    return bufferArray;\n  };\n\n  render() {\n    return (\n      <div className=\"BluetoothConnect\">\n        <div id=\"app\">\n          <Notifications />\n          <div className=\"panel-container\">\n            {!this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">Cannot find web bluetooth.</div>\n                <p>\n                  Please make sure your device and browser support web bluetooth. Please visit{\" \"}\n                  <a href=\"https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md\" target=\"_brank\">\n                    Here\n                  </a>{\" \"}\n                  to check web-bluetooth compatibility.\n                </p>\n              </div>\n            ) : null}\n            {!this.state.isConnected && this.state.supportBluetooth ? (\n              <div className=\"connect-panel panel\">\n                <div className=\"panel-title\">PIBOX. 라즈베이파이를 블루투스로 찾아 제어할 수 있습니다.</div>\n                <div>\n                  <button className=\"findBluetooth\" onClick={this.connectDevice}>\n                    블루투스로 찾기\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"info-panel panel\">\n                <div className=\"panel-title\">기기 정보</div>\n                {this.state.infoList.map((item) => (\n                  <div key={item.uuid} className=\"info-group\">\n                    <div className=\"label\">{item.label}</div>\n                    <div className=\"value\">{item.value}</div>\n                  </div>\n                ))}\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"wifi-panel panel\">\n                <div className=\"panel-title\">라즈베리파이 와이파이 설정</div>\n                <div>\n                  <input placeholder=\"와이파이 이름(SSID)\" value={this.state.ssid} onChange={(value) => this.setState({ ssid: value.target.value })} />\n                </div>\n                <div>\n                  <input placeholder=\"와이파이 비밀번호\" value={this.state.password} onChange={(value) => this.setState({ password: value.target.value })} type=\"password\" />\n                </div>\n                <div>\n                  <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                </div>\n                <div>\n                  <button onClick={this.inputWifi} disabled={this.state.wifiLock}>\n                    와이파이 설정\n                  </button>\n                </div>\n              </div>\n            ) : null}\n            {this.state.isConnected ? (\n              <div className=\"command-panel panel\">\n                <div className=\"panel-title\">커스텀 명령어</div>\n                {this.state.commandList.length > 0 ? (\n                  <div>\n                    <div>\n                      {this.state.commandList.map((item) => (\n                        <div key={item.uuid} className=\"button-wrap\">\n                          <button size=\"small\" onClick={() => this.sendCommand(item.uuid)}>\n                            {item.label}\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div>\n                      <input placeholder=\"Key (Default: pibox)\" value={this.state.key} onChange={(value) => this.setState({ key: value.target.value })} />\n                    </div>\n                    <div>\n                      <input type=\"textarea\" placeholder=\"Output\" value={this.state.commandOutput} readOnly={true} rows=\"10\" />\n                    </div>\n                  </div>\n                ) : (\n                  <p>커스텀 명령어가 없습니다.</p>\n                )}\n              </div>\n            ) : null}\n          </div>\n          {this.state.isConnected && false ? (\n            <div className=\"panel-container\">\n              <WifiSSH ipAddress={this.state.infoList.find((i) => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find((i) => i.label === \"IP Address\").value} />\n            </div>\n          ) : null}\n          {this.state.isConnected && this.state.infoList.find((i) => i.label === \"Machine ID\") !== undefined ? (\n            <div className=\"panel-container\">\n              <BlockCode\n                ipAddress={this.state.infoList.find((i) => i.label === \"IP Address\") === undefined ? \"\" : this.state.infoList.find((i) => i.label === \"IP Address\").value}\n                machineId={this.state.infoList.find((i) => i.label === \"Machine ID\") === undefined ? \"\" : this.state.infoList.find((i) => i.label === \"Machine ID\").value}\n              />\n            </div>\n          ) : null}\n\n          <div className=\"copyright\">PiBox . Open source under GPL-3.0 license.</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport BluetoothConnect from \"./BluetoothConnect\";\n\nfunction App() {\n  return <BluetoothConnect />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") || document.createElement(\"div\"));\n","module.exports = {\n  PREFIX: \"00000000-0000-0000-0000-\",\n  SERVICE_ID: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0000\",\n  SERVICE_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0001\",\n  DEVICE_MODEL: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0002\",\n  WIFI_NAME: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0003\",\n  IP_ADDRESS: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0004\",\n  INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0005\",\n  NOTIFY_MESSAGE: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0006\",\n  INPUT_SEP: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0007\",\n  CUSTOM_COMMAND_INPUT: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0008\",\n  CUSTOM_COMMAND_NOTIFY: \"FD2B4448-AA0F-4A15-A62F-EB0BE77A0009\",\n  CUSTOM_INFO_LABEL: \"FD2BCCCA\",\n  CUSTOM_INFO_COUNT: \"FD2BCCAA0000\",\n  CUSTOM_INFO: \"FD2BCCCB\",\n  CUSTOM_COMMAND_LABEL: \"FD2BCCCC\",\n  CUSTOM_COMMAND_COUNT: \"FD2BCCAC0000\"\n};\n","module.exports = __webpack_public_path__ + \"static/media/servomotor.ba097c0f.png\";","module.exports = __webpack_public_path__ + \"static/media/motor.d4643de8.png\";","module.exports = __webpack_public_path__ + \"static/media/led.cd049886.png\";","module.exports = __webpack_public_path__ + \"static/media/none.bd980005.png\";"],"sourceRoot":""}